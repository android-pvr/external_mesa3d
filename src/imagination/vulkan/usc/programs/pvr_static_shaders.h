/*
 * Copyright Â© 2022 Imagination Technologies Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

#ifndef PVR_STATIC_SHADERS_H
#define PVR_STATIC_SHADERS_H

#include <stdint.h>
#include <stddef.h>

/* TODO: Remove this once compiler is integrated. */
#define PVR_INVALID_INST (~0)

struct pvr_static_buffer {
   uint32_t dst_idx;
   uint32_t value;
};

struct pvr_shader_factory_info {
   uint32_t temps_required;
   uint32_t const_shared_regs;
   uint32_t coeff_regs;
   uint32_t input_regs;
   uint32_t explicit_const_start_offset;
   uint32_t code_size;
   const uint8_t *const shader_code;
   uint32_t const_calc_prog_inst_bytes;
   uint32_t sec_temp_regs;
   const uint8_t *const_calc_program;
   uint32_t coeff_update_prog_start;
   uint32_t coeff_update_temp_regs;
   const uint32_t *driver_const_location_map;
   uint32_t num_driver_consts;
   const struct pvr_static_buffer *static_const_buffer;
   uint32_t num_static_const;
};

static const uint8_t availability_query_write_shader[] = {
   0x68, 0xf2, 0x40, 0x00, 0x41, 0x80, 0x80, 0x40, 0x00, 0x1f, 0x80, 0xc0, 0x10,
   0x81, 0x04, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x90, 0x08, 0x00, 0x00, 0x00, 0x80,
   0x04, 0xff, 0x26, 0x02, 0xe2, 0xc0, 0x40, 0x18, 0x81, 0x00, 0x00, 0x85, 0x04,
   0xff, 0x46, 0x40, 0xfb, 0xb0, 0x87, 0x8c, 0x18, 0x00, 0x85, 0x04, 0x00, 0x02,
   0x44, 0x82, 0x67, 0x28, 0x00, 0x00, 0x86, 0x04, 0x04, 0x80, 0x60, 0x04, 0x44,
   0x00, 0x00, 0x00, 0x68, 0x20, 0xe4, 0xa2, 0x80, 0x02, 0x84, 0x45, 0x88, 0x00,
   0x88, 0x8f, 0xc0, 0x88, 0x08, 0x00, 0x46, 0x16, 0xd3, 0x3f, 0x91, 0x08, 0x00,
   0x00, 0xc0, 0x01, 0x82, 0x22, 0x46, 0x16, 0xd3, 0x3f, 0x91, 0x08, 0x00, 0x00,
   0xc0, 0x03, 0x84, 0x22, 0x02, 0x80, 0x6a, 0xff, 0x68, 0x20, 0xf4, 0xae, 0x81,
   0x02, 0x88, 0x40, 0x88, 0x00, 0x88, 0x8f, 0x08, 0x00, 0x00, 0xff, 0x45, 0x82,
   0x67, 0x24, 0x86, 0x04, 0x00, 0x00, 0x86, 0x04, 0x03, 0x80, 0x6a, 0xff, 0xf1,
   0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t availability_query_write_location_map[1] = {
   12,
};

static const struct pvr_static_buffer
   availability_query_write_static_consts[3] = {
      { 15, 0 },
      { 16, 32 },
      { 17, 19114957 },
   };

static const struct pvr_shader_factory_info availability_query_write_info = {
   0,
   18,
   3,
   8,
   0,
   sizeof(availability_query_write_shader),
   availability_query_write_shader,
   0,
   0,
   NULL,
   PVR_INVALID_INST,
   0,
   availability_query_write_location_map,
   1,
   availability_query_write_static_consts,
   3,
};

static const uint8_t copy_query_results_shader[] = {
   0x68, 0xf2, 0x40, 0x00, 0x41, 0x80, 0x80, 0x40, 0x00, 0x1f, 0x80, 0xc0, 0x10,
   0x82, 0x04, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x96, 0x08, 0x00, 0x00, 0x00, 0x81,
   0x04, 0xff, 0x26, 0x02, 0xe2, 0xc0, 0x41, 0x18, 0x82, 0x00, 0x00, 0x80, 0x04,
   0xff, 0x46, 0x40, 0xfb, 0xb0, 0x87, 0x8d, 0x18, 0x00, 0x80, 0x04, 0x00, 0x02,
   0x44, 0x82, 0x67, 0x28, 0x00, 0x00, 0x84, 0x04, 0x04, 0x80, 0x60, 0x04, 0x42,
   0x01, 0x00, 0x00, 0x68, 0x20, 0xe4, 0xa6, 0x80, 0x02, 0x84, 0x40, 0x88, 0x00,
   0x88, 0x95, 0xc2, 0x88, 0x08, 0x00, 0x27, 0x06, 0xe3, 0x90, 0x40, 0xa8, 0x0e,
   0x88, 0x8f, 0x08, 0x00, 0x30, 0x84, 0x43, 0x02, 0x80, 0x6a, 0xff, 0x67, 0xf0,
   0x40, 0x28, 0x40, 0x80, 0x80, 0x40, 0x80, 0x11, 0x80, 0x82, 0xc0, 0x10, 0x45,
   0x82, 0x67, 0x28, 0x84, 0x04, 0x00, 0x00, 0x84, 0x04, 0x04, 0x80, 0x60, 0x04,
   0x70, 0x00, 0x00, 0x00, 0x68, 0x20, 0xe4, 0xa6, 0x88, 0x02, 0x88, 0x40, 0x88,
   0x00, 0x88, 0x95, 0xe5, 0x80, 0x08, 0x00, 0x45, 0x10, 0xf3, 0xb0, 0x8c, 0x08,
   0x00, 0x00, 0x01, 0xff, 0x45, 0x82, 0x67, 0x28, 0x84, 0x04, 0x00, 0x00, 0x84,
   0x04, 0x04, 0x80, 0x60, 0x04, 0x18, 0x00, 0x00, 0x00, 0x02, 0x80, 0x6a, 0xff,
   0x56, 0x20, 0xf2, 0xaa, 0x48, 0x00, 0x80, 0x65, 0x00, 0x43, 0x00, 0xff, 0x45,
   0x82, 0x67, 0x21, 0x84, 0x04, 0x00, 0x00, 0x84, 0x04, 0x04, 0x80, 0x60, 0x04,
   0x18, 0x00, 0x00, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x56, 0x20, 0xf2, 0xa6, 0x48,
   0x00, 0x80, 0x65, 0x00, 0x43, 0x00, 0xff, 0x45, 0x82, 0x67, 0x24, 0x84, 0x04,
   0x00, 0x00, 0x84, 0x04, 0x45, 0x82, 0x67, 0x24, 0x84, 0x04, 0x00, 0x00, 0x84,
   0x04, 0x45, 0x10, 0xf3, 0xb0, 0x92, 0x08, 0x00, 0x00, 0x01, 0xff, 0x45, 0x82,
   0x67, 0x28, 0x84, 0x04, 0x00, 0x00, 0x84, 0x04, 0x04, 0x80, 0x60, 0x04, 0x68,
   0x00, 0x00, 0x00, 0x45, 0x10, 0xf3, 0xb0, 0x8c, 0x08, 0x00, 0x00, 0x01, 0xff,
   0x45, 0x82, 0x67, 0x28, 0x84, 0x04, 0x00, 0x00, 0x84, 0x04, 0x04, 0x80, 0x60,
   0x04, 0x1c, 0x00, 0x00, 0x00, 0x7a, 0x66, 0xf2, 0xaa, 0x48, 0xd0, 0x3f, 0xe0,
   0xc3, 0x64, 0x00, 0x08, 0x80, 0x42, 0x08, 0x80, 0xc0, 0x00, 0x81, 0x22, 0x45,
   0x82, 0x67, 0x21, 0x84, 0x04, 0x00, 0x00, 0x84, 0x04, 0x04, 0x80, 0x60, 0x04,
   0x1c, 0x00, 0x00, 0x00, 0x7a, 0x66, 0xf2, 0xa6, 0x48, 0xd3, 0x3f, 0xe0, 0xc3,
   0x64, 0x00, 0x04, 0x80, 0x42, 0x08, 0x80, 0x00, 0x01, 0x80, 0x22, 0x45, 0x82,
   0x67, 0x24, 0x84, 0x04, 0x00, 0x00, 0x84, 0x04, 0x45, 0x82, 0x67, 0x24, 0x84,
   0x04, 0x00, 0x00, 0x84, 0x04, 0x45, 0x82, 0x67, 0x24, 0x84, 0x04, 0x00, 0x00,
   0x84, 0x04, 0x04, 0x80, 0x6a, 0xff, 0xf2, 0xff, 0xff, 0xff, 0x04, 0x80, 0xee,
   0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t copy_query_results_location_map[7] = {
   13, 14, 15, 16, 17, 12, 18,
};

static const struct pvr_static_buffer copy_query_results_static_consts[2] = {
   { 21, 0 },
   { 22, 32 },
};

static const struct pvr_shader_factory_info copy_query_results_info = {
   7,
   23,
   3,
   8,
   0,
   sizeof(copy_query_results_shader),
   copy_query_results_shader,
   0,
   0,
   NULL,
   PVR_INVALID_INST,
   0,
   copy_query_results_location_map,
   7,
   copy_query_results_static_consts,
   2,
};

static const uint8_t reset_query_shader_code[] = {
   0x68, 0xf2, 0x40, 0x00, 0x41, 0x80, 0x80, 0x40, 0x00, 0x1f, 0x80, 0xc0,
   0x10, 0x82, 0x04, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x90, 0x08, 0x00, 0x00,
   0x00, 0x81, 0x04, 0xff, 0x26, 0x02, 0xe2, 0xc0, 0x41, 0x18, 0x82, 0x00,
   0x00, 0x80, 0x04, 0xff, 0x46, 0x40, 0xfb, 0xb0, 0x87, 0x8c, 0x18, 0x00,
   0x80, 0x04, 0x00, 0x02, 0x44, 0x82, 0x67, 0x28, 0x00, 0x00, 0x85, 0x04,
   0x04, 0x80, 0x60, 0x04, 0x3c, 0x00, 0x00, 0x00, 0x45, 0x16, 0xd3, 0x3f,
   0x00, 0x00, 0xc0, 0x01, 0x82, 0x22, 0x45, 0x16, 0xd3, 0x3f, 0x00, 0x00,
   0xc0, 0x03, 0x84, 0x22, 0x68, 0x20, 0xf4, 0xae, 0x81, 0x02, 0x84, 0x40,
   0x88, 0x00, 0x88, 0x8f, 0x08, 0x00, 0x00, 0xff, 0x68, 0x20, 0xf4, 0xae,
   0x81, 0x02, 0x88, 0x40, 0x88, 0x00, 0x88, 0x8f, 0x08, 0x00, 0x00, 0xff,
   0x45, 0x82, 0x67, 0x24, 0x85, 0x04, 0x00, 0x00, 0x85, 0x04, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t reset_query_location_map[1] = {
   12,
};

static const struct pvr_static_buffer reset_query_static_consts[2] = {
   { 15, 0 },
   { 16, 32 },
};

static const struct pvr_shader_factory_info reset_query_info = {
   0,
   17,
   3,
   8,
   0,
   sizeof(reset_query_shader_code),
   reset_query_shader_code,
   0,
   0,
   NULL,
   PVR_INVALID_INST,
   0,
   reset_query_location_map,
   1,
   reset_query_static_consts,
   2,
};

static const struct pvr_shader_factory_info
   *const copy_query_results_collection[1] = {
      &copy_query_results_info,
   };

static const struct pvr_shader_factory_info *const reset_query_collection[1] = {
   &reset_query_info,
};

static const uint8_t clear_attachments_1_dw_0_offt_out_reg_shader_code[16] = {
   0x58, 0x9a, 0x80, 0xd3, 0x3f, 0x80, 0x08, 0x00,
   0x00, 0x00, 0x20, 0xff, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_1_dw_0_offt_out_reg_const_dest[6] = {
   0, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_1_dw_0_offt_out_reg_info = {
      0,
      1,
      0,
      0,
      0,
      sizeof(clear_attachments_1_dw_0_offt_out_reg_shader_code),
      clear_attachments_1_dw_0_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_1_dw_0_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_1_dw_0_offt_out_mem_shader_code[64] = {
   0x26, 0x06, 0x87, 0x82, 0x40, 0xa0, 0x00, 0x98, 0x00, 0x30, 0x82, 0x24, 0x34,
   0x22, 0x20, 0x00, 0x00, 0x00, 0x43, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x81, 0x44, 0x81, 0x3a, 0x08, 0xc3, 0x62, 0x00, 0x40, 0x00,
   0x81, 0x40, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_1_dw_0_offt_out_mem_const_dest[6] = {
   0, 4294967295, 4294967295, 4294967295, 2, 1,
};

static const struct pvr_shader_factory_info
   clear_attachments_1_dw_0_offt_out_mem_info = {
      4,
      3,
      0,
      0,
      0,
      sizeof(clear_attachments_1_dw_0_offt_out_mem_shader_code),
      clear_attachments_1_dw_0_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_1_dw_0_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_2_dw_0_offt_out_reg_shader_code[16] = {
   0x38, 0x8e, 0x80, 0x87, 0x80, 0x40, 0xa0, 0x01,
   0x98, 0x00, 0xc0, 0x20, 0x21, 0xff, 0xf1, 0xff,
};

static const uint32_t clear_attachments_2_dw_0_offt_out_reg_const_dest[6] = {
   0, 1, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_2_dw_0_offt_out_reg_info = {
      0,
      2,
      0,
      0,
      0,
      sizeof(clear_attachments_2_dw_0_offt_out_reg_shader_code),
      clear_attachments_2_dw_0_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_2_dw_0_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_2_dw_0_offt_out_mem_shader_code[96] = {
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x46, 0xff, 0x26, 0x06, 0x87, 0x80,
   0x40, 0xa0, 0x01, 0x98, 0x00, 0xc0, 0x82, 0x45, 0x45, 0x12, 0xd3, 0x3f,
   0x83, 0x08, 0x00, 0x00, 0x00, 0x24, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x82, 0x44, 0x81, 0x3a, 0x08, 0xc6, 0x62, 0x00, 0x40,
   0x00, 0x81, 0x40, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f,
   0xe0, 0x82, 0x44, 0x81, 0x3b, 0x08, 0xc6, 0x65, 0x00, 0x43, 0x00, 0x84,
   0x43, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_2_dw_0_offt_out_mem_const_dest[6] = {
   0, 1, 4294967295, 4294967295, 3, 2,
};

static const struct pvr_shader_factory_info
   clear_attachments_2_dw_0_offt_out_mem_info = {
      7,
      4,
      0,
      0,
      0,
      sizeof(clear_attachments_2_dw_0_offt_out_mem_shader_code),
      clear_attachments_2_dw_0_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_2_dw_0_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_3_dw_0_offt_out_reg_shader_code[32] = {
   0x48, 0x1a, 0xd3, 0x3f, 0x80, 0x08, 0x00, 0x00, 0x00, 0x20, 0xf3,
   0xff, 0xff, 0xff, 0xff, 0xff, 0x38, 0x8e, 0x80, 0x87, 0x81, 0x40,
   0xa0, 0x02, 0x98, 0x00, 0xc0, 0x21, 0x22, 0xff, 0xf1, 0xff,
};

static const uint32_t clear_attachments_3_dw_0_offt_out_reg_const_dest[6] = {
   0, 1, 2, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_3_dw_0_offt_out_reg_info = {
      0,
      3,
      0,
      0,
      0,
      sizeof(clear_attachments_3_dw_0_offt_out_reg_shader_code),
      clear_attachments_3_dw_0_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_3_dw_0_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_3_dw_0_offt_out_mem_shader_code[120] = {
   0x26, 0x06, 0x87, 0x84, 0x40, 0xa0, 0x00, 0x98, 0x00, 0x30, 0x88, 0x24,
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x49, 0xff, 0x26, 0x06, 0x87, 0x81,
   0x40, 0xa0, 0x02, 0x98, 0x00, 0xc0, 0x85, 0x42, 0x8b, 0x6e, 0xf2, 0xa6,
   0xc8, 0x0b, 0xd3, 0x3f, 0xe0, 0x83, 0x44, 0x81, 0x3a, 0x08, 0xc9, 0x68,
   0x00, 0x46, 0x00, 0x87, 0x46, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x83, 0x44, 0x81, 0x3b, 0x08, 0xc9, 0x65, 0x00, 0x43,
   0x00, 0x84, 0x43, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f,
   0xe0, 0x83, 0x44, 0x81, 0x3c, 0x08, 0xc9, 0x62, 0x00, 0x40, 0x00, 0x81,
   0x40, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_3_dw_0_offt_out_mem_const_dest[6] = {
   0, 1, 2, 4294967295, 4, 3,
};

static const struct pvr_shader_factory_info
   clear_attachments_3_dw_0_offt_out_mem_info = {
      10,
      5,
      0,
      0,
      0,
      sizeof(clear_attachments_3_dw_0_offt_out_mem_shader_code),
      clear_attachments_3_dw_0_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_3_dw_0_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_4_dw_0_offt_out_reg_shader_code[32] = {
   0x28, 0x0e, 0x87, 0x80, 0x40, 0xa0, 0x01, 0x98, 0x00, 0xc0, 0x20,
   0x21, 0xf2, 0xff, 0xff, 0xff, 0x38, 0x8e, 0x80, 0x87, 0x82, 0x40,
   0xa0, 0x03, 0x98, 0x00, 0xc0, 0x22, 0x23, 0xff, 0xf1, 0xff,
};

static const uint32_t clear_attachments_4_dw_0_offt_out_reg_const_dest[6] = {
   0, 1, 2, 3, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_4_dw_0_offt_out_reg_info = {
      0,
      4,
      0,
      0,
      0,
      sizeof(clear_attachments_4_dw_0_offt_out_reg_shader_code),
      clear_attachments_4_dw_0_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_4_dw_0_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_4_dw_0_offt_out_mem_shader_code[160] = {
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x4b, 0xff, 0x26, 0x06, 0x87, 0x82, 0x40,
   0xa0, 0x03, 0x98, 0x00, 0xc0, 0x86, 0x43, 0x26, 0x06, 0x87, 0x80, 0x40, 0xa0,
   0x01, 0x98, 0x00, 0xc0, 0x82, 0x49, 0x45, 0x12, 0xd3, 0x3f, 0x85, 0x08, 0x00,
   0x00, 0x00, 0x24, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f, 0xe0, 0x84,
   0x44, 0x81, 0x3a, 0x08, 0xcb, 0x62, 0x00, 0x40, 0x00, 0x81, 0x40, 0xff, 0x8b,
   0x6e, 0xfa, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f, 0xe0, 0x84, 0x44, 0x81, 0x3b, 0x08,
   0xcb, 0x69, 0x00, 0x47, 0x00, 0x88, 0x47, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8,
   0x0b, 0xd3, 0x3f, 0xe0, 0x84, 0x44, 0x81, 0x3c, 0x08, 0xcb, 0x66, 0x00, 0x44,
   0x00, 0x85, 0x44, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8,
   0x0b, 0xd3, 0x3f, 0xe0, 0x84, 0x44, 0x81, 0x3d, 0x08, 0xcb, 0x63, 0x00, 0x41,
   0x00, 0x82, 0x41, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x05,
   0x80, 0xea, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x04, 0x80, 0xee, 0x00,
   0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_4_dw_0_offt_out_mem_const_dest[6] = {
   0, 1, 2, 3, 5, 4,
};

static const struct pvr_shader_factory_info
   clear_attachments_4_dw_0_offt_out_mem_info = {
      12,
      6,
      0,
      0,
      0,
      sizeof(clear_attachments_4_dw_0_offt_out_mem_shader_code),
      clear_attachments_4_dw_0_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_4_dw_0_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_1_dw_1_offt_out_reg_shader_code[16] = {
   0x58, 0x9a, 0x80, 0xd3, 0x3f, 0x80, 0x08, 0x00,
   0x00, 0x00, 0x21, 0xff, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_1_dw_1_offt_out_reg_const_dest[6] = {
   0, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_1_dw_1_offt_out_reg_info = {
      0,
      1,
      0,
      0,
      0,
      sizeof(clear_attachments_1_dw_1_offt_out_reg_shader_code),
      clear_attachments_1_dw_1_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_1_dw_1_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_1_dw_1_offt_out_mem_shader_code[64] = {
   0x26, 0x06, 0x87, 0x82, 0x40, 0xa0, 0x00, 0x98, 0x00, 0x30, 0x82, 0x24, 0x34,
   0x22, 0x20, 0x00, 0x00, 0x00, 0x43, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x81, 0x44, 0x81, 0x3b, 0x08, 0xc3, 0x62, 0x00, 0x40, 0x00,
   0x81, 0x40, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_1_dw_1_offt_out_mem_const_dest[6] = {
   0, 4294967295, 4294967295, 4294967295, 2, 1,
};

static const struct pvr_shader_factory_info
   clear_attachments_1_dw_1_offt_out_mem_info = {
      4,
      3,
      0,
      0,
      0,
      sizeof(clear_attachments_1_dw_1_offt_out_mem_shader_code),
      clear_attachments_1_dw_1_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_1_dw_1_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_2_dw_1_offt_out_reg_shader_code[16] = {
   0x38, 0x8e, 0x80, 0x87, 0x80, 0x40, 0xa0, 0x01,
   0x98, 0x00, 0xc0, 0x21, 0x22, 0xff, 0xf1, 0xff,
};

static const uint32_t clear_attachments_2_dw_1_offt_out_reg_const_dest[6] = {
   0, 1, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_2_dw_1_offt_out_reg_info = {
      0,
      2,
      0,
      0,
      0,
      sizeof(clear_attachments_2_dw_1_offt_out_reg_shader_code),
      clear_attachments_2_dw_1_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_2_dw_1_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_2_dw_1_offt_out_mem_shader_code[96] = {
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x46, 0xff, 0x26, 0x06, 0x87, 0x80,
   0x40, 0xa0, 0x01, 0x98, 0x00, 0xc0, 0x82, 0x45, 0x45, 0x12, 0xd3, 0x3f,
   0x83, 0x08, 0x00, 0x00, 0x00, 0x24, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x82, 0x44, 0x81, 0x3b, 0x08, 0xc6, 0x62, 0x00, 0x40,
   0x00, 0x81, 0x40, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f,
   0xe0, 0x82, 0x44, 0x81, 0x3c, 0x08, 0xc6, 0x65, 0x00, 0x43, 0x00, 0x84,
   0x43, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_2_dw_1_offt_out_mem_const_dest[6] = {
   0, 1, 4294967295, 4294967295, 3, 2,
};

static const struct pvr_shader_factory_info
   clear_attachments_2_dw_1_offt_out_mem_info = {
      7,
      4,
      0,
      0,
      0,
      sizeof(clear_attachments_2_dw_1_offt_out_mem_shader_code),
      clear_attachments_2_dw_1_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_2_dw_1_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_3_dw_1_offt_out_reg_shader_code[32] = {
   0x48, 0x1a, 0xd3, 0x3f, 0x80, 0x08, 0x00, 0x00, 0x00, 0x21, 0xf3,
   0xff, 0xff, 0xff, 0xff, 0xff, 0x38, 0x8e, 0x80, 0x87, 0x81, 0x40,
   0xa0, 0x02, 0x98, 0x00, 0xc0, 0x22, 0x23, 0xff, 0xf1, 0xff,
};

static const uint32_t clear_attachments_3_dw_1_offt_out_reg_const_dest[6] = {
   0, 1, 2, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_3_dw_1_offt_out_reg_info = {
      0,
      3,
      0,
      0,
      0,
      sizeof(clear_attachments_3_dw_1_offt_out_reg_shader_code),
      clear_attachments_3_dw_1_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_3_dw_1_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_3_dw_1_offt_out_mem_shader_code[120] = {
   0x26, 0x06, 0x87, 0x84, 0x40, 0xa0, 0x00, 0x98, 0x00, 0x30, 0x88, 0x24,
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x49, 0xff, 0x26, 0x06, 0x87, 0x81,
   0x40, 0xa0, 0x02, 0x98, 0x00, 0xc0, 0x85, 0x42, 0x8b, 0x6e, 0xf2, 0xa6,
   0xc8, 0x0b, 0xd3, 0x3f, 0xe0, 0x83, 0x44, 0x81, 0x3b, 0x08, 0xc9, 0x68,
   0x00, 0x46, 0x00, 0x87, 0x46, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x83, 0x44, 0x81, 0x3c, 0x08, 0xc9, 0x65, 0x00, 0x43,
   0x00, 0x84, 0x43, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f,
   0xe0, 0x83, 0x44, 0x81, 0x3d, 0x08, 0xc9, 0x62, 0x00, 0x40, 0x00, 0x81,
   0x40, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_3_dw_1_offt_out_mem_const_dest[6] = {
   0, 1, 2, 4294967295, 4, 3,
};

static const struct pvr_shader_factory_info
   clear_attachments_3_dw_1_offt_out_mem_info = {
      10,
      5,
      0,
      0,
      0,
      sizeof(clear_attachments_3_dw_1_offt_out_mem_shader_code),
      clear_attachments_3_dw_1_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_3_dw_1_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_4_dw_1_offt_out_reg_shader_code[32] = {
   0x28, 0x0e, 0x87, 0x80, 0x40, 0xa0, 0x01, 0x98, 0x00, 0xc0, 0x21,
   0x22, 0xf2, 0xff, 0xff, 0xff, 0x38, 0x8e, 0x80, 0x87, 0x82, 0x40,
   0xa0, 0x03, 0x98, 0x00, 0xc0, 0x23, 0xa4, 0x10, 0xf1, 0xff,
};

static const uint32_t clear_attachments_4_dw_1_offt_out_reg_const_dest[6] = {
   0, 1, 2, 3, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_4_dw_1_offt_out_reg_info = {
      0,
      4,
      0,
      0,
      0,
      sizeof(clear_attachments_4_dw_1_offt_out_reg_shader_code),
      clear_attachments_4_dw_1_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_4_dw_1_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_4_dw_1_offt_out_mem_shader_code[160] = {
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x4b, 0xff, 0x26, 0x06, 0x87, 0x82, 0x40,
   0xa0, 0x03, 0x98, 0x00, 0xc0, 0x86, 0x43, 0x26, 0x06, 0x87, 0x80, 0x40, 0xa0,
   0x01, 0x98, 0x00, 0xc0, 0x82, 0x49, 0x45, 0x12, 0xd3, 0x3f, 0x85, 0x08, 0x00,
   0x00, 0x00, 0x24, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f, 0xe0, 0x84,
   0x44, 0x81, 0x3b, 0x08, 0xcb, 0x62, 0x00, 0x40, 0x00, 0x81, 0x40, 0xff, 0x8b,
   0x6e, 0xfa, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f, 0xe0, 0x84, 0x44, 0x81, 0x3c, 0x08,
   0xcb, 0x69, 0x00, 0x47, 0x00, 0x88, 0x47, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8,
   0x0b, 0xd3, 0x3f, 0xe0, 0x84, 0x44, 0x81, 0x3d, 0x08, 0xcb, 0x66, 0x00, 0x44,
   0x00, 0x85, 0x44, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8,
   0x0b, 0xd3, 0x3f, 0xe0, 0x84, 0x44, 0x81, 0x3b, 0x28, 0xcb, 0x63, 0x00, 0x41,
   0x00, 0x82, 0x41, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x05,
   0x80, 0xea, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x04, 0x80, 0xee, 0x00,
   0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_4_dw_1_offt_out_mem_const_dest[6] = {
   0, 1, 2, 3, 5, 4,
};

static const struct pvr_shader_factory_info
   clear_attachments_4_dw_1_offt_out_mem_info = {
      12,
      6,
      0,
      0,
      0,
      sizeof(clear_attachments_4_dw_1_offt_out_mem_shader_code),
      clear_attachments_4_dw_1_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_4_dw_1_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_1_dw_2_offt_out_reg_shader_code[16] = {
   0x58, 0x9a, 0x80, 0xd3, 0x3f, 0x80, 0x08, 0x00,
   0x00, 0x00, 0x22, 0xff, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_1_dw_2_offt_out_reg_const_dest[6] = {
   0, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_1_dw_2_offt_out_reg_info = {
      0,
      1,
      0,
      0,
      0,
      sizeof(clear_attachments_1_dw_2_offt_out_reg_shader_code),
      clear_attachments_1_dw_2_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_1_dw_2_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_1_dw_2_offt_out_mem_shader_code[64] = {
   0x26, 0x06, 0x87, 0x82, 0x40, 0xa0, 0x00, 0x98, 0x00, 0x30, 0x82, 0x24, 0x34,
   0x22, 0x20, 0x00, 0x00, 0x00, 0x43, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x81, 0x44, 0x81, 0x3c, 0x08, 0xc3, 0x62, 0x00, 0x40, 0x00,
   0x81, 0x40, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_1_dw_2_offt_out_mem_const_dest[6] = {
   0, 4294967295, 4294967295, 4294967295, 2, 1,
};

static const struct pvr_shader_factory_info
   clear_attachments_1_dw_2_offt_out_mem_info = {
      4,
      3,
      0,
      0,
      0,
      sizeof(clear_attachments_1_dw_2_offt_out_mem_shader_code),
      clear_attachments_1_dw_2_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_1_dw_2_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_2_dw_2_offt_out_reg_shader_code[16] = {
   0x38, 0x8e, 0x80, 0x87, 0x80, 0x40, 0xa0, 0x01,
   0x98, 0x00, 0xc0, 0x22, 0x23, 0xff, 0xf1, 0xff,
};

static const uint32_t clear_attachments_2_dw_2_offt_out_reg_const_dest[6] = {
   0, 1, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_2_dw_2_offt_out_reg_info = {
      0,
      2,
      0,
      0,
      0,
      sizeof(clear_attachments_2_dw_2_offt_out_reg_shader_code),
      clear_attachments_2_dw_2_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_2_dw_2_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_2_dw_2_offt_out_mem_shader_code[96] = {
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x46, 0xff, 0x26, 0x06, 0x87, 0x80,
   0x40, 0xa0, 0x01, 0x98, 0x00, 0xc0, 0x82, 0x45, 0x45, 0x12, 0xd3, 0x3f,
   0x83, 0x08, 0x00, 0x00, 0x00, 0x24, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x82, 0x44, 0x81, 0x3c, 0x08, 0xc6, 0x62, 0x00, 0x40,
   0x00, 0x81, 0x40, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f,
   0xe0, 0x82, 0x44, 0x81, 0x3d, 0x08, 0xc6, 0x65, 0x00, 0x43, 0x00, 0x84,
   0x43, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_2_dw_2_offt_out_mem_const_dest[6] = {
   0, 1, 4294967295, 4294967295, 3, 2,
};

static const struct pvr_shader_factory_info
   clear_attachments_2_dw_2_offt_out_mem_info = {
      7,
      4,
      0,
      0,
      0,
      sizeof(clear_attachments_2_dw_2_offt_out_mem_shader_code),
      clear_attachments_2_dw_2_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_2_dw_2_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_3_dw_2_offt_out_reg_shader_code[32] = {
   0x48, 0x1a, 0xd3, 0x3f, 0x80, 0x08, 0x00, 0x00, 0x00, 0x22, 0xf3,
   0xff, 0xff, 0xff, 0xff, 0xff, 0x38, 0x8e, 0x80, 0x87, 0x81, 0x40,
   0xa0, 0x02, 0x98, 0x00, 0xc0, 0x23, 0xa4, 0x10, 0xf1, 0xff,
};

static const uint32_t clear_attachments_3_dw_2_offt_out_reg_const_dest[6] = {
   0, 1, 2, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_3_dw_2_offt_out_reg_info = {
      0,
      3,
      0,
      0,
      0,
      sizeof(clear_attachments_3_dw_2_offt_out_reg_shader_code),
      clear_attachments_3_dw_2_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_3_dw_2_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_3_dw_2_offt_out_mem_shader_code[120] = {
   0x26, 0x06, 0x87, 0x84, 0x40, 0xa0, 0x00, 0x98, 0x00, 0x30, 0x88, 0x24,
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x49, 0xff, 0x26, 0x06, 0x87, 0x81,
   0x40, 0xa0, 0x02, 0x98, 0x00, 0xc0, 0x85, 0x42, 0x8b, 0x6e, 0xf2, 0xa6,
   0xc8, 0x0b, 0xd3, 0x3f, 0xe0, 0x83, 0x44, 0x81, 0x3c, 0x08, 0xc9, 0x68,
   0x00, 0x46, 0x00, 0x87, 0x46, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x83, 0x44, 0x81, 0x3d, 0x08, 0xc9, 0x65, 0x00, 0x43,
   0x00, 0x84, 0x43, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f,
   0xe0, 0x83, 0x44, 0x81, 0x3b, 0x28, 0xc9, 0x62, 0x00, 0x40, 0x00, 0x81,
   0x40, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_3_dw_2_offt_out_mem_const_dest[6] = {
   0, 1, 2, 4294967295, 4, 3,
};

static const struct pvr_shader_factory_info
   clear_attachments_3_dw_2_offt_out_mem_info = {
      10,
      5,
      0,
      0,
      0,
      sizeof(clear_attachments_3_dw_2_offt_out_mem_shader_code),
      clear_attachments_3_dw_2_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_3_dw_2_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_4_dw_2_offt_out_reg_shader_code[32] = {
   0x28, 0x0e, 0x87, 0x80, 0x40, 0xa0, 0x01, 0x98, 0x00, 0xc0, 0x22,
   0x23, 0xf2, 0xff, 0xff, 0xff, 0x38, 0x8e, 0x80, 0x87, 0x82, 0x40,
   0xa0, 0x03, 0x98, 0x00, 0xc0, 0x24, 0xa5, 0x11, 0xf1, 0xff,
};

static const uint32_t clear_attachments_4_dw_2_offt_out_reg_const_dest[6] = {
   0, 1, 2, 3, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_4_dw_2_offt_out_reg_info = {
      0,
      4,
      0,
      0,
      0,
      sizeof(clear_attachments_4_dw_2_offt_out_reg_shader_code),
      clear_attachments_4_dw_2_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_4_dw_2_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_4_dw_2_offt_out_mem_shader_code[160] = {
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x4b, 0xff, 0x26, 0x06, 0x87, 0x82, 0x40,
   0xa0, 0x03, 0x98, 0x00, 0xc0, 0x86, 0x43, 0x26, 0x06, 0x87, 0x80, 0x40, 0xa0,
   0x01, 0x98, 0x00, 0xc0, 0x82, 0x49, 0x45, 0x12, 0xd3, 0x3f, 0x85, 0x08, 0x00,
   0x00, 0x00, 0x24, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f, 0xe0, 0x84,
   0x44, 0x81, 0x3c, 0x08, 0xcb, 0x62, 0x00, 0x40, 0x00, 0x81, 0x40, 0xff, 0x8b,
   0x6e, 0xfa, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f, 0xe0, 0x84, 0x44, 0x81, 0x3d, 0x08,
   0xcb, 0x69, 0x00, 0x47, 0x00, 0x88, 0x47, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8,
   0x0b, 0xd3, 0x3f, 0xe0, 0x84, 0x44, 0x81, 0x3b, 0x28, 0xcb, 0x66, 0x00, 0x44,
   0x00, 0x85, 0x44, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8,
   0x0b, 0xd3, 0x3f, 0xe0, 0x84, 0x44, 0x81, 0x3c, 0x28, 0xcb, 0x63, 0x00, 0x41,
   0x00, 0x82, 0x41, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x05,
   0x80, 0xea, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x04, 0x80, 0xee, 0x00,
   0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_4_dw_2_offt_out_mem_const_dest[6] = {
   0, 1, 2, 3, 5, 4,
};

static const struct pvr_shader_factory_info
   clear_attachments_4_dw_2_offt_out_mem_info = {
      12,
      6,
      0,
      0,
      0,
      sizeof(clear_attachments_4_dw_2_offt_out_mem_shader_code),
      clear_attachments_4_dw_2_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_4_dw_2_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_1_dw_3_offt_out_reg_shader_code[16] = {
   0x58, 0x9a, 0x80, 0xd3, 0x3f, 0x80, 0x08, 0x00,
   0x00, 0x00, 0x23, 0xff, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_1_dw_3_offt_out_reg_const_dest[6] = {
   0, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_1_dw_3_offt_out_reg_info = {
      0,
      1,
      0,
      0,
      0,
      sizeof(clear_attachments_1_dw_3_offt_out_reg_shader_code),
      clear_attachments_1_dw_3_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_1_dw_3_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_1_dw_3_offt_out_mem_shader_code[64] = {
   0x26, 0x06, 0x87, 0x82, 0x40, 0xa0, 0x00, 0x98, 0x00, 0x30, 0x82, 0x24, 0x34,
   0x22, 0x20, 0x00, 0x00, 0x00, 0x43, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x81, 0x44, 0x81, 0x3d, 0x08, 0xc3, 0x62, 0x00, 0x40, 0x00,
   0x81, 0x40, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_1_dw_3_offt_out_mem_const_dest[6] = {
   0, 4294967295, 4294967295, 4294967295, 2, 1,
};

static const struct pvr_shader_factory_info
   clear_attachments_1_dw_3_offt_out_mem_info = {
      4,
      3,
      0,
      0,
      0,
      sizeof(clear_attachments_1_dw_3_offt_out_mem_shader_code),
      clear_attachments_1_dw_3_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_1_dw_3_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_2_dw_3_offt_out_reg_shader_code[16] = {
   0x38, 0x8e, 0x80, 0x87, 0x80, 0x40, 0xa0, 0x01,
   0x98, 0x00, 0xc0, 0x23, 0xa4, 0x10, 0xf1, 0xff,
};

static const uint32_t clear_attachments_2_dw_3_offt_out_reg_const_dest[6] = {
   0, 1, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_2_dw_3_offt_out_reg_info = {
      0,
      2,
      0,
      0,
      0,
      sizeof(clear_attachments_2_dw_3_offt_out_reg_shader_code),
      clear_attachments_2_dw_3_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_2_dw_3_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_2_dw_3_offt_out_mem_shader_code[96] = {
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x46, 0xff, 0x26, 0x06, 0x87, 0x80,
   0x40, 0xa0, 0x01, 0x98, 0x00, 0xc0, 0x82, 0x45, 0x45, 0x12, 0xd3, 0x3f,
   0x83, 0x08, 0x00, 0x00, 0x00, 0x24, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x82, 0x44, 0x81, 0x3d, 0x08, 0xc6, 0x62, 0x00, 0x40,
   0x00, 0x81, 0x40, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f,
   0xe0, 0x82, 0x44, 0x81, 0x3b, 0x28, 0xc6, 0x65, 0x00, 0x43, 0x00, 0x84,
   0x43, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_2_dw_3_offt_out_mem_const_dest[6] = {
   0, 1, 4294967295, 4294967295, 3, 2,
};

static const struct pvr_shader_factory_info
   clear_attachments_2_dw_3_offt_out_mem_info = {
      7,
      4,
      0,
      0,
      0,
      sizeof(clear_attachments_2_dw_3_offt_out_mem_shader_code),
      clear_attachments_2_dw_3_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_2_dw_3_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_3_dw_3_offt_out_reg_shader_code[32] = {
   0x48, 0x1a, 0xd3, 0x3f, 0x80, 0x08, 0x00, 0x00, 0x00, 0x23, 0xf3,
   0xff, 0xff, 0xff, 0xff, 0xff, 0x38, 0x8e, 0x80, 0x87, 0x81, 0x40,
   0xa0, 0x02, 0x98, 0x00, 0xc0, 0x24, 0xa5, 0x11, 0xf1, 0xff,
};

static const uint32_t clear_attachments_3_dw_3_offt_out_reg_const_dest[6] = {
   0, 1, 2, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_3_dw_3_offt_out_reg_info = {
      0,
      3,
      0,
      0,
      0,
      sizeof(clear_attachments_3_dw_3_offt_out_reg_shader_code),
      clear_attachments_3_dw_3_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_3_dw_3_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_3_dw_3_offt_out_mem_shader_code[120] = {
   0x26, 0x06, 0x87, 0x84, 0x40, 0xa0, 0x00, 0x98, 0x00, 0x30, 0x88, 0x24,
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x49, 0xff, 0x26, 0x06, 0x87, 0x81,
   0x40, 0xa0, 0x02, 0x98, 0x00, 0xc0, 0x85, 0x42, 0x8b, 0x6e, 0xf2, 0xa6,
   0xc8, 0x0b, 0xd3, 0x3f, 0xe0, 0x83, 0x44, 0x81, 0x3d, 0x08, 0xc9, 0x68,
   0x00, 0x46, 0x00, 0x87, 0x46, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x83, 0x44, 0x81, 0x3b, 0x28, 0xc9, 0x65, 0x00, 0x43,
   0x00, 0x84, 0x43, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f,
   0xe0, 0x83, 0x44, 0x81, 0x3c, 0x28, 0xc9, 0x62, 0x00, 0x40, 0x00, 0x81,
   0x40, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_3_dw_3_offt_out_mem_const_dest[6] = {
   0, 1, 2, 4294967295, 4, 3,
};

static const struct pvr_shader_factory_info
   clear_attachments_3_dw_3_offt_out_mem_info = {
      10,
      5,
      0,
      0,
      0,
      sizeof(clear_attachments_3_dw_3_offt_out_mem_shader_code),
      clear_attachments_3_dw_3_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_3_dw_3_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_4_dw_3_offt_out_reg_shader_code[32] = {
   0x28, 0x0e, 0x87, 0x80, 0x40, 0xa0, 0x01, 0x98, 0x00, 0xc0, 0x23,
   0xa4, 0x10, 0xff, 0xf1, 0xff, 0x38, 0x8e, 0x80, 0x87, 0x82, 0x40,
   0xa0, 0x03, 0x98, 0x00, 0xc0, 0x25, 0xa6, 0x11, 0xf1, 0xff,
};

static const uint32_t clear_attachments_4_dw_3_offt_out_reg_const_dest[6] = {
   0, 1, 2, 3, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_4_dw_3_offt_out_reg_info = {
      0,
      4,
      0,
      0,
      0,
      sizeof(clear_attachments_4_dw_3_offt_out_reg_shader_code),
      clear_attachments_4_dw_3_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_4_dw_3_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_4_dw_3_offt_out_mem_shader_code[160] = {
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x4b, 0xff, 0x26, 0x06, 0x87, 0x82, 0x40,
   0xa0, 0x03, 0x98, 0x00, 0xc0, 0x86, 0x43, 0x26, 0x06, 0x87, 0x80, 0x40, 0xa0,
   0x01, 0x98, 0x00, 0xc0, 0x82, 0x49, 0x45, 0x12, 0xd3, 0x3f, 0x85, 0x08, 0x00,
   0x00, 0x00, 0x24, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f, 0xe0, 0x84,
   0x44, 0x81, 0x3d, 0x08, 0xcb, 0x62, 0x00, 0x40, 0x00, 0x81, 0x40, 0xff, 0x8b,
   0x6e, 0xfa, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f, 0xe0, 0x84, 0x44, 0x81, 0x3b, 0x28,
   0xcb, 0x69, 0x00, 0x47, 0x00, 0x88, 0x47, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8,
   0x0b, 0xd3, 0x3f, 0xe0, 0x84, 0x44, 0x81, 0x3c, 0x28, 0xcb, 0x66, 0x00, 0x44,
   0x00, 0x85, 0x44, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8,
   0x0b, 0xd3, 0x3f, 0xe0, 0x84, 0x44, 0x81, 0x3d, 0x28, 0xcb, 0x63, 0x00, 0x41,
   0x00, 0x82, 0x41, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x05,
   0x80, 0xea, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x04, 0x80, 0xee, 0x00,
   0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_4_dw_3_offt_out_mem_const_dest[6] = {
   0, 1, 2, 3, 5, 4,
};

static const struct pvr_shader_factory_info
   clear_attachments_4_dw_3_offt_out_mem_info = {
      12,
      6,
      0,
      0,
      0,
      sizeof(clear_attachments_4_dw_3_offt_out_mem_shader_code),
      clear_attachments_4_dw_3_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_4_dw_3_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_1_dw_4_offt_out_reg_shader_code[16] = {
   0x58, 0x9a, 0x80, 0xd3, 0x3f, 0x80, 0x08, 0x00,
   0x00, 0x00, 0xa4, 0x02, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_1_dw_4_offt_out_reg_const_dest[6] = {
   0, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_1_dw_4_offt_out_reg_info = {
      0,
      1,
      0,
      0,
      0,
      sizeof(clear_attachments_1_dw_4_offt_out_reg_shader_code),
      clear_attachments_1_dw_4_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_1_dw_4_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_1_dw_4_offt_out_mem_shader_code[64] = {
   0x26, 0x06, 0x87, 0x82, 0x40, 0xa0, 0x00, 0x98, 0x00, 0x30, 0x82, 0x24, 0x34,
   0x22, 0x20, 0x00, 0x00, 0x00, 0x43, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x81, 0x44, 0x81, 0x3b, 0x28, 0xc3, 0x62, 0x00, 0x40, 0x00,
   0x81, 0x40, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_1_dw_4_offt_out_mem_const_dest[6] = {
   0, 4294967295, 4294967295, 4294967295, 2, 1,
};

static const struct pvr_shader_factory_info
   clear_attachments_1_dw_4_offt_out_mem_info = {
      4,
      3,
      0,
      0,
      0,
      sizeof(clear_attachments_1_dw_4_offt_out_mem_shader_code),
      clear_attachments_1_dw_4_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_1_dw_4_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_2_dw_4_offt_out_reg_shader_code[16] = {
   0x38, 0x8e, 0x80, 0x87, 0x80, 0x40, 0xa0, 0x01,
   0x98, 0x00, 0xc0, 0x24, 0xa5, 0x11, 0xf1, 0xff,
};

static const uint32_t clear_attachments_2_dw_4_offt_out_reg_const_dest[6] = {
   0, 1, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_2_dw_4_offt_out_reg_info = {
      0,
      2,
      0,
      0,
      0,
      sizeof(clear_attachments_2_dw_4_offt_out_reg_shader_code),
      clear_attachments_2_dw_4_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_2_dw_4_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_2_dw_4_offt_out_mem_shader_code[96] = {
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x46, 0xff, 0x26, 0x06, 0x87, 0x80,
   0x40, 0xa0, 0x01, 0x98, 0x00, 0xc0, 0x82, 0x45, 0x45, 0x12, 0xd3, 0x3f,
   0x83, 0x08, 0x00, 0x00, 0x00, 0x24, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x82, 0x44, 0x81, 0x3b, 0x28, 0xc6, 0x62, 0x00, 0x40,
   0x00, 0x81, 0x40, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f,
   0xe0, 0x82, 0x44, 0x81, 0x3c, 0x28, 0xc6, 0x65, 0x00, 0x43, 0x00, 0x84,
   0x43, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_2_dw_4_offt_out_mem_const_dest[6] = {
   0, 1, 4294967295, 4294967295, 3, 2,
};

static const struct pvr_shader_factory_info
   clear_attachments_2_dw_4_offt_out_mem_info = {
      7,
      4,
      0,
      0,
      0,
      sizeof(clear_attachments_2_dw_4_offt_out_mem_shader_code),
      clear_attachments_2_dw_4_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_2_dw_4_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_3_dw_4_offt_out_reg_shader_code[32] = {
   0x48, 0x1a, 0xd3, 0x3f, 0x80, 0x08, 0x00, 0x00, 0x00, 0xa4, 0x02,
   0xff, 0xf2, 0xff, 0xff, 0xff, 0x38, 0x8e, 0x80, 0x87, 0x81, 0x40,
   0xa0, 0x02, 0x98, 0x00, 0xc0, 0x25, 0xa6, 0x11, 0xf1, 0xff,
};

static const uint32_t clear_attachments_3_dw_4_offt_out_reg_const_dest[6] = {
   0, 1, 2, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_3_dw_4_offt_out_reg_info = {
      0,
      3,
      0,
      0,
      0,
      sizeof(clear_attachments_3_dw_4_offt_out_reg_shader_code),
      clear_attachments_3_dw_4_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_3_dw_4_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_3_dw_4_offt_out_mem_shader_code[120] = {
   0x26, 0x06, 0x87, 0x84, 0x40, 0xa0, 0x00, 0x98, 0x00, 0x30, 0x88, 0x24,
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x49, 0xff, 0x26, 0x06, 0x87, 0x81,
   0x40, 0xa0, 0x02, 0x98, 0x00, 0xc0, 0x85, 0x42, 0x8b, 0x6e, 0xf2, 0xa6,
   0xc8, 0x0b, 0xd3, 0x3f, 0xe0, 0x83, 0x44, 0x81, 0x3b, 0x28, 0xc9, 0x68,
   0x00, 0x46, 0x00, 0x87, 0x46, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x83, 0x44, 0x81, 0x3c, 0x28, 0xc9, 0x65, 0x00, 0x43,
   0x00, 0x84, 0x43, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f,
   0xe0, 0x83, 0x44, 0x81, 0x3d, 0x28, 0xc9, 0x62, 0x00, 0x40, 0x00, 0x81,
   0x40, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_3_dw_4_offt_out_mem_const_dest[6] = {
   0, 1, 2, 4294967295, 4, 3,
};

static const struct pvr_shader_factory_info
   clear_attachments_3_dw_4_offt_out_mem_info = {
      10,
      5,
      0,
      0,
      0,
      sizeof(clear_attachments_3_dw_4_offt_out_mem_shader_code),
      clear_attachments_3_dw_4_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_3_dw_4_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_4_dw_4_offt_out_reg_shader_code[32] = {
   0x28, 0x0e, 0x87, 0x80, 0x40, 0xa0, 0x01, 0x98, 0x00, 0xc0, 0x24,
   0xa5, 0x11, 0xff, 0xf1, 0xff, 0x38, 0x8e, 0x80, 0x87, 0x82, 0x40,
   0xa0, 0x03, 0x98, 0x00, 0xc0, 0x26, 0xa7, 0x11, 0xf1, 0xff,
};

static const uint32_t clear_attachments_4_dw_4_offt_out_reg_const_dest[6] = {
   0, 1, 2, 3, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_4_dw_4_offt_out_reg_info = {
      0,
      4,
      0,
      0,
      0,
      sizeof(clear_attachments_4_dw_4_offt_out_reg_shader_code),
      clear_attachments_4_dw_4_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_4_dw_4_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_4_dw_4_offt_out_mem_shader_code[160] = {
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x4b, 0xff, 0x26, 0x06, 0x87, 0x82, 0x40,
   0xa0, 0x03, 0x98, 0x00, 0xc0, 0x86, 0x43, 0x26, 0x06, 0x87, 0x80, 0x40, 0xa0,
   0x01, 0x98, 0x00, 0xc0, 0x82, 0x49, 0x45, 0x12, 0xd3, 0x3f, 0x85, 0x08, 0x00,
   0x00, 0x00, 0x24, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f, 0xe0, 0x84,
   0x44, 0x81, 0x3b, 0x28, 0xcb, 0x62, 0x00, 0x40, 0x00, 0x81, 0x40, 0xff, 0x8b,
   0x6e, 0xfa, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f, 0xe0, 0x84, 0x44, 0x81, 0x3c, 0x28,
   0xcb, 0x69, 0x00, 0x47, 0x00, 0x88, 0x47, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8,
   0x0b, 0xd3, 0x3f, 0xe0, 0x84, 0x44, 0x81, 0x3d, 0x28, 0xcb, 0x66, 0x00, 0x44,
   0x00, 0x85, 0x44, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8,
   0x0b, 0xd3, 0x3f, 0xe0, 0x84, 0x44, 0x81, 0x3e, 0x28, 0xcb, 0x63, 0x00, 0x41,
   0x00, 0x82, 0x41, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x05,
   0x80, 0xea, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x04, 0x80, 0xee, 0x00,
   0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_4_dw_4_offt_out_mem_const_dest[6] = {
   0, 1, 2, 3, 5, 4,
};

static const struct pvr_shader_factory_info
   clear_attachments_4_dw_4_offt_out_mem_info = {
      12,
      6,
      0,
      0,
      0,
      sizeof(clear_attachments_4_dw_4_offt_out_mem_shader_code),
      clear_attachments_4_dw_4_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_4_dw_4_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_1_dw_5_offt_out_reg_shader_code[16] = {
   0x58, 0x9a, 0x80, 0xd3, 0x3f, 0x80, 0x08, 0x00,
   0x00, 0x00, 0xa5, 0x02, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_1_dw_5_offt_out_reg_const_dest[6] = {
   0, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_1_dw_5_offt_out_reg_info = {
      0,
      1,
      0,
      0,
      0,
      sizeof(clear_attachments_1_dw_5_offt_out_reg_shader_code),
      clear_attachments_1_dw_5_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_1_dw_5_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_1_dw_5_offt_out_mem_shader_code[64] = {
   0x26, 0x06, 0x87, 0x82, 0x40, 0xa0, 0x00, 0x98, 0x00, 0x30, 0x82, 0x24, 0x34,
   0x22, 0x20, 0x00, 0x00, 0x00, 0x43, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x81, 0x44, 0x81, 0x3c, 0x28, 0xc3, 0x62, 0x00, 0x40, 0x00,
   0x81, 0x40, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_1_dw_5_offt_out_mem_const_dest[6] = {
   0, 4294967295, 4294967295, 4294967295, 2, 1,
};

static const struct pvr_shader_factory_info
   clear_attachments_1_dw_5_offt_out_mem_info = {
      4,
      3,
      0,
      0,
      0,
      sizeof(clear_attachments_1_dw_5_offt_out_mem_shader_code),
      clear_attachments_1_dw_5_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_1_dw_5_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_2_dw_5_offt_out_reg_shader_code[16] = {
   0x38, 0x8e, 0x80, 0x87, 0x80, 0x40, 0xa0, 0x01,
   0x98, 0x00, 0xc0, 0x25, 0xa6, 0x11, 0xf1, 0xff,
};

static const uint32_t clear_attachments_2_dw_5_offt_out_reg_const_dest[6] = {
   0, 1, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_2_dw_5_offt_out_reg_info = {
      0,
      2,
      0,
      0,
      0,
      sizeof(clear_attachments_2_dw_5_offt_out_reg_shader_code),
      clear_attachments_2_dw_5_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_2_dw_5_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_2_dw_5_offt_out_mem_shader_code[96] = {
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x46, 0xff, 0x26, 0x06, 0x87, 0x80,
   0x40, 0xa0, 0x01, 0x98, 0x00, 0xc0, 0x82, 0x45, 0x45, 0x12, 0xd3, 0x3f,
   0x83, 0x08, 0x00, 0x00, 0x00, 0x24, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x82, 0x44, 0x81, 0x3c, 0x28, 0xc6, 0x62, 0x00, 0x40,
   0x00, 0x81, 0x40, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f,
   0xe0, 0x82, 0x44, 0x81, 0x3d, 0x28, 0xc6, 0x65, 0x00, 0x43, 0x00, 0x84,
   0x43, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_2_dw_5_offt_out_mem_const_dest[6] = {
   0, 1, 4294967295, 4294967295, 3, 2,
};

static const struct pvr_shader_factory_info
   clear_attachments_2_dw_5_offt_out_mem_info = {
      7,
      4,
      0,
      0,
      0,
      sizeof(clear_attachments_2_dw_5_offt_out_mem_shader_code),
      clear_attachments_2_dw_5_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_2_dw_5_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_3_dw_5_offt_out_reg_shader_code[32] = {
   0x48, 0x1a, 0xd3, 0x3f, 0x80, 0x08, 0x00, 0x00, 0x00, 0xa5, 0x02,
   0xff, 0xf2, 0xff, 0xff, 0xff, 0x38, 0x8e, 0x80, 0x87, 0x81, 0x40,
   0xa0, 0x02, 0x98, 0x00, 0xc0, 0x26, 0xa7, 0x11, 0xf1, 0xff,
};

static const uint32_t clear_attachments_3_dw_5_offt_out_reg_const_dest[6] = {
   0, 1, 2, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_3_dw_5_offt_out_reg_info = {
      0,
      3,
      0,
      0,
      0,
      sizeof(clear_attachments_3_dw_5_offt_out_reg_shader_code),
      clear_attachments_3_dw_5_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_3_dw_5_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_3_dw_5_offt_out_mem_shader_code[120] = {
   0x26, 0x06, 0x87, 0x84, 0x40, 0xa0, 0x00, 0x98, 0x00, 0x30, 0x88, 0x24,
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x49, 0xff, 0x26, 0x06, 0x87, 0x81,
   0x40, 0xa0, 0x02, 0x98, 0x00, 0xc0, 0x85, 0x42, 0x8b, 0x6e, 0xf2, 0xa6,
   0xc8, 0x0b, 0xd3, 0x3f, 0xe0, 0x83, 0x44, 0x81, 0x3c, 0x28, 0xc9, 0x68,
   0x00, 0x46, 0x00, 0x87, 0x46, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x83, 0x44, 0x81, 0x3d, 0x28, 0xc9, 0x65, 0x00, 0x43,
   0x00, 0x84, 0x43, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f,
   0xe0, 0x83, 0x44, 0x81, 0x3e, 0x28, 0xc9, 0x62, 0x00, 0x40, 0x00, 0x81,
   0x40, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_3_dw_5_offt_out_mem_const_dest[6] = {
   0, 1, 2, 4294967295, 4, 3,
};

static const struct pvr_shader_factory_info
   clear_attachments_3_dw_5_offt_out_mem_info = {
      10,
      5,
      0,
      0,
      0,
      sizeof(clear_attachments_3_dw_5_offt_out_mem_shader_code),
      clear_attachments_3_dw_5_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_3_dw_5_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_1_dw_6_offt_out_reg_shader_code[16] = {
   0x58, 0x9a, 0x80, 0xd3, 0x3f, 0x80, 0x08, 0x00,
   0x00, 0x00, 0xa6, 0x02, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_1_dw_6_offt_out_reg_const_dest[6] = {
   0, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_1_dw_6_offt_out_reg_info = {
      0,
      1,
      0,
      0,
      0,
      sizeof(clear_attachments_1_dw_6_offt_out_reg_shader_code),
      clear_attachments_1_dw_6_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_1_dw_6_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_1_dw_6_offt_out_mem_shader_code[64] = {
   0x26, 0x06, 0x87, 0x82, 0x40, 0xa0, 0x00, 0x98, 0x00, 0x30, 0x82, 0x24, 0x34,
   0x22, 0x20, 0x00, 0x00, 0x00, 0x43, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x81, 0x44, 0x81, 0x3d, 0x28, 0xc3, 0x62, 0x00, 0x40, 0x00,
   0x81, 0x40, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_1_dw_6_offt_out_mem_const_dest[6] = {
   0, 4294967295, 4294967295, 4294967295, 2, 1,
};

static const struct pvr_shader_factory_info
   clear_attachments_1_dw_6_offt_out_mem_info = {
      4,
      3,
      0,
      0,
      0,
      sizeof(clear_attachments_1_dw_6_offt_out_mem_shader_code),
      clear_attachments_1_dw_6_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_1_dw_6_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_2_dw_6_offt_out_reg_shader_code[16] = {
   0x38, 0x8e, 0x80, 0x87, 0x80, 0x40, 0xa0, 0x01,
   0x98, 0x00, 0xc0, 0x26, 0xa7, 0x11, 0xf1, 0xff,
};

static const uint32_t clear_attachments_2_dw_6_offt_out_reg_const_dest[6] = {
   0, 1, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_2_dw_6_offt_out_reg_info = {
      0,
      2,
      0,
      0,
      0,
      sizeof(clear_attachments_2_dw_6_offt_out_reg_shader_code),
      clear_attachments_2_dw_6_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_2_dw_6_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_2_dw_6_offt_out_mem_shader_code[96] = {
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x46, 0xff, 0x26, 0x06, 0x87, 0x80,
   0x40, 0xa0, 0x01, 0x98, 0x00, 0xc0, 0x82, 0x45, 0x45, 0x12, 0xd3, 0x3f,
   0x83, 0x08, 0x00, 0x00, 0x00, 0x24, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x82, 0x44, 0x81, 0x3d, 0x28, 0xc6, 0x62, 0x00, 0x40,
   0x00, 0x81, 0x40, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b, 0xd3, 0x3f,
   0xe0, 0x82, 0x44, 0x81, 0x3e, 0x28, 0xc6, 0x65, 0x00, 0x43, 0x00, 0x84,
   0x43, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_2_dw_6_offt_out_mem_const_dest[6] = {
   0, 1, 4294967295, 4294967295, 3, 2,
};

static const struct pvr_shader_factory_info
   clear_attachments_2_dw_6_offt_out_mem_info = {
      7,
      4,
      0,
      0,
      0,
      sizeof(clear_attachments_2_dw_6_offt_out_mem_shader_code),
      clear_attachments_2_dw_6_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_2_dw_6_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_1_dw_7_offt_out_reg_shader_code[16] = {
   0x58, 0x9a, 0x80, 0xd3, 0x3f, 0x80, 0x08, 0x00,
   0x00, 0x00, 0xa7, 0x02, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_1_dw_7_offt_out_reg_const_dest[6] = {
   0, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info
   clear_attachments_1_dw_7_offt_out_reg_info = {
      0,
      1,
      0,
      0,
      0,
      sizeof(clear_attachments_1_dw_7_offt_out_reg_shader_code),
      clear_attachments_1_dw_7_offt_out_reg_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_1_dw_7_offt_out_reg_const_dest,
      6,
      NULL,
      0,
   };

static const uint8_t clear_attachments_1_dw_7_offt_out_mem_shader_code[64] = {
   0x26, 0x06, 0x87, 0x82, 0x40, 0xa0, 0x00, 0x98, 0x00, 0x30, 0x82, 0x24, 0x34,
   0x22, 0x20, 0x00, 0x00, 0x00, 0x43, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x0b,
   0xd3, 0x3f, 0xe0, 0x81, 0x44, 0x81, 0x3e, 0x28, 0xc3, 0x62, 0x00, 0x40, 0x00,
   0x81, 0x40, 0xff, 0x24, 0x0a, 0x87, 0x20, 0x00, 0x00, 0x20, 0xff, 0x03, 0x80,
   0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t clear_attachments_1_dw_7_offt_out_mem_const_dest[6] = {
   0, 4294967295, 4294967295, 4294967295, 2, 1,
};

static const struct pvr_shader_factory_info
   clear_attachments_1_dw_7_offt_out_mem_info = {
      4,
      3,
      0,
      0,
      0,
      sizeof(clear_attachments_1_dw_7_offt_out_mem_shader_code),
      clear_attachments_1_dw_7_offt_out_mem_shader_code,
      0,
      0,
      NULL,
      4294967295,
      0,
      clear_attachments_1_dw_7_offt_out_mem_const_dest,
      6,
      NULL,
      0,
   };

static struct {
   const uint8_t *code;
   const uint32_t size;
   const struct pvr_shader_factory_info *info;
} const clear_attachment_collection[64] = {
   { clear_attachments_1_dw_0_offt_out_reg_shader_code,
     sizeof(clear_attachments_1_dw_0_offt_out_reg_shader_code),
     &clear_attachments_1_dw_0_offt_out_reg_info },
   { clear_attachments_1_dw_0_offt_out_mem_shader_code,
     sizeof(clear_attachments_1_dw_0_offt_out_mem_shader_code),
     &clear_attachments_1_dw_0_offt_out_mem_info },
   { clear_attachments_1_dw_1_offt_out_reg_shader_code,
     sizeof(clear_attachments_1_dw_1_offt_out_reg_shader_code),
     &clear_attachments_1_dw_1_offt_out_reg_info },
   { clear_attachments_1_dw_1_offt_out_mem_shader_code,
     sizeof(clear_attachments_1_dw_1_offt_out_mem_shader_code),
     &clear_attachments_1_dw_1_offt_out_mem_info },
   { clear_attachments_1_dw_2_offt_out_reg_shader_code,
     sizeof(clear_attachments_1_dw_2_offt_out_reg_shader_code),
     &clear_attachments_1_dw_2_offt_out_reg_info },
   { clear_attachments_1_dw_2_offt_out_mem_shader_code,
     sizeof(clear_attachments_1_dw_2_offt_out_mem_shader_code),
     &clear_attachments_1_dw_2_offt_out_mem_info },
   { clear_attachments_1_dw_3_offt_out_reg_shader_code,
     sizeof(clear_attachments_1_dw_3_offt_out_reg_shader_code),
     &clear_attachments_1_dw_3_offt_out_reg_info },
   { clear_attachments_1_dw_3_offt_out_mem_shader_code,
     sizeof(clear_attachments_1_dw_3_offt_out_mem_shader_code),
     &clear_attachments_1_dw_3_offt_out_mem_info },
   { clear_attachments_1_dw_4_offt_out_reg_shader_code,
     sizeof(clear_attachments_1_dw_4_offt_out_reg_shader_code),
     &clear_attachments_1_dw_4_offt_out_reg_info },
   { clear_attachments_1_dw_4_offt_out_mem_shader_code,
     sizeof(clear_attachments_1_dw_4_offt_out_mem_shader_code),
     &clear_attachments_1_dw_4_offt_out_mem_info },
   { clear_attachments_1_dw_5_offt_out_reg_shader_code,
     sizeof(clear_attachments_1_dw_5_offt_out_reg_shader_code),
     &clear_attachments_1_dw_5_offt_out_reg_info },
   { clear_attachments_1_dw_5_offt_out_mem_shader_code,
     sizeof(clear_attachments_1_dw_5_offt_out_mem_shader_code),
     &clear_attachments_1_dw_5_offt_out_mem_info },
   { clear_attachments_1_dw_6_offt_out_reg_shader_code,
     sizeof(clear_attachments_1_dw_6_offt_out_reg_shader_code),
     &clear_attachments_1_dw_6_offt_out_reg_info },
   { clear_attachments_1_dw_6_offt_out_mem_shader_code,
     sizeof(clear_attachments_1_dw_6_offt_out_mem_shader_code),
     &clear_attachments_1_dw_6_offt_out_mem_info },
   { clear_attachments_1_dw_7_offt_out_reg_shader_code,
     sizeof(clear_attachments_1_dw_7_offt_out_reg_shader_code),
     &clear_attachments_1_dw_7_offt_out_reg_info },
   { clear_attachments_1_dw_7_offt_out_mem_shader_code,
     sizeof(clear_attachments_1_dw_7_offt_out_mem_shader_code),
     &clear_attachments_1_dw_7_offt_out_mem_info },
   { clear_attachments_2_dw_0_offt_out_reg_shader_code,
     sizeof(clear_attachments_2_dw_0_offt_out_reg_shader_code),
     &clear_attachments_2_dw_0_offt_out_reg_info },
   { clear_attachments_2_dw_0_offt_out_mem_shader_code,
     sizeof(clear_attachments_2_dw_0_offt_out_mem_shader_code),
     &clear_attachments_2_dw_0_offt_out_mem_info },
   { clear_attachments_2_dw_1_offt_out_reg_shader_code,
     sizeof(clear_attachments_2_dw_1_offt_out_reg_shader_code),
     &clear_attachments_2_dw_1_offt_out_reg_info },
   { clear_attachments_2_dw_1_offt_out_mem_shader_code,
     sizeof(clear_attachments_2_dw_1_offt_out_mem_shader_code),
     &clear_attachments_2_dw_1_offt_out_mem_info },
   { clear_attachments_2_dw_2_offt_out_reg_shader_code,
     sizeof(clear_attachments_2_dw_2_offt_out_reg_shader_code),
     &clear_attachments_2_dw_2_offt_out_reg_info },
   { clear_attachments_2_dw_2_offt_out_mem_shader_code,
     sizeof(clear_attachments_2_dw_2_offt_out_mem_shader_code),
     &clear_attachments_2_dw_2_offt_out_mem_info },
   { clear_attachments_2_dw_3_offt_out_reg_shader_code,
     sizeof(clear_attachments_2_dw_3_offt_out_reg_shader_code),
     &clear_attachments_2_dw_3_offt_out_reg_info },
   { clear_attachments_2_dw_3_offt_out_mem_shader_code,
     sizeof(clear_attachments_2_dw_3_offt_out_mem_shader_code),
     &clear_attachments_2_dw_3_offt_out_mem_info },
   { clear_attachments_2_dw_4_offt_out_reg_shader_code,
     sizeof(clear_attachments_2_dw_4_offt_out_reg_shader_code),
     &clear_attachments_2_dw_4_offt_out_reg_info },
   { clear_attachments_2_dw_4_offt_out_mem_shader_code,
     sizeof(clear_attachments_2_dw_4_offt_out_mem_shader_code),
     &clear_attachments_2_dw_4_offt_out_mem_info },
   { clear_attachments_2_dw_5_offt_out_reg_shader_code,
     sizeof(clear_attachments_2_dw_5_offt_out_reg_shader_code),
     &clear_attachments_2_dw_5_offt_out_reg_info },
   { clear_attachments_2_dw_5_offt_out_mem_shader_code,
     sizeof(clear_attachments_2_dw_5_offt_out_mem_shader_code),
     &clear_attachments_2_dw_5_offt_out_mem_info },
   { clear_attachments_2_dw_6_offt_out_reg_shader_code,
     sizeof(clear_attachments_2_dw_6_offt_out_reg_shader_code),
     &clear_attachments_2_dw_6_offt_out_reg_info },
   { clear_attachments_2_dw_6_offt_out_mem_shader_code,
     sizeof(clear_attachments_2_dw_6_offt_out_mem_shader_code),
     &clear_attachments_2_dw_6_offt_out_mem_info },
   { NULL, 0, NULL },
   { NULL, 0, NULL },
   { clear_attachments_3_dw_0_offt_out_reg_shader_code,
     sizeof(clear_attachments_3_dw_0_offt_out_reg_shader_code),
     &clear_attachments_3_dw_0_offt_out_reg_info },
   { clear_attachments_3_dw_0_offt_out_mem_shader_code,
     sizeof(clear_attachments_3_dw_0_offt_out_mem_shader_code),
     &clear_attachments_3_dw_0_offt_out_mem_info },
   { clear_attachments_3_dw_1_offt_out_reg_shader_code,
     sizeof(clear_attachments_3_dw_1_offt_out_reg_shader_code),
     &clear_attachments_3_dw_1_offt_out_reg_info },
   { clear_attachments_3_dw_1_offt_out_mem_shader_code,
     sizeof(clear_attachments_3_dw_1_offt_out_mem_shader_code),
     &clear_attachments_3_dw_1_offt_out_mem_info },
   { clear_attachments_3_dw_2_offt_out_reg_shader_code,
     sizeof(clear_attachments_3_dw_2_offt_out_reg_shader_code),
     &clear_attachments_3_dw_2_offt_out_reg_info },
   { clear_attachments_3_dw_2_offt_out_mem_shader_code,
     sizeof(clear_attachments_3_dw_2_offt_out_mem_shader_code),
     &clear_attachments_3_dw_2_offt_out_mem_info },
   { clear_attachments_3_dw_3_offt_out_reg_shader_code,
     sizeof(clear_attachments_3_dw_3_offt_out_reg_shader_code),
     &clear_attachments_3_dw_3_offt_out_reg_info },
   { clear_attachments_3_dw_3_offt_out_mem_shader_code,
     sizeof(clear_attachments_3_dw_3_offt_out_mem_shader_code),
     &clear_attachments_3_dw_3_offt_out_mem_info },
   { clear_attachments_3_dw_4_offt_out_reg_shader_code,
     sizeof(clear_attachments_3_dw_4_offt_out_reg_shader_code),
     &clear_attachments_3_dw_4_offt_out_reg_info },
   { clear_attachments_3_dw_4_offt_out_mem_shader_code,
     sizeof(clear_attachments_3_dw_4_offt_out_mem_shader_code),
     &clear_attachments_3_dw_4_offt_out_mem_info },
   { clear_attachments_3_dw_5_offt_out_reg_shader_code,
     sizeof(clear_attachments_3_dw_5_offt_out_reg_shader_code),
     &clear_attachments_3_dw_5_offt_out_reg_info },
   { clear_attachments_3_dw_5_offt_out_mem_shader_code,
     sizeof(clear_attachments_3_dw_5_offt_out_mem_shader_code),
     &clear_attachments_3_dw_5_offt_out_mem_info },
   { NULL, 0, NULL },
   { NULL, 0, NULL },
   { NULL, 0, NULL },
   { NULL, 0, NULL },
   { clear_attachments_4_dw_0_offt_out_reg_shader_code,
     sizeof(clear_attachments_4_dw_0_offt_out_reg_shader_code),
     &clear_attachments_4_dw_0_offt_out_reg_info },
   { clear_attachments_4_dw_0_offt_out_mem_shader_code,
     sizeof(clear_attachments_4_dw_0_offt_out_mem_shader_code),
     &clear_attachments_4_dw_0_offt_out_mem_info },
   { clear_attachments_4_dw_1_offt_out_reg_shader_code,
     sizeof(clear_attachments_4_dw_1_offt_out_reg_shader_code),
     &clear_attachments_4_dw_1_offt_out_reg_info },
   { clear_attachments_4_dw_1_offt_out_mem_shader_code,
     sizeof(clear_attachments_4_dw_1_offt_out_mem_shader_code),
     &clear_attachments_4_dw_1_offt_out_mem_info },
   { clear_attachments_4_dw_2_offt_out_reg_shader_code,
     sizeof(clear_attachments_4_dw_2_offt_out_reg_shader_code),
     &clear_attachments_4_dw_2_offt_out_reg_info },
   { clear_attachments_4_dw_2_offt_out_mem_shader_code,
     sizeof(clear_attachments_4_dw_2_offt_out_mem_shader_code),
     &clear_attachments_4_dw_2_offt_out_mem_info },
   { clear_attachments_4_dw_3_offt_out_reg_shader_code,
     sizeof(clear_attachments_4_dw_3_offt_out_reg_shader_code),
     &clear_attachments_4_dw_3_offt_out_reg_info },
   { clear_attachments_4_dw_3_offt_out_mem_shader_code,
     sizeof(clear_attachments_4_dw_3_offt_out_mem_shader_code),
     &clear_attachments_4_dw_3_offt_out_mem_info },
   { clear_attachments_4_dw_4_offt_out_reg_shader_code,
     sizeof(clear_attachments_4_dw_4_offt_out_reg_shader_code),
     &clear_attachments_4_dw_4_offt_out_reg_info },
   { clear_attachments_4_dw_4_offt_out_mem_shader_code,
     sizeof(clear_attachments_4_dw_4_offt_out_mem_shader_code),
     &clear_attachments_4_dw_4_offt_out_mem_info },
   { NULL, 0, NULL },
   { NULL, 0, NULL },
   { NULL, 0, NULL },
   { NULL, 0, NULL },
   { NULL, 0, NULL },
   { NULL, 0, NULL },
};

static const uint8_t spm_load_1X_1_regs_shader_code[64] = {
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc1, 0x83, 0x10, 0x00, 0x00, 0x40, 0xff, 0x46,
   0x12, 0xd3, 0x3f, 0x80, 0xc4, 0x83, 0x10, 0x00, 0x00, 0x41, 0xff, 0x47, 0x20,
   0xe4, 0x42, 0x80, 0x60, 0x80, 0x20, 0x88, 0xa6, 0xe1, 0x80, 0x08, 0x00, 0x05,
   0x80, 0x6a, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x58, 0x9a, 0x80, 0xd3,
   0x3f, 0x41, 0x00, 0x00, 0x20, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff,
};

static const struct pvr_shader_factory_info spm_load_1X_1_regs_info = {
   2,
   39,
   0,
   0,
   0,
   sizeof(spm_load_1X_1_regs_shader_code),
   spm_load_1X_1_regs_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   NULL,
   0,
   NULL,
   0,
};

static const uint8_t spm_load_1X_2_regs_shader_code[64] = {
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc1, 0x83, 0x10, 0x00, 0x00, 0x40, 0xff, 0x46,
   0x12, 0xd3, 0x3f, 0x80, 0xc4, 0x83, 0x10, 0x00, 0x00, 0x41, 0xff, 0x47, 0x20,
   0xe4, 0x46, 0x80, 0x60, 0x80, 0x20, 0x88, 0xa6, 0xe1, 0x80, 0x08, 0x00, 0x05,
   0x80, 0x6a, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x38, 0x8e, 0x80, 0x87,
   0xc2, 0xe1, 0x80, 0x10, 0x00, 0xc0, 0x21, 0x20, 0xf2, 0xff, 0xff, 0xff,
};

static const struct pvr_shader_factory_info spm_load_1X_2_regs_info = {
   3,
   39,
   0,
   0,
   0,
   sizeof(spm_load_1X_2_regs_shader_code),
   spm_load_1X_2_regs_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   NULL,
   0,
   NULL,
   0,
};

static const uint8_t spm_load_1X_4_regs_shader_code[72] = {
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc1, 0x83, 0x10, 0x00, 0x00, 0x41, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc4, 0x83, 0x10, 0x00, 0x00, 0x42, 0xff,
   0x47, 0x20, 0xe4, 0x4e, 0x80, 0x61, 0x80, 0x20, 0x88, 0xa6, 0xe0, 0x80,
   0x08, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0x87, 0xc1, 0xe0, 0x80,
   0x10, 0x00, 0xc0, 0x21, 0x20, 0xff, 0xf1, 0xff, 0x38, 0x8e, 0x80, 0x87,
   0xc3, 0xe2, 0x80, 0x10, 0x00, 0xc0, 0x23, 0x22, 0xf2, 0xff, 0xff, 0xff,
};

static const struct pvr_shader_factory_info spm_load_1X_4_regs_info = {
   4,
   39,
   0,
   0,
   0,
   sizeof(spm_load_1X_4_regs_shader_code),
   spm_load_1X_4_regs_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   NULL,
   0,
   NULL,
   0,
};

static const uint8_t spm_load_1X_1_buffers_shader_code[216] = {
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc1, 0x83, 0x10, 0x00, 0x00, 0x47, 0xff, 0x46,
   0x12, 0xd3, 0x3f, 0x80, 0xc4, 0x83, 0x10, 0x00, 0x00, 0x48, 0xff, 0x58, 0x20,
   0xe4, 0xce, 0x08, 0x84, 0x67, 0x80, 0x20, 0x88, 0xa8, 0xe2, 0x80, 0x08, 0x00,
   0xff, 0x47, 0x20, 0xec, 0x4e, 0x80, 0x67, 0x80, 0x20, 0x88, 0xa8, 0xe6, 0x80,
   0x08, 0x00, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x4a, 0xff, 0x27, 0x0e, 0xe3,
   0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x81, 0x40, 0x27, 0x0e,
   0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x92, 0x51, 0x27,
   0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x8e, 0x4f,
   0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x8b,
   0x4c, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f,
   0x87, 0x43, 0xca, 0x62, 0x00, 0x40, 0x00, 0x50, 0x02, 0x80, 0xea, 0xff, 0x8a,
   0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc9, 0xe4, 0x80, 0x10, 0xca,
   0x70, 0x00, 0x4e, 0xc0, 0x23, 0x4d, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0xc8, 0xe5, 0x80, 0x10, 0xca, 0x6d, 0x00, 0x4b, 0xc0, 0x22, 0x53,
   0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc7, 0xe6, 0x80, 0x10,
   0xca, 0x73, 0x00, 0x51, 0xc0, 0x21, 0x20, 0x03, 0x80, 0x6a, 0xff, 0xf1, 0xff,
   0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_1X_1_buffers_const_dest[14] = {
   37,         36,         4294967295, 4294967295, 4294967295,
   4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
   4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_1X_1_buffers_info = {
   20,
   41,
   0,
   0,
   0,
   sizeof(spm_load_1X_1_buffers_shader_code),
   spm_load_1X_1_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_1X_1_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_1X_2_buffers_shader_code[352] = {
   0x26, 0x06, 0x87, 0xa7, 0xc1, 0x83, 0x18, 0x00, 0x30, 0x86, 0x59, 0xff, 0x46,
   0x12, 0xd3, 0x3f, 0x80, 0xc4, 0x83, 0x10, 0x00, 0x00, 0x47, 0xff, 0x58, 0x20,
   0xe4, 0xce, 0x08, 0x84, 0x66, 0x80, 0x20, 0x88, 0xaa, 0xe2, 0x80, 0x08, 0x00,
   0xff, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x58, 0xff, 0x58, 0x20, 0xec, 0xce,
   0x08, 0x88, 0x66, 0x80, 0x20, 0x88, 0xaa, 0xe8, 0x80, 0x08, 0x00, 0xff, 0x47,
   0x20, 0xec, 0x4e, 0x80, 0x66, 0x80, 0x20, 0x88, 0xaa, 0xec, 0x80, 0x08, 0x00,
   0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x81,
   0x40, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0x30,
   0x94, 0x53, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00,
   0xc0, 0x95, 0x56, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0xc0, 0x90, 0x51, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8,
   0x03, 0xd0, 0x3f, 0x87, 0x43, 0xd8, 0x62, 0x00, 0x40, 0x00, 0x57, 0x88, 0x6a,
   0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x44, 0xd8, 0x77, 0x00, 0x55, 0x00,
   0x52, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f,
   0xe0, 0xa6, 0x79, 0x80, 0x3a, 0x08, 0xd8, 0x72, 0x00, 0x50, 0x00, 0x87, 0x46,
   0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0,
   0x83, 0x44, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3,
   0x3f, 0xe0, 0xa6, 0x79, 0x80, 0x3d, 0x08, 0xd8, 0x65, 0x00, 0x43, 0x00, 0x91,
   0x50, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x26,
   0x80, 0xa7, 0x08, 0x00, 0xc0, 0x81, 0x42, 0x02, 0x80, 0xea, 0xff, 0x88, 0x6a,
   0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x49, 0xd8, 0x68, 0x00, 0x46, 0x00,
   0x43, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xca, 0xeb, 0x80,
   0x10, 0xd8, 0x63, 0x00, 0x41, 0xc0, 0x95, 0x52, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8,
   0x03, 0xd0, 0x3f, 0x87, 0xcf, 0xee, 0x80, 0x10, 0xd8, 0x75, 0x00, 0x53, 0xc0,
   0x23, 0x22, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xcd, 0xec,
   0x80, 0x10, 0xd8, 0x72, 0x00, 0x50, 0xc0, 0x21, 0x20, 0x05, 0x80, 0x6a, 0xff,
   0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff,
   0xff,
};

static const uint32_t spm_load_1X_2_buffers_const_dest[14] = {
   37,         36,         39,         38,         4294967295,
   4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
   4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_1X_2_buffers_info = {
   26,
   43,
   0,
   0,
   0,
   sizeof(spm_load_1X_2_buffers_shader_code),
   spm_load_1X_2_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_1X_2_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_1X_3_buffers_shader_code[480] = {
   0x26, 0x06, 0x87, 0xa7, 0xc1, 0x83, 0x18, 0x00, 0x30, 0x80, 0x46, 0xff, 0x46,
   0x12, 0xd3, 0x3f, 0x80, 0xc4, 0x83, 0x10, 0x00, 0x00, 0x41, 0xff, 0x58, 0x20,
   0xe4, 0xce, 0x08, 0x84, 0x60, 0x80, 0x20, 0x88, 0xac, 0xea, 0x80, 0x08, 0x00,
   0xff, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x5c, 0xff, 0x58, 0x20, 0xec, 0xce,
   0x08, 0x88, 0x60, 0x80, 0x20, 0x88, 0xac, 0xe2, 0x80, 0x08, 0x00, 0xff, 0x58,
   0x20, 0xec, 0xce, 0x08, 0x8c, 0x60, 0x80, 0x20, 0x88, 0xac, 0xee, 0x80, 0x08,
   0x00, 0xff, 0x47, 0x20, 0xec, 0x4e, 0x80, 0x60, 0x80, 0x20, 0x88, 0xac, 0xf2,
   0x80, 0x08, 0x00, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0x30, 0x89, 0x48, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x28, 0x80, 0xa9,
   0x08, 0x00, 0x30, 0x9a, 0x59, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a, 0xf2, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x4b, 0xdc, 0x6a, 0x00, 0x48, 0x00, 0x58, 0x27,
   0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x96, 0x57,
   0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0xcd, 0x40, 0xa0, 0x29, 0x90, 0xdc, 0x78, 0x00, 0x56, 0xc0, 0x88, 0x5b, 0xff,
   0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x8a,
   0x4b, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f,
   0xe0, 0xa6, 0x66, 0x80, 0x3a, 0x08, 0xdc, 0x6c, 0x00, 0x4a, 0x00, 0x81, 0x40,
   0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0,
   0x86, 0x47, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3,
   0x3f, 0xe0, 0xa8, 0x7b, 0x80, 0x3c, 0x08, 0xdc, 0x68, 0x00, 0x46, 0x00, 0x8a,
   0x49, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x26,
   0x80, 0xa7, 0x08, 0x00, 0xc0, 0x96, 0x57, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x86, 0x47, 0x88,
   0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x43, 0xdc, 0x62, 0x00, 0x40,
   0x00, 0x58, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x44, 0xdc,
   0x78, 0x00, 0x56, 0x00, 0x48, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f,
   0xe0, 0xa8, 0x7b, 0x80, 0x3a, 0x08, 0xdc, 0x68, 0x00, 0x46, 0x00, 0x8d, 0x4c,
   0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0,
   0x83, 0x44, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3,
   0x3f, 0xe0, 0xa8, 0x7b, 0x80, 0x3d, 0x08, 0xdc, 0x65, 0x00, 0x43, 0x00, 0x87,
   0x46, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x4f, 0xdc,
   0x6e, 0x00, 0x4c, 0x00, 0x5b, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f,
   0x87, 0xd0, 0xf1, 0x80, 0x10, 0xdc, 0x7b, 0x00, 0x59, 0xc0, 0x8b, 0x48, 0x8a,
   0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xd5, 0xf4, 0x80, 0x10, 0xdc,
   0x6b, 0x00, 0x49, 0xc0, 0x23, 0x22, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0xd3, 0xf2, 0x80, 0x10, 0xdc, 0x68, 0x00, 0x46, 0xc0, 0x21, 0x20,
   0x02, 0x80, 0x6a, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_1X_3_buffers_const_dest[14] = {
   37,         36,         39,         38,         41,
   40,         4294967295, 4294967295, 4294967295, 4294967295,
   4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_1X_3_buffers_info = {
   29,
   45,
   0,
   0,
   0,
   sizeof(spm_load_1X_3_buffers_shader_code),
   spm_load_1X_3_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_1X_3_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_1X_4_buffers_shader_code[616] = {
   0x26, 0x06, 0x87, 0xa7, 0xc1, 0x83, 0x18, 0x00, 0x30, 0x9b, 0x46, 0xff, 0x46,
   0x12, 0xd3, 0x3f, 0x80, 0xc4, 0x83, 0x10, 0x00, 0x00, 0x5c, 0xff, 0x58, 0x20,
   0xe4, 0xce, 0x08, 0x84, 0x7b, 0x80, 0x20, 0x88, 0xae, 0xee, 0x80, 0x08, 0x00,
   0xff, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x63, 0xff, 0x58, 0x20, 0xec, 0xce,
   0x08, 0x88, 0x7b, 0x80, 0x20, 0x88, 0xae, 0xe2, 0x80, 0x08, 0x00, 0xff, 0x58,
   0x20, 0xec, 0xce, 0x08, 0x8c, 0x7b, 0x80, 0x20, 0x88, 0xae, 0xe8, 0x80, 0x08,
   0x00, 0xff, 0x58, 0x20, 0xec, 0xce, 0x08, 0x90, 0x7b, 0x80, 0x20, 0x88, 0xae,
   0xf2, 0x80, 0x08, 0x00, 0xff, 0x47, 0x20, 0xec, 0x4e, 0x80, 0x7b, 0x80, 0x20,
   0x88, 0xae, 0xf6, 0x80, 0x08, 0x00, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24,
   0x80, 0xa5, 0x08, 0x00, 0x30, 0x8d, 0x4c, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1,
   0x28, 0x80, 0xa9, 0x08, 0x00, 0x30, 0x9e, 0x5d, 0x02, 0x80, 0x6a, 0xff, 0x66,
   0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xe3, 0x6e, 0x00, 0x4c, 0x00, 0x02, 0x80,
   0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00,
   0xc0, 0x8d, 0x4e, 0x02, 0x80, 0xea, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03,
   0xd0, 0x3f, 0x87, 0x50, 0xe3, 0x6f, 0x00, 0x4d, 0x00, 0x5c, 0x27, 0x0e, 0xe3,
   0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x9a, 0x5b, 0x8b, 0x6e,
   0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa6, 0x66, 0x80, 0x3a, 0x08, 0xe3,
   0x7c, 0x00, 0x5a, 0x00, 0x81, 0x40, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x8f, 0x50, 0x26,
   0x06, 0x87, 0xa9, 0x40, 0xa0, 0x2b, 0x98, 0x00, 0x30, 0xa2, 0x46, 0x02, 0x80,
   0xea, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x62,
   0x81, 0x3b, 0x08, 0xe3, 0x71, 0x00, 0x4f, 0x00, 0x9b, 0x5a, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x43, 0xe3,
   0x62, 0x00, 0x40, 0x00, 0x51, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x26, 0x80,
   0xa7, 0x08, 0x00, 0xc0, 0x8f, 0x50, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0x45, 0xe3, 0x71, 0x00, 0x4f, 0x00, 0x4e, 0x02, 0x80, 0x6a, 0xff,
   0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x82,
   0x43, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x66, 0x80,
   0x3a, 0x08, 0xe3, 0x64, 0x00, 0x42, 0x00, 0x87, 0x46, 0xff, 0x27, 0x0e, 0xe3,
   0x81, 0x5d, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x8c, 0x4d, 0x8b, 0x6e,
   0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x62, 0x81, 0x3c, 0x08, 0xe3,
   0x6e, 0x00, 0x4c, 0x00, 0xa1, 0x60, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a,
   0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x49, 0xe3, 0x68, 0x00, 0x46, 0x00,
   0x42, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0,
   0x80, 0x41, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x4b, 0xe3,
   0x62, 0x00, 0x40, 0x00, 0x5f, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81,
   0x5c, 0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x88, 0x49, 0x02, 0x80, 0xea,
   0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x62, 0x81,
   0x3a, 0x08, 0xe3, 0x6a, 0x00, 0x48, 0x00, 0x91, 0x50, 0xff, 0x8b, 0x6e, 0xf2,
   0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x62, 0x81, 0x3d, 0x08, 0xe3, 0x7f,
   0x00, 0x5d, 0x00, 0x84, 0x43, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0x53, 0xe3, 0x72, 0x00, 0x50, 0x00, 0x5c, 0x8a, 0x6e, 0xf2, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xd4, 0xf5, 0x80, 0x10, 0xe3, 0x7c, 0x00, 0x5a,
   0xc0, 0xa2, 0x45, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xd9,
   0xf8, 0x80, 0x10, 0xe3, 0x62, 0x01, 0x60, 0xc0, 0x23, 0x22, 0x8a, 0x6e, 0xf2,
   0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xd7, 0xf6, 0x80, 0x10, 0xe3, 0x65, 0x00,
   0x43, 0xc0, 0x21, 0x20, 0x03, 0x80, 0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee,
   0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_1X_4_buffers_const_dest[14] = {
   37, 36,         39,         38,         41,         40,         43,
   42, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_1X_4_buffers_info = {
   36,
   47,
   0,
   0,
   0,
   sizeof(spm_load_1X_4_buffers_shader_code),
   spm_load_1X_4_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_1X_4_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_1X_5_buffers_shader_code[744] = {
   0x26, 0x06, 0x87, 0xa9, 0xc1, 0x83, 0x18, 0x00, 0x30, 0xa4, 0x5d, 0xff, 0x46,
   0x12, 0xd3, 0x3f, 0x80, 0xc4, 0x83, 0x10, 0x00, 0x00, 0x65, 0xff, 0x58, 0x20,
   0xe4, 0xce, 0x08, 0x84, 0x64, 0x81, 0x20, 0x88, 0xb0, 0xe9, 0x80, 0x08, 0x00,
   0xff, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x66, 0xff, 0x58, 0x20, 0xec, 0xce,
   0x08, 0x88, 0x64, 0x81, 0x20, 0x88, 0xb0, 0xe2, 0x80, 0x08, 0x00, 0xff, 0x58,
   0x20, 0xec, 0xce, 0x08, 0x8c, 0x64, 0x81, 0x20, 0x88, 0xb0, 0xed, 0x80, 0x08,
   0x00, 0xff, 0x58, 0x20, 0xec, 0xce, 0x08, 0x90, 0x64, 0x81, 0x20, 0x88, 0xb0,
   0xf2, 0x80, 0x08, 0x00, 0xff, 0x47, 0x20, 0xec, 0x4e, 0x94, 0x64, 0x81, 0x20,
   0x88, 0xb0, 0xf7, 0x80, 0x08, 0x00, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24,
   0x80, 0xa5, 0x08, 0x00, 0x30, 0x88, 0x47, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e,
   0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x7d, 0x80, 0x3d, 0x08, 0xe6,
   0x69, 0x00, 0x47, 0x00, 0x9c, 0x5b, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x89, 0x48, 0x66,
   0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xe6, 0x6a, 0x00, 0x48, 0x00, 0x02, 0x80,
   0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00,
   0xc0, 0x89, 0x4a, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x2a, 0x80, 0xab, 0x08,
   0x00, 0x30, 0xa2, 0x61, 0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xe6, 0x6b,
   0x00, 0x49, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1,
   0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x8a, 0x4b, 0x26, 0x06, 0x87, 0xad, 0x40,
   0xa0, 0x27, 0x98, 0x00, 0x30, 0x86, 0x49, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03,
   0xd3, 0x3f, 0xe0, 0xa6, 0x66, 0x80, 0x3a, 0x08, 0xe6, 0x6c, 0x00, 0x4a, 0x00,
   0x81, 0x40, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x2a, 0x80, 0xab, 0x08,
   0x00, 0x30, 0x9f, 0x5e, 0x02, 0x80, 0xea, 0xff, 0x66, 0x28, 0xfa, 0xa6, 0xc8,
   0x03, 0x00, 0xe6, 0x62, 0x00, 0x40, 0x00, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5b, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x81, 0x42, 0x66,
   0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xe6, 0x63, 0x00, 0x41, 0x00, 0x02, 0x80,
   0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00,
   0xc0, 0x82, 0x43, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03,
   0xd3, 0x3f, 0xe0, 0xa8, 0x7d, 0x80, 0x3a, 0x08, 0xe6, 0x64, 0x00, 0x42, 0x00,
   0x8c, 0x4b, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1,
   0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x83, 0x44, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8,
   0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x69, 0x80, 0x3b, 0x08, 0xe6, 0x65, 0x00, 0x43,
   0x00, 0x88, 0x47, 0xff, 0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xe6, 0x6d,
   0x00, 0x4b, 0x00, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1,
   0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x8c, 0x4d, 0x02, 0x80, 0x6a, 0xff, 0x8b,
   0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xd0, 0x40, 0xa0, 0x2b, 0x90,
   0xe6, 0x6e, 0x00, 0x4c, 0xc0, 0x9d, 0x43, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8,
   0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x69, 0x80, 0x3c, 0x08, 0xe6, 0x7d, 0x00, 0x5b,
   0x00, 0x85, 0x44, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c,
   0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x8d, 0x4e, 0x8b, 0x6e, 0xfa, 0xa6,
   0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x63, 0x80, 0x3a, 0x08, 0xe6, 0x6f, 0x00,
   0x4d, 0x00, 0x91, 0x50, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f,
   0x87, 0x53, 0xe6, 0x72, 0x00, 0x50, 0x00, 0x63, 0x88, 0x6a, 0xfa, 0xa6, 0xc8,
   0x03, 0xd0, 0x3f, 0x87, 0x55, 0xe6, 0x63, 0x01, 0x61, 0x00, 0x60, 0x02, 0x80,
   0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00,
   0xc0, 0x92, 0x53, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xac,
   0x69, 0x80, 0x3a, 0x08, 0xe6, 0x74, 0x00, 0x52, 0x00, 0x96, 0x55, 0xff, 0x47,
   0x20, 0xe4, 0x4e, 0x80, 0x64, 0x81, 0x20, 0x88, 0xb0, 0xe0, 0x80, 0x08, 0x00,
   0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x69, 0x80, 0x3d,
   0x08, 0xe6, 0x60, 0x01, 0x5e, 0x00, 0x8b, 0x4a, 0xff, 0x88, 0x6a, 0xfa, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x58, 0xe6, 0x77, 0x00, 0x55, 0x00, 0x49, 0x8a,
   0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xd9, 0xfa, 0x80, 0x10, 0xe6,
   0x69, 0x00, 0x47, 0xc0, 0x86, 0x4c, 0x02, 0x80, 0x6a, 0xff, 0x8a, 0x6e, 0xf2,
   0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc3, 0xe2, 0x80, 0x10, 0xe6, 0x66, 0x00,
   0x44, 0xc0, 0x23, 0x22, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0xc1, 0xe0, 0x80, 0x10, 0xe6, 0x6c, 0x00, 0x4a, 0xc0, 0x21, 0x20, 0x02, 0x80,
   0x6a, 0xff, 0x03, 0x80, 0xea, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2,
   0xff, 0xff, 0xff,
};

static const uint32_t spm_load_1X_5_buffers_const_dest[14] = {
   37, 36, 39, 38,         41,         40,         43,
   42, 45, 44, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_1X_5_buffers_info = {
   39,
   49,
   0,
   0,
   0,
   sizeof(spm_load_1X_5_buffers_shader_code),
   spm_load_1X_5_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_1X_5_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_1X_6_buffers_shader_code[872] = {
   0x26, 0x06, 0x87, 0xa9, 0xc1, 0x83, 0x18, 0x00, 0x30, 0xaa, 0x57, 0xff, 0x46,
   0x12, 0xd3, 0x3f, 0x80, 0xc4, 0x83, 0x10, 0x00, 0x00, 0x6b, 0xff, 0x58, 0x20,
   0xe4, 0xce, 0x08, 0x84, 0x6a, 0x81, 0x20, 0x88, 0xb2, 0xe2, 0x80, 0x08, 0x00,
   0xff, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x6d, 0xff, 0x58, 0x20, 0xec, 0xce,
   0x08, 0x88, 0x6a, 0x81, 0x20, 0x88, 0xb2, 0xe8, 0x80, 0x08, 0x00, 0xff, 0x58,
   0x20, 0xec, 0xce, 0x08, 0x8c, 0x6a, 0x81, 0x20, 0x88, 0xb2, 0xee, 0x80, 0x08,
   0x00, 0xff, 0x58, 0x20, 0xec, 0xce, 0x08, 0x90, 0x6a, 0x81, 0x20, 0x88, 0xb2,
   0xf3, 0x80, 0x08, 0x00, 0xff, 0x47, 0x20, 0xec, 0x4e, 0x94, 0x6a, 0x81, 0x20,
   0x88, 0xb2, 0xf8, 0x80, 0x08, 0x00, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24,
   0x80, 0xa5, 0x08, 0x00, 0x30, 0x81, 0x40, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e,
   0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x77, 0x80, 0x3d, 0x08, 0xed,
   0x62, 0x00, 0x40, 0x00, 0x9d, 0x5c, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x82, 0x41, 0x66,
   0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xed, 0x63, 0x00, 0x41, 0x00, 0x02, 0x80,
   0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00,
   0xc0, 0x82, 0x43, 0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xed, 0x64, 0x00,
   0x42, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24,
   0x80, 0xa5, 0x08, 0x00, 0xc0, 0x83, 0x44, 0x26, 0x06, 0x87, 0xab, 0x40, 0xa0,
   0x27, 0x98, 0x00, 0x30, 0x80, 0x63, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3,
   0x3f, 0xe0, 0xa6, 0x60, 0x80, 0x3a, 0x08, 0xed, 0x65, 0x00, 0x43, 0x00, 0x87,
   0x46, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3,
   0x3f, 0xe0, 0xaa, 0x63, 0x81, 0x3d, 0x08, 0xed, 0x68, 0x00, 0x46, 0x00, 0xa2,
   0x61, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x26,
   0x80, 0xa7, 0x08, 0x00, 0xc0, 0x87, 0x48, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a,
   0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x4a, 0xed, 0x69, 0x00, 0x47, 0x00,
   0x43, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0,
   0x81, 0x42, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x2c, 0x80, 0xad, 0x08, 0x00,
   0x30, 0xa8, 0x67, 0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xed, 0x63, 0x00,
   0x41, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x26,
   0x80, 0xa7, 0x08, 0x00, 0xc0, 0x89, 0x4a, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03,
   0xd3, 0x3f, 0xe0, 0xa8, 0x77, 0x80, 0x3a, 0x08, 0xed, 0x6b, 0x00, 0x49, 0x00,
   0x8d, 0x4c, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x2c, 0x80, 0xad, 0x08,
   0x00, 0x30, 0xa5, 0x64, 0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xed, 0x6e,
   0x00, 0x4c, 0x00, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1,
   0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x8d, 0x4e, 0x88, 0x6a, 0xfa, 0xa6, 0xc8,
   0x03, 0xd0, 0x3f, 0x87, 0x51, 0xed, 0x6f, 0x00, 0x4d, 0x00, 0x5e, 0x26, 0x06,
   0x87, 0xad, 0x40, 0xa0, 0x2f, 0x98, 0x00, 0x30, 0xac, 0x40, 0x8b, 0x6e, 0xf2,
   0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xae, 0x6c, 0x81, 0x3b, 0x08, 0xed, 0x7e,
   0x00, 0x5c, 0x00, 0xa0, 0x5f, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3,
   0x81, 0x5c, 0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x8e, 0x4f, 0x8b, 0x6e,
   0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x63, 0x81, 0x3a, 0x08, 0xed,
   0x70, 0x00, 0x4e, 0x00, 0x92, 0x51, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03,
   0xd0, 0x3f, 0x87, 0x54, 0xed, 0x73, 0x00, 0x51, 0x00, 0x45, 0x27, 0x0e, 0xe3,
   0x81, 0x5b, 0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x83, 0x44, 0x88, 0x6a,
   0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x56, 0xed, 0x65, 0x00, 0x43, 0x00,
   0x63, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2a, 0x80,
   0xab, 0x08, 0x00, 0xc0, 0x93, 0x54, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3,
   0x3f, 0xe0, 0xac, 0x60, 0x80, 0x3a, 0x08, 0xed, 0x75, 0x00, 0x53, 0x00, 0x97,
   0x56, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xae, 0x6c,
   0x81, 0x3c, 0x08, 0xed, 0x63, 0x01, 0x61, 0x00, 0x9d, 0x5c, 0xff, 0x58, 0x20,
   0xec, 0xce, 0x08, 0x98, 0x6a, 0x81, 0x20, 0x88, 0xb2, 0xe2, 0x80, 0x08, 0x00,
   0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0,
   0x8a, 0x4b, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x59, 0xed,
   0x78, 0x00, 0x56, 0x00, 0x69, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f,
   0x87, 0xda, 0xfb, 0x80, 0x10, 0xed, 0x69, 0x01, 0x67, 0xc0, 0x8c, 0x66, 0x47,
   0x20, 0xe4, 0x4e, 0x80, 0x6a, 0x81, 0x20, 0x88, 0xb2, 0xe6, 0x80, 0x08, 0x00,
   0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xae, 0x6c, 0x81, 0x3a,
   0x08, 0xed, 0x6c, 0x00, 0x4a, 0x00, 0x81, 0x40, 0xff, 0x02, 0x80, 0xea, 0xff,
   0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xae, 0x6c, 0x81, 0x3d,
   0x08, 0xed, 0x66, 0x01, 0x64, 0x00, 0x91, 0x50, 0xff, 0x88, 0x6a, 0xfa, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x43, 0xed, 0x62, 0x00, 0x40, 0x00, 0x61, 0x8a,
   0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc4, 0xe5, 0x80, 0x10, 0xed,
   0x61, 0x01, 0x5f, 0xc0, 0x9e, 0x52, 0x02, 0x80, 0x6a, 0xff, 0x8a, 0x6e, 0xfa,
   0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc9, 0xe8, 0x80, 0x10, 0xed, 0x7e, 0x00,
   0x5c, 0xc0, 0x23, 0x22, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0xc7, 0xe6, 0x80, 0x10, 0xed, 0x72, 0x00, 0x50, 0xc0, 0x21, 0x20, 0x04, 0x80,
   0xea, 0xff, 0xf2, 0xff, 0xff, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff,
   0xff,
};

static const uint32_t spm_load_1X_6_buffers_const_dest[14] = {
   37, 36, 39, 38, 41, 40, 43, 42, 45, 44, 47, 46, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_1X_6_buffers_info = {
   46,
   51,
   0,
   0,
   0,
   sizeof(spm_load_1X_6_buffers_shader_code),
   spm_load_1X_6_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_1X_6_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_1X_7_buffers_shader_code[1016] = {
   0x26, 0x06, 0x87, 0xa9, 0xc1, 0x83, 0x18, 0x00, 0x30, 0xa6, 0x50, 0xff, 0x46,
   0x12, 0xd3, 0x3f, 0x80, 0xc4, 0x83, 0x10, 0x00, 0x00, 0x67, 0xff, 0x58, 0x20,
   0xe4, 0xce, 0x08, 0x84, 0x66, 0x81, 0x20, 0x88, 0xb4, 0xe2, 0x80, 0x08, 0x00,
   0xff, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x6b, 0xff, 0x58, 0x20, 0xec, 0xce,
   0x08, 0x88, 0x66, 0x81, 0x20, 0x88, 0xb4, 0xe8, 0x80, 0x08, 0x00, 0xff, 0x58,
   0x20, 0xec, 0xce, 0x08, 0x8c, 0x66, 0x81, 0x20, 0x88, 0xb4, 0xf7, 0x80, 0x08,
   0x00, 0xff, 0x58, 0x20, 0xec, 0xce, 0x08, 0x90, 0x66, 0x81, 0x20, 0x88, 0xb4,
   0xec, 0x80, 0x08, 0x00, 0xff, 0x47, 0x20, 0xec, 0x4e, 0x94, 0x66, 0x81, 0x20,
   0x88, 0xb4, 0xf1, 0x80, 0x08, 0x00, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24,
   0x80, 0xa5, 0x08, 0x00, 0x30, 0x81, 0x40, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e,
   0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x70, 0x80, 0x3d, 0x08, 0xeb,
   0x62, 0x00, 0x40, 0x00, 0x9c, 0x5b, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x82, 0x41, 0x66,
   0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xeb, 0x63, 0x00, 0x41, 0x00, 0x02, 0x80,
   0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00,
   0xc0, 0x82, 0x43, 0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xeb, 0x64, 0x00,
   0x42, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24,
   0x80, 0xa5, 0x08, 0x00, 0xc0, 0x83, 0x44, 0x26, 0x06, 0x87, 0xab, 0x40, 0xa0,
   0x27, 0x98, 0x00, 0x30, 0x80, 0x69, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3,
   0x3f, 0xe0, 0xa6, 0x60, 0x80, 0x3a, 0x08, 0xeb, 0x65, 0x00, 0x43, 0x00, 0x87,
   0x46, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3,
   0x3f, 0xe0, 0xaa, 0x69, 0x81, 0x3d, 0x08, 0xeb, 0x68, 0x00, 0x46, 0x00, 0x9f,
   0x5e, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x26,
   0x80, 0xa7, 0x08, 0x00, 0xc0, 0x87, 0x48, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a,
   0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x4a, 0xeb, 0x69, 0x00, 0x47, 0x00,
   0x43, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0,
   0x81, 0x42, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x58, 0xeb,
   0x63, 0x00, 0x41, 0x00, 0x44, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81,
   0x5d, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x89, 0x4a, 0x8b, 0x6e, 0xf2,
   0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x70, 0x80, 0x3a, 0x08, 0xeb, 0x6b,
   0x00, 0x49, 0x00, 0x96, 0x55, 0xff, 0x26, 0x06, 0x87, 0xb1, 0x40, 0xa0, 0x2d,
   0x98, 0x00, 0x30, 0xaa, 0x6c, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f,
   0xe0, 0xac, 0x6a, 0x81, 0x3d, 0x08, 0xeb, 0x77, 0x00, 0x55, 0x00, 0xa4, 0x63,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x28, 0x80,
   0xa9, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00,
   0xeb, 0x64, 0x00, 0x42, 0x00, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x28, 0x80,
   0xa9, 0x08, 0x00, 0xc0, 0x97, 0x58, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x2e,
   0x80, 0xaf, 0x08, 0x00, 0x30, 0xa2, 0x61, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03,
   0xd0, 0x3f, 0x87, 0x5a, 0xeb, 0x79, 0x00, 0x57, 0x00, 0x5d, 0x02, 0x80, 0x6a,
   0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x69, 0x81,
   0x3a, 0x08, 0xeb, 0x7d, 0x00, 0x5b, 0x00, 0x8b, 0x4a, 0xff, 0x27, 0x0e, 0xe3,
   0x81, 0x5d, 0xa1, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0x30, 0xa9, 0x68, 0x27, 0x0e,
   0xe3, 0x81, 0x5b, 0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x02,
   0x80, 0xea, 0xff, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x4d,
   0xeb, 0x6c, 0x00, 0x4a, 0x00, 0x42, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0x4f, 0xeb, 0x62, 0x00, 0x40, 0x00, 0x60, 0x02, 0x80, 0xea, 0xff,
   0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x8c,
   0x4d, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x6a, 0x81,
   0x3a, 0x08, 0xeb, 0x6e, 0x00, 0x4c, 0x00, 0x90, 0x4f, 0xff, 0x8b, 0x6e, 0xf2,
   0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xb0, 0x6c, 0x81, 0x3b, 0x08, 0xeb, 0x60,
   0x01, 0x5e, 0x00, 0x97, 0x56, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x2c,
   0x80, 0xad, 0x08, 0x00, 0xc0, 0x81, 0x42, 0x02, 0x80, 0xea, 0xff, 0x47, 0x20,
   0xec, 0x4e, 0x98, 0x66, 0x81, 0x20, 0x88, 0xb4, 0xe9, 0x80, 0x08, 0x00, 0x88,
   0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x52, 0xeb, 0x71, 0x00, 0x4f,
   0x00, 0x43, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xd4, 0x40,
   0xa0, 0x2f, 0x90, 0xeb, 0x63, 0x00, 0x41, 0xc0, 0xa5, 0x40, 0xff, 0x02, 0x80,
   0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2c, 0x80, 0xad, 0x08, 0x00,
   0xc0, 0x91, 0x52, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xae,
   0x60, 0x80, 0x3a, 0x08, 0xeb, 0x73, 0x00, 0x51, 0x00, 0x88, 0x47, 0xff, 0x8b,
   0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xb0, 0x6c, 0x81, 0x3c, 0x08,
   0xeb, 0x65, 0x01, 0x63, 0x00, 0x9a, 0x59, 0xff, 0x58, 0x20, 0xe4, 0xce, 0x08,
   0x9c, 0x66, 0x81, 0x20, 0x88, 0xb4, 0xe2, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80,
   0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2e, 0x80, 0xaf, 0x08, 0x00,
   0xc0, 0x93, 0x54, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x4a,
   0xeb, 0x69, 0x00, 0x47, 0x00, 0x63, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0xcb, 0xec, 0x80, 0x10, 0xeb, 0x63, 0x01, 0x61, 0xc0, 0x95, 0x6a,
   0x02, 0x80, 0xea, 0xff, 0x47, 0x20, 0xec, 0x4e, 0x80, 0x66, 0x81, 0x20, 0x88,
   0xb4, 0xe6, 0x80, 0x08, 0x00, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f,
   0xe0, 0xb0, 0x6c, 0x81, 0x3a, 0x08, 0xeb, 0x75, 0x00, 0x53, 0x00, 0x81, 0x40,
   0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xb0, 0x6c, 0x81,
   0x3d, 0x08, 0xeb, 0x6a, 0x01, 0x68, 0x00, 0x8b, 0x4a, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x43, 0xeb, 0x62,
   0x00, 0x40, 0x00, 0x58, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0xc4, 0xe5, 0x80, 0x10, 0xeb, 0x78, 0x00, 0x56, 0xc0, 0x9b, 0x4c, 0x02, 0x80,
   0xea, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc9, 0xe8,
   0x80, 0x10, 0xeb, 0x7b, 0x00, 0x59, 0xc0, 0x23, 0x22, 0x8a, 0x6e, 0xf2, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc7, 0xe6, 0x80, 0x10, 0xeb, 0x6c, 0x00, 0x4a,
   0xc0, 0x21, 0x20, 0x02, 0x80, 0x6a, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff,
   0xff, 0xff,
};

static const uint32_t spm_load_1X_7_buffers_const_dest[14] = {
   37, 36, 39, 38, 41, 40, 43, 42, 45, 44, 47, 46, 49, 48,
};

static const struct pvr_shader_factory_info spm_load_1X_7_buffers_info = {
   45,
   53,
   0,
   0,
   0,
   sizeof(spm_load_1X_7_buffers_shader_code),
   spm_load_1X_7_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_1X_7_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_2X_1_regs_shader_code[80] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90,
   0x42, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc2, 0x83, 0x10, 0x00, 0x00,
   0x40, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00,
   0x41, 0xff, 0x58, 0x20, 0xe4, 0x52, 0x04, 0x80, 0x60, 0x80, 0x20, 0x88,
   0xa7, 0xe1, 0x80, 0x08, 0x00, 0xff, 0x05, 0x80, 0x6a, 0xff, 0xf3, 0xff,
   0xff, 0xff, 0xff, 0xff, 0x58, 0x9a, 0x80, 0xd3, 0x3f, 0x41, 0x00, 0x00,
   0x20, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff,
};

static const struct pvr_shader_factory_info spm_load_2X_1_regs_info = {
   3,
   40,
   0,
   0,
   0,
   sizeof(spm_load_2X_1_regs_shader_code),
   spm_load_2X_1_regs_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   NULL,
   0,
   NULL,
   0,
};

static const uint8_t spm_load_2X_2_regs_shader_code[80] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90,
   0x42, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc2, 0x83, 0x10, 0x00, 0x00,
   0x40, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00,
   0x41, 0xff, 0x58, 0x20, 0xe4, 0x56, 0x04, 0x80, 0x60, 0x80, 0x20, 0x88,
   0xa7, 0xe1, 0x80, 0x08, 0x00, 0xff, 0x05, 0x80, 0x6a, 0xff, 0xf3, 0xff,
   0xff, 0xff, 0xff, 0xff, 0x38, 0x8e, 0x80, 0x87, 0xc2, 0xe1, 0x80, 0x10,
   0x00, 0xc0, 0x21, 0x20, 0xf2, 0xff, 0xff, 0xff,
};

static const struct pvr_shader_factory_info spm_load_2X_2_regs_info = {
   3,
   40,
   0,
   0,
   0,
   sizeof(spm_load_2X_2_regs_shader_code),
   spm_load_2X_2_regs_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   NULL,
   0,
   NULL,
   0,
};

static const uint8_t spm_load_2X_4_regs_shader_code[88] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x43,
   0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc2, 0x83, 0x10, 0x00, 0x00, 0x41, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x42, 0xff, 0x58,
   0x20, 0xe4, 0x5e, 0x04, 0x80, 0x61, 0x80, 0x20, 0x88, 0xa7, 0xe0, 0x80, 0x08,
   0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0x87, 0xc1, 0xe0, 0x80, 0x10,
   0x00, 0xc0, 0x21, 0x20, 0xff, 0xf1, 0xff, 0x38, 0x8e, 0x80, 0x87, 0xc3, 0xe2,
   0x80, 0x10, 0x00, 0xc0, 0x23, 0x22, 0xf2, 0xff, 0xff, 0xff,
};

static const struct pvr_shader_factory_info spm_load_2X_4_regs_info = {
   4,
   40,
   0,
   0,
   0,
   sizeof(spm_load_2X_4_regs_shader_code),
   spm_load_2X_4_regs_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   NULL,
   0,
   NULL,
   0,
};

static const uint8_t spm_load_2X_1_buffers_shader_code[232] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x48,
   0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc2, 0x83, 0x10, 0x00, 0x00, 0x46, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x47, 0xff, 0x68,
   0x20, 0xe4, 0xde, 0x04, 0x08, 0x84, 0x66, 0x80, 0x20, 0x88, 0xa9, 0xe2, 0x80,
   0x08, 0x00, 0x58, 0x20, 0xec, 0x5e, 0x04, 0x80, 0x66, 0x80, 0x20, 0x88, 0xa9,
   0xea, 0x80, 0x08, 0x00, 0xff, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x49, 0xff,
   0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x81,
   0x40, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30,
   0x8f, 0x4e, 0x02, 0x80, 0x6a, 0xff, 0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00,
   0xc9, 0x62, 0x00, 0x40, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81,
   0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x81, 0x42, 0x02, 0x80, 0xea,
   0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xcd, 0xe4, 0x80,
   0x10, 0xc9, 0x63, 0x00, 0x41, 0xc0, 0x23, 0x48, 0x27, 0x0e, 0xe3, 0x81, 0x5c,
   0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x86, 0x47, 0x8a, 0x6e, 0xf2, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xcc, 0xe5, 0x80, 0x10, 0xc9, 0x68, 0x00, 0x46,
   0xc0, 0x22, 0x50, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xcb,
   0xea, 0x80, 0x10, 0xc9, 0x70, 0x00, 0x4e, 0xc0, 0x21, 0x20, 0x03, 0x80, 0x6a,
   0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_2X_1_buffers_const_dest[14] = {
   37,         36,         4294967295, 4294967295, 4294967295,
   4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
   4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_2X_1_buffers_info = {
   17,
   42,
   0,
   0,
   0,
   sizeof(spm_load_2X_1_buffers_shader_code),
   spm_load_2X_1_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_2X_1_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_2X_2_buffers_shader_code[360] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x4f,
   0xff, 0x26, 0x06, 0x87, 0xa7, 0xc2, 0x83, 0x18, 0x00, 0x30, 0x8d, 0x52, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x4e, 0xff, 0x68,
   0x20, 0xe4, 0xde, 0x04, 0x08, 0x84, 0x6d, 0x80, 0x20, 0x88, 0xab, 0xe2, 0x80,
   0x08, 0x00, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x53, 0xff, 0x68, 0x20, 0xec,
   0xde, 0x04, 0x08, 0x88, 0x6d, 0x80, 0x20, 0x88, 0xab, 0xe8, 0x80, 0x08, 0x00,
   0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x81,
   0x40, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0x30,
   0x91, 0x50, 0x02, 0x80, 0x6a, 0xff, 0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00,
   0xd3, 0x62, 0x00, 0x40, 0x00, 0x58, 0x20, 0xec, 0x5e, 0x04, 0x80, 0x6d, 0x80,
   0x20, 0x88, 0xab, 0xec, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x81, 0x42,
   0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xd3, 0x63, 0x00, 0x41, 0x00, 0x02,
   0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0xc0, 0x82, 0x43, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0,
   0xa6, 0x72, 0x80, 0x3a, 0x08, 0xd3, 0x64, 0x00, 0x42, 0x00, 0x87, 0x46, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5,
   0x08, 0x00, 0xc0, 0x83, 0x44, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f,
   0xe0, 0xa6, 0x72, 0x80, 0x3d, 0x08, 0xd3, 0x65, 0x00, 0x43, 0x00, 0x81, 0x40,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xd3,
   0x68, 0x00, 0x46, 0x00, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b,
   0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x87, 0x48, 0x8a, 0x6e, 0xf2, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xca, 0xeb, 0x80, 0x10, 0xd3, 0x69, 0x00, 0x47,
   0xc0, 0x92, 0x42, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xcf,
   0xee, 0x80, 0x10, 0xd3, 0x72, 0x00, 0x50, 0xc0, 0x23, 0x22, 0x8a, 0x6e, 0xf2,
   0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xcd, 0xec, 0x80, 0x10, 0xd3, 0x62, 0x00,
   0x40, 0xc0, 0x21, 0x20, 0x05, 0x80, 0x6a, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff,
   0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_2X_2_buffers_const_dest[14] = {
   37,         36,         39,         38,         4294967295,
   4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
   4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_2X_2_buffers_info = {
   20,
   44,
   0,
   0,
   0,
   sizeof(spm_load_2X_2_buffers_shader_code),
   spm_load_2X_2_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_2X_2_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_2X_3_buffers_shader_code[488] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x55,
   0xff, 0x26, 0x06, 0x87, 0xa7, 0xc2, 0x83, 0x18, 0x00, 0x30, 0x93, 0x47, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x54, 0xff, 0x68,
   0x20, 0xe4, 0xde, 0x04, 0x08, 0x84, 0x73, 0x80, 0x20, 0x88, 0xad, 0xe2, 0x80,
   0x08, 0x00, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x59, 0xff, 0x68, 0x20, 0xec,
   0xde, 0x04, 0x08, 0x88, 0x73, 0x80, 0x20, 0x88, 0xad, 0xe8, 0x80, 0x08, 0x00,
   0x68, 0x20, 0xec, 0xde, 0x04, 0x08, 0x8c, 0x73, 0x80, 0x20, 0x88, 0xad, 0xee,
   0x80, 0x08, 0x00, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0x30, 0x81, 0x40, 0x58, 0x20, 0xec, 0x5e, 0x04, 0x80, 0x73, 0x80, 0x20,
   0x88, 0xad, 0xf2, 0x80, 0x08, 0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1,
   0x28, 0x80, 0xa9, 0x08, 0x00, 0x30, 0x97, 0x56, 0x02, 0x80, 0x6a, 0xff, 0x66,
   0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xd9, 0x62, 0x00, 0x40, 0x00, 0x02, 0x80,
   0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00,
   0xc0, 0x81, 0x42, 0x89, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xa9,
   0x08, 0x00, 0xd9, 0x63, 0x00, 0x41, 0x00, 0x58, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x82, 0x43,
   0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa6, 0x67, 0x80, 0x3a,
   0x08, 0xd9, 0x64, 0x00, 0x42, 0x00, 0x87, 0x46, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x83,
   0x44, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x78, 0x80,
   0x3c, 0x08, 0xd9, 0x65, 0x00, 0x43, 0x00, 0x81, 0x40, 0xff, 0x02, 0x80, 0xea,
   0xff, 0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xd9, 0x68, 0x00, 0x46, 0x00,
   0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x26, 0x80, 0xa7,
   0x08, 0x00, 0xc0, 0x87, 0x48, 0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xd9,
   0x69, 0x00, 0x47, 0x00, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c,
   0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x88, 0x49, 0x8b, 0x6e, 0xfa, 0xa6,
   0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x78, 0x80, 0x3a, 0x08, 0xd9, 0x6a, 0x00,
   0x48, 0x00, 0x8d, 0x4c, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81,
   0x5d, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x89, 0x4a, 0x8b, 0x6e, 0xfa,
   0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x78, 0x80, 0x3d, 0x08, 0xd9, 0x6b,
   0x00, 0x49, 0x00, 0x88, 0x47, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0x4f, 0xd9, 0x6e, 0x00, 0x4c, 0x00, 0x58, 0x02, 0x80, 0xea, 0xff,
   0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xd0, 0xf1, 0x80, 0x10,
   0xd9, 0x78, 0x00, 0x56, 0xc0, 0x82, 0x49, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03,
   0xd0, 0x3f, 0x87, 0xd5, 0xf4, 0x80, 0x10, 0xd9, 0x62, 0x00, 0x40, 0xc0, 0x23,
   0x22, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xd3, 0xf2, 0x80,
   0x10, 0xd9, 0x69, 0x00, 0x47, 0xc0, 0x21, 0x20, 0x02, 0x80, 0x6a, 0xff, 0x04,
   0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_2X_3_buffers_const_dest[14] = {
   37,         36,         39,         38,         41,
   40,         4294967295, 4294967295, 4294967295, 4294967295,
   4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_2X_3_buffers_info = {
   26,
   46,
   0,
   0,
   0,
   sizeof(spm_load_2X_3_buffers_shader_code),
   spm_load_2X_3_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_2X_3_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_2X_4_buffers_shader_code[640] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x54,
   0xff, 0x26, 0x06, 0x87, 0xa7, 0xc2, 0x83, 0x18, 0x00, 0x30, 0x92, 0x46, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x53, 0xff, 0x68,
   0x20, 0xe4, 0xde, 0x04, 0x08, 0x84, 0x72, 0x80, 0x20, 0x88, 0xaf, 0xea, 0x80,
   0x08, 0x00, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x5b, 0xff, 0x68, 0x20, 0xec,
   0xde, 0x04, 0x08, 0x88, 0x72, 0x80, 0x20, 0x88, 0xaf, 0xe2, 0x80, 0x08, 0x00,
   0x58, 0x20, 0xec, 0x5e, 0x04, 0x8c, 0x72, 0x80, 0x20, 0x88, 0xaf, 0xee, 0x80,
   0x08, 0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0x30, 0x89, 0x48, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x28, 0x80, 0xa9,
   0x08, 0x00, 0x30, 0x96, 0x55, 0x02, 0x80, 0x6a, 0xff, 0x66, 0x28, 0xf2, 0xa6,
   0xc8, 0x03, 0x00, 0xdb, 0x6a, 0x00, 0x48, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x89, 0x4a,
   0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xdb, 0x6b, 0x00, 0x49, 0x00, 0x02,
   0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0xc0, 0x8a, 0x4b, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0,
   0xa6, 0x66, 0x80, 0x3a, 0x08, 0xdb, 0x6c, 0x00, 0x4a, 0x00, 0x81, 0x40, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5,
   0x08, 0x00, 0xc0, 0x8b, 0x4c, 0x26, 0x06, 0x87, 0xa9, 0x40, 0xa0, 0x2b, 0x98,
   0x00, 0x30, 0x8a, 0x46, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0,
   0xaa, 0x6a, 0x80, 0x3b, 0x08, 0xdb, 0x6d, 0x00, 0x4b, 0x00, 0x89, 0x48, 0xff,
   0x02, 0x80, 0xea, 0xff, 0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xdb, 0x62,
   0x00, 0x40, 0x00, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1,
   0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x81, 0x42, 0x66, 0x28, 0xfa, 0xa6, 0xc8,
   0x03, 0x00, 0xdb, 0x63, 0x00, 0x41, 0x00, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x02,
   0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8,
   0x66, 0x80, 0x3a, 0x08, 0xdb, 0x64, 0x00, 0x42, 0x00, 0x8d, 0x4c, 0xff, 0x02,
   0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x26, 0x80, 0xa7, 0x08,
   0x00, 0xc0, 0x83, 0x44, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0,
   0xaa, 0x6a, 0x80, 0x3c, 0x08, 0xdb, 0x65, 0x00, 0x43, 0x00, 0x99, 0x58, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0x4f, 0xdb, 0x6e, 0x00, 0x4c, 0x00, 0x44, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1,
   0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x88, 0x6a, 0xfa, 0xa6, 0xc8,
   0x03, 0xd0, 0x3f, 0x87, 0x51, 0xdb, 0x64, 0x00, 0x42, 0x00, 0x57, 0x02, 0x80,
   0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x6a,
   0x80, 0x3d, 0x08, 0xdb, 0x77, 0x00, 0x55, 0x00, 0x8c, 0x4b, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5c, 0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x8e, 0x4f, 0x02,
   0x80, 0xea, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa,
   0x6a, 0x80, 0x3a, 0x08, 0xdb, 0x70, 0x00, 0x4e, 0x00, 0x83, 0x42, 0xff, 0x58,
   0x20, 0xec, 0x5e, 0x04, 0x90, 0x72, 0x80, 0x20, 0x88, 0xaf, 0xe4, 0x80, 0x08,
   0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0x45, 0xdb, 0x64, 0x00, 0x42, 0x00, 0x4a, 0x8a, 0x6e, 0xf2, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc6, 0xe7, 0x80, 0x10, 0xdb, 0x6a, 0x00, 0x48,
   0xc0, 0x9a, 0x4d, 0x02, 0x80, 0xea, 0xff, 0x58, 0x20, 0xec, 0x5e, 0x04, 0x80,
   0x72, 0x80, 0x20, 0x88, 0xaf, 0xe0, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0xea,
   0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc3, 0xe2, 0x80,
   0x10, 0xdb, 0x7a, 0x00, 0x58, 0xc0, 0x23, 0x22, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8,
   0x03, 0xd0, 0x3f, 0x87, 0xc1, 0xe0, 0x80, 0x10, 0xdb, 0x6d, 0x00, 0x4b, 0xc0,
   0x21, 0x20, 0x03, 0x80, 0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2,
   0xff, 0xff, 0xff,
};

static const uint32_t spm_load_2X_4_buffers_const_dest[14] = {
   37, 36,         39,         38,         41,         40,         43,
   42, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_2X_4_buffers_info = {
   28,
   48,
   0,
   0,
   0,
   sizeof(spm_load_2X_4_buffers_shader_code),
   spm_load_2X_4_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_2X_4_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_2X_5_buffers_shader_code[784] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x53,
   0xff, 0x26, 0x06, 0x87, 0xa9, 0xc2, 0x83, 0x18, 0x00, 0x30, 0x91, 0x55, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x52, 0xff, 0x68,
   0x20, 0xe4, 0xde, 0x04, 0x08, 0x84, 0x71, 0x80, 0x20, 0x88, 0xb1, 0xe9, 0x80,
   0x08, 0x00, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x5e, 0xff, 0x68, 0x20, 0xec,
   0xde, 0x04, 0x08, 0x88, 0x71, 0x80, 0x20, 0x88, 0xb1, 0xe2, 0x80, 0x08, 0x00,
   0x58, 0x20, 0xec, 0x5e, 0x04, 0x8c, 0x71, 0x80, 0x20, 0x88, 0xb1, 0xed, 0x80,
   0x08, 0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0x30, 0x88, 0x47, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8,
   0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x75, 0x80, 0x3d, 0x08, 0xde, 0x69, 0x00, 0x47,
   0x00, 0x9c, 0x5b, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b,
   0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x89, 0x48, 0x66, 0x28, 0xf2, 0xa6,
   0xc8, 0x03, 0x00, 0xde, 0x6a, 0x00, 0x48, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x89, 0x4a,
   0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00, 0x30, 0x97,
   0x56, 0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xde, 0x6b, 0x00, 0x49, 0x00,
   0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5,
   0x08, 0x00, 0xc0, 0x8a, 0x4b, 0x26, 0x06, 0x87, 0xad, 0x40, 0xa0, 0x27, 0x98,
   0x00, 0x30, 0x86, 0x5f, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0,
   0xa6, 0x66, 0x80, 0x3a, 0x08, 0xde, 0x6c, 0x00, 0x4a, 0x00, 0x81, 0x40, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x2a, 0x80, 0xab,
   0x08, 0x00, 0x30, 0x8a, 0x49, 0x02, 0x80, 0xea, 0xff, 0x66, 0x28, 0xf2, 0xa6,
   0xc8, 0x03, 0x00, 0xde, 0x62, 0x00, 0x40, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x81, 0x42,
   0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xde, 0x63, 0x00, 0x41, 0x00, 0x02,
   0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08,
   0x00, 0xc0, 0x82, 0x43, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0,
   0xa8, 0x75, 0x80, 0x3a, 0x08, 0xde, 0x64, 0x00, 0x42, 0x00, 0x8c, 0x4b, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x26, 0x80, 0xa7,
   0x08, 0x00, 0xc0, 0x83, 0x44, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f,
   0xe0, 0xac, 0x7f, 0x80, 0x3b, 0x08, 0xde, 0x65, 0x00, 0x43, 0x00, 0x95, 0x54,
   0xff, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x4e, 0xde, 0x6d,
   0x00, 0x4b, 0x00, 0x47, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b,
   0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x85, 0x46, 0x8b, 0x6e, 0xf2, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xd0, 0x40, 0xa0, 0x2b, 0x90, 0xde, 0x67, 0x00,
   0x45, 0xc0, 0x9d, 0x42, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f,
   0xe0, 0xac, 0x7f, 0x80, 0x3c, 0x08, 0xde, 0x7d, 0x00, 0x5b, 0x00, 0x9a, 0x59,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x28, 0x80,
   0xa9, 0x08, 0x00, 0xc0, 0x8d, 0x4e, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3,
   0x3f, 0xe0, 0xaa, 0x62, 0x80, 0x3a, 0x08, 0xde, 0x6f, 0x00, 0x4d, 0x00, 0x84,
   0x43, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2a,
   0x80, 0xab, 0x08, 0x00, 0xc0, 0x9b, 0x5c, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x90,
   0x71, 0x80, 0x20, 0x88, 0xb1, 0xe5, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x46, 0xde, 0x65,
   0x00, 0x43, 0x00, 0x58, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0xc7, 0xe8, 0x80, 0x10, 0xde, 0x78, 0x00, 0x56, 0xc0, 0x9d, 0x4b, 0x8b, 0x6e,
   0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x7f, 0x80, 0x3a, 0x08, 0xde,
   0x7d, 0x00, 0x5b, 0x00, 0x81, 0x40, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e,
   0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x7f, 0x80, 0x3d, 0x08, 0xde,
   0x6b, 0x00, 0x49, 0x00, 0x90, 0x4f, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x68, 0x20,
   0xe4, 0xde, 0x04, 0x08, 0x94, 0x71, 0x80, 0x20, 0x88, 0xb1, 0xe2, 0x80, 0x08,
   0x00, 0x02, 0x80, 0xea, 0xff, 0x58, 0x20, 0xec, 0x5e, 0x04, 0x80, 0x71, 0x80,
   0x20, 0x88, 0xb1, 0xe6, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x88,
   0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x43, 0xde, 0x62, 0x00, 0x40,
   0x00, 0x56, 0x02, 0x80, 0xea, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0xc4, 0xe5, 0x80, 0x10, 0xde, 0x76, 0x00, 0x54, 0xc0, 0x9b, 0x51,
   0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc9, 0xe8, 0x80, 0x10,
   0xde, 0x7b, 0x00, 0x59, 0xc0, 0x23, 0x22, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03,
   0xd0, 0x3f, 0x87, 0xc7, 0xe6, 0x80, 0x10, 0xde, 0x71, 0x00, 0x4f, 0xc0, 0x21,
   0x20, 0x04, 0x80, 0x6a, 0xff, 0xf2, 0xff, 0xff, 0xff, 0x04, 0x80, 0xee, 0x00,
   0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_2X_5_buffers_const_dest[14] = {
   37, 36, 39, 38,         41,         40,         43,
   42, 45, 44, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_2X_5_buffers_info = {
   32,
   50,
   0,
   0,
   0,
   sizeof(spm_load_2X_5_buffers_shader_code),
   spm_load_2X_5_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_2X_5_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_2X_6_buffers_shader_code[928] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x52,
   0xff, 0x26, 0x06, 0x87, 0xa9, 0xc2, 0x83, 0x18, 0x00, 0x30, 0x90, 0x5a, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x51, 0xff, 0x68,
   0x20, 0xe4, 0xde, 0x04, 0x08, 0x84, 0x70, 0x80, 0x20, 0x88, 0xb3, 0xe2, 0x80,
   0x08, 0x00, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x5e, 0xff, 0x68, 0x20, 0xec,
   0xde, 0x04, 0x08, 0x88, 0x70, 0x80, 0x20, 0x88, 0xb3, 0xec, 0x80, 0x08, 0x00,
   0x58, 0x20, 0xec, 0x5e, 0x04, 0x8c, 0x70, 0x80, 0x20, 0x88, 0xb3, 0xe6, 0x80,
   0x08, 0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0x30, 0x81, 0x40, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8,
   0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x7a, 0x80, 0x3d, 0x08, 0xde, 0x62, 0x00, 0x40,
   0x00, 0x9c, 0x5b, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b,
   0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x82, 0x41, 0x66, 0x28, 0xf2, 0xa6,
   0xc8, 0x03, 0x00, 0xde, 0x63, 0x00, 0x41, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x82, 0x43,
   0x02, 0x80, 0xea, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0xc5, 0xed, 0x80, 0x10, 0xde, 0x64, 0x00, 0x42, 0xc0, 0x98, 0x59, 0x27, 0x0e,
   0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x96, 0x57, 0x02,
   0x80, 0x6a, 0xff, 0x26, 0x06, 0x87, 0xab, 0x40, 0xa0, 0x27, 0x98, 0x00, 0x30,
   0x84, 0x42, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa6, 0x64,
   0x80, 0x3a, 0x08, 0xde, 0x78, 0x00, 0x56, 0x00, 0x8b, 0x4a, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x62,
   0x80, 0x3d, 0x08, 0xde, 0x6c, 0x00, 0x4a, 0x00, 0x96, 0x55, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5b, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x97, 0x58, 0x66,
   0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xde, 0x79, 0x00, 0x57, 0x00, 0x02, 0x80,
   0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00,
   0xc0, 0x8c, 0x4d, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x2c, 0x80, 0xad, 0x08,
   0x00, 0x30, 0x8b, 0x4a, 0x02, 0x80, 0xea, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8,
   0x03, 0xd0, 0x3f, 0x87, 0x4f, 0xde, 0x6e, 0x00, 0x4c, 0x00, 0x59, 0x27, 0x0e,
   0xe3, 0x81, 0x5d, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x97, 0x58, 0x8b,
   0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x7a, 0x80, 0x3a, 0x08,
   0xde, 0x79, 0x00, 0x57, 0x00, 0x85, 0x44, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d,
   0xa1, 0x2c, 0x80, 0xad, 0x08, 0x00, 0x30, 0x94, 0x53, 0x02, 0x80, 0xea, 0xff,
   0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x47, 0xde, 0x66, 0x00,
   0x44, 0x00, 0x59, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x28, 0x80, 0xa9, 0x08,
   0x00, 0xc0, 0x97, 0x58, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0x49, 0xde, 0x79, 0x00, 0x57, 0x00, 0x5d, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06,
   0x87, 0xad, 0x40, 0xa0, 0x2f, 0x98, 0x00, 0x30, 0x8d, 0x40, 0x8b, 0x6e, 0xf2,
   0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xae, 0x6d, 0x80, 0x3b, 0x08, 0xde, 0x7d,
   0x00, 0x5b, 0x00, 0x8f, 0x4e, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3,
   0x81, 0x5c, 0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x86, 0x47, 0x8b, 0x6e,
   0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x62, 0x80, 0x3a, 0x08, 0xde,
   0x68, 0x00, 0x46, 0x00, 0x83, 0x42, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1,
   0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x9f, 0x60, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x9a, 0x5b,
   0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x98,
   0x59, 0x02, 0x80, 0xea, 0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x90, 0x70, 0x80,
   0x20, 0x88, 0xb3, 0xe4, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x88,
   0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x45, 0xde, 0x64, 0x00, 0x42,
   0x00, 0x61, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc6, 0xe7,
   0x80, 0x10, 0xde, 0x61, 0x01, 0x5f, 0xc0, 0x9c, 0x57, 0x8b, 0x6e, 0xf2, 0xa6,
   0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x60, 0x80, 0x3a, 0x08, 0xde, 0x7c, 0x00,
   0x5a, 0x00, 0x81, 0x40, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6,
   0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xae, 0x6d, 0x80, 0x3c, 0x08, 0xde, 0x77, 0x00,
   0x55, 0x00, 0x9c, 0x5b, 0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x94, 0x70, 0x80,
   0x20, 0x88, 0xb3, 0xe2, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x88,
   0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x43, 0xde, 0x62, 0x00, 0x40,
   0x00, 0x4c, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc4, 0xe5,
   0x80, 0x10, 0xde, 0x6c, 0x00, 0x4a, 0xc0, 0x9a, 0x55, 0x02, 0x80, 0x6a, 0xff,
   0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xae, 0x6d, 0x80, 0x3a,
   0x08, 0xde, 0x7a, 0x00, 0x58, 0x00, 0x81, 0x40, 0xff, 0x8b, 0x6e, 0xfa, 0xa6,
   0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xae, 0x6d, 0x80, 0x3d, 0x08, 0xde, 0x75, 0x00,
   0x53, 0x00, 0x8b, 0x4a, 0xff, 0x68, 0x20, 0xe4, 0xde, 0x04, 0x08, 0x98, 0x70,
   0x80, 0x20, 0x88, 0xb3, 0xe2, 0x80, 0x08, 0x00, 0x58, 0x20, 0xe4, 0x5e, 0x04,
   0x80, 0x70, 0x80, 0x20, 0x88, 0xb3, 0xe6, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x43, 0xde,
   0x62, 0x00, 0x40, 0x00, 0x50, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f,
   0x87, 0xc4, 0xe5, 0x80, 0x10, 0xde, 0x70, 0x00, 0x4e, 0xc0, 0x9d, 0x4c, 0x8a,
   0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc9, 0xe8, 0x80, 0x10, 0xde,
   0x7d, 0x00, 0x5b, 0xc0, 0x23, 0x22, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0xc7, 0xe6, 0x80, 0x10, 0xde, 0x6c, 0x00, 0x4a, 0xc0, 0x21, 0x20,
   0x05, 0x80, 0xea, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x04, 0x80, 0xee,
   0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_2X_6_buffers_const_dest[14] = {
   37, 36, 39, 38, 41, 40, 43, 42, 45, 44, 47, 46, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_2X_6_buffers_info = {
   34,
   52,
   0,
   0,
   0,
   sizeof(spm_load_2X_6_buffers_shader_code),
   spm_load_2X_6_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_2X_6_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_2X_7_buffers_shader_code[1072] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x50,
   0xff, 0x26, 0x06, 0x87, 0xa9, 0xc2, 0x83, 0x18, 0x00, 0x30, 0x8e, 0x51, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x4f, 0xff, 0x68,
   0x20, 0xe4, 0xde, 0x04, 0x08, 0x84, 0x6e, 0x80, 0x20, 0x88, 0xb5, 0xe2, 0x80,
   0x08, 0x00, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x5a, 0xff, 0x68, 0x20, 0xec,
   0xde, 0x04, 0x08, 0x88, 0x6e, 0x80, 0x20, 0x88, 0xb5, 0xe6, 0x80, 0x08, 0x00,
   0x58, 0x20, 0xec, 0x5e, 0x04, 0x8c, 0x6e, 0x80, 0x20, 0x88, 0xb5, 0xea, 0x80,
   0x08, 0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0x30, 0x81, 0x40, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8,
   0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x71, 0x80, 0x3d, 0x08, 0xda, 0x62, 0x00, 0x40,
   0x00, 0x98, 0x57, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b,
   0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x82, 0x41, 0x66, 0x28, 0xf2, 0xa6,
   0xc8, 0x03, 0x00, 0xda, 0x63, 0x00, 0x41, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x82, 0x43,
   0x02, 0x80, 0xea, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0xc5, 0xe7, 0x80, 0x10, 0xda, 0x64, 0x00, 0x42, 0xc0, 0x96, 0x5e, 0x27, 0x0e,
   0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x94, 0x55, 0x26,
   0x06, 0x87, 0xab, 0x40, 0xa0, 0x27, 0x98, 0x00, 0x30, 0x80, 0x41, 0x02, 0x80,
   0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa6, 0x60,
   0x80, 0x3a, 0x08, 0xda, 0x76, 0x00, 0x54, 0x00, 0x85, 0x44, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x61,
   0x80, 0x3d, 0x08, 0xda, 0x66, 0x00, 0x44, 0x00, 0x96, 0x55, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5b, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x9c, 0x5d, 0x66,
   0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xda, 0x7e, 0x00, 0x5c, 0x00, 0x02, 0x80,
   0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00,
   0xc0, 0x86, 0x47, 0x02, 0x80, 0xea, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03,
   0xd0, 0x3f, 0x87, 0xc9, 0xeb, 0x80, 0x10, 0xda, 0x68, 0x00, 0x46, 0xc0, 0x85,
   0x5d, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0,
   0x83, 0x44, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3,
   0x3f, 0xe0, 0xa8, 0x71, 0x80, 0x3a, 0x08, 0xda, 0x65, 0x00, 0x43, 0x00, 0x89,
   0x48, 0xff, 0x26, 0x06, 0x87, 0xb1, 0x40, 0xa0, 0x2d, 0x98, 0x00, 0x30, 0x9f,
   0x5e, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x7f, 0x80,
   0x3d, 0x08, 0xda, 0x6a, 0x00, 0x48, 0x00, 0x94, 0x53, 0xff, 0x27, 0x0e, 0xe3,
   0x81, 0x5b, 0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x9b, 0x5c, 0x66, 0x28,
   0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xda, 0x7d, 0x00, 0x5b, 0x00, 0x02, 0x80, 0xea,
   0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0,
   0x8a, 0x4b, 0x02, 0x80, 0x6a, 0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x90, 0x6e,
   0x80, 0x20, 0x88, 0xb5, 0xe2, 0x80, 0x08, 0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81,
   0x5b, 0xa1, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0x30, 0x92, 0x51, 0x88, 0x6a, 0xfa,
   0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x4d, 0xda, 0x6c, 0x00, 0x4a, 0x00, 0x59,
   0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x61, 0x80, 0x3a,
   0x08, 0xda, 0x79, 0x00, 0x57, 0x00, 0x81, 0x40, 0xff, 0x27, 0x0e, 0xe3, 0x81,
   0x5d, 0xa1, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0x30, 0x87, 0x46, 0x02, 0x80, 0x6a,
   0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x43, 0xda, 0x62,
   0x00, 0x40, 0x00, 0x4d, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b,
   0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x8b, 0x4c, 0x88, 0x6a, 0xfa, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x45, 0xda, 0x6d, 0x00, 0x4b, 0x00, 0x57, 0x8b,
   0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xb0, 0x7e, 0x80, 0x3b, 0x08,
   0xda, 0x77, 0x00, 0x55, 0x00, 0x8a, 0x49, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x82, 0x43,
   0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x7f, 0x80, 0x3a,
   0x08, 0xda, 0x64, 0x00, 0x42, 0x00, 0x81, 0x40, 0xff, 0x27, 0x0e, 0xe3, 0x81,
   0x5b, 0xa1, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x9b, 0x5c, 0x02, 0x80, 0xea,
   0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0,
   0x96, 0x57, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2e, 0x80, 0xaf, 0x08, 0x00,
   0xc0, 0x8b, 0x4c, 0x02, 0x80, 0x6a, 0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x94,
   0x6e, 0x80, 0x20, 0x88, 0xb5, 0xe2, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc3, 0x40, 0xa0,
   0x2f, 0x90, 0xda, 0x62, 0x00, 0x40, 0xc0, 0x9d, 0x43, 0xff, 0x8a, 0x6e, 0xfa,
   0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc4, 0xe5, 0x80, 0x10, 0xda, 0x7d, 0x00,
   0x5b, 0xc0, 0x98, 0x55, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8,
   0x03, 0xd3, 0x3f, 0xe0, 0xae, 0x63, 0x80, 0x3a, 0x08, 0xda, 0x78, 0x00, 0x56,
   0x00, 0x81, 0x40, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8,
   0x03, 0xd3, 0x3f, 0xe0, 0xb0, 0x7e, 0x80, 0x3c, 0x08, 0xda, 0x75, 0x00, 0x53,
   0x00, 0x97, 0x56, 0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x98, 0x6e, 0x80, 0x20,
   0x88, 0xb5, 0xe2, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a,
   0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x43, 0xda, 0x62, 0x00, 0x40, 0x00,
   0x53, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc4, 0xe5, 0x80,
   0x10, 0xda, 0x73, 0x00, 0x51, 0xc0, 0x8d, 0x48, 0x02, 0x80, 0x6a, 0xff, 0x8b,
   0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xb0, 0x7e, 0x80, 0x3a, 0x08,
   0xda, 0x6d, 0x00, 0x4b, 0x00, 0x81, 0x40, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8b,
   0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xb0, 0x7e, 0x80, 0x3d, 0x08,
   0xda, 0x68, 0x00, 0x46, 0x00, 0x9d, 0x5c, 0xff, 0x68, 0x20, 0xe4, 0xde, 0x04,
   0x08, 0x9c, 0x6e, 0x80, 0x20, 0x88, 0xb5, 0xe2, 0x80, 0x08, 0x00, 0x58, 0x20,
   0xe4, 0x5e, 0x04, 0x80, 0x6e, 0x80, 0x20, 0x88, 0xb5, 0xf0, 0x80, 0x08, 0x00,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f,
   0x87, 0x43, 0xda, 0x62, 0x00, 0x40, 0x00, 0x4b, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8,
   0x03, 0xd0, 0x3f, 0x87, 0xc4, 0xe5, 0x80, 0x10, 0xda, 0x6b, 0x00, 0x49, 0xc0,
   0x98, 0x5e, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xd3, 0xf2,
   0x80, 0x10, 0xda, 0x78, 0x00, 0x56, 0xc0, 0x23, 0x22, 0x8a, 0x6e, 0xfa, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xd1, 0xf0, 0x80, 0x10, 0xda, 0x7e, 0x00, 0x5c,
   0xc0, 0x21, 0x20, 0x04, 0x80, 0xea, 0xff, 0xf2, 0xff, 0xff, 0xff, 0x04, 0x80,
   0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_2X_7_buffers_const_dest[14] = {
   37, 36, 39, 38, 41, 40, 43, 42, 45, 44, 47, 46, 49, 48,
};

static const struct pvr_shader_factory_info spm_load_2X_7_buffers_info = {
   32,
   54,
   0,
   0,
   0,
   sizeof(spm_load_2X_7_buffers_shader_code),
   spm_load_2X_7_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_2X_7_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_4X_1_regs_shader_code[80] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90,
   0x42, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc2, 0x83, 0x10, 0x00, 0x00,
   0x40, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00,
   0x41, 0xff, 0x58, 0x20, 0xe4, 0x52, 0x04, 0x80, 0x60, 0x80, 0x20, 0x88,
   0xa7, 0xe1, 0x80, 0x08, 0x00, 0xff, 0x05, 0x80, 0x6a, 0xff, 0xf3, 0xff,
   0xff, 0xff, 0xff, 0xff, 0x58, 0x9a, 0x80, 0xd3, 0x3f, 0x41, 0x00, 0x00,
   0x20, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff,
};

static const struct pvr_shader_factory_info spm_load_4X_1_regs_info = {
   3,
   40,
   0,
   0,
   0,
   sizeof(spm_load_4X_1_regs_shader_code),
   spm_load_4X_1_regs_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   NULL,
   0,
   NULL,
   0,
};

static const uint8_t spm_load_4X_2_regs_shader_code[80] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90,
   0x42, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc2, 0x83, 0x10, 0x00, 0x00,
   0x40, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00,
   0x41, 0xff, 0x58, 0x20, 0xe4, 0x56, 0x04, 0x80, 0x60, 0x80, 0x20, 0x88,
   0xa7, 0xe1, 0x80, 0x08, 0x00, 0xff, 0x05, 0x80, 0x6a, 0xff, 0xf3, 0xff,
   0xff, 0xff, 0xff, 0xff, 0x38, 0x8e, 0x80, 0x87, 0xc2, 0xe1, 0x80, 0x10,
   0x00, 0xc0, 0x21, 0x20, 0xf2, 0xff, 0xff, 0xff,
};

static const struct pvr_shader_factory_info spm_load_4X_2_regs_info = {
   3,
   40,
   0,
   0,
   0,
   sizeof(spm_load_4X_2_regs_shader_code),
   spm_load_4X_2_regs_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   NULL,
   0,
   NULL,
   0,
};

static const uint8_t spm_load_4X_4_regs_shader_code[88] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x43,
   0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc2, 0x83, 0x10, 0x00, 0x00, 0x41, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x42, 0xff, 0x58,
   0x20, 0xe4, 0x5e, 0x04, 0x80, 0x61, 0x80, 0x20, 0x88, 0xa7, 0xe0, 0x80, 0x08,
   0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0x87, 0xc1, 0xe0, 0x80, 0x10,
   0x00, 0xc0, 0x21, 0x20, 0xff, 0xf1, 0xff, 0x38, 0x8e, 0x80, 0x87, 0xc3, 0xe2,
   0x80, 0x10, 0x00, 0xc0, 0x23, 0x22, 0xf2, 0xff, 0xff, 0xff,
};

static const struct pvr_shader_factory_info spm_load_4X_4_regs_info = {
   4,    40, 0,    0,          0, 88,   spm_load_4X_4_regs_shader_code,
   0,    0,  NULL, 4294967295, 0, NULL, 0,
   NULL, 0,
};

static const uint8_t spm_load_4X_1_buffers_shader_code[232] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x48,
   0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc2, 0x83, 0x10, 0x00, 0x00, 0x46, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x47, 0xff, 0x68,
   0x20, 0xe4, 0xde, 0x04, 0x08, 0x84, 0x66, 0x80, 0x20, 0x88, 0xa9, 0xe2, 0x80,
   0x08, 0x00, 0x58, 0x20, 0xec, 0x5e, 0x04, 0x80, 0x66, 0x80, 0x20, 0x88, 0xa9,
   0xea, 0x80, 0x08, 0x00, 0xff, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x49, 0xff,
   0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x81,
   0x40, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30,
   0x8f, 0x4e, 0x02, 0x80, 0x6a, 0xff, 0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00,
   0xc9, 0x62, 0x00, 0x40, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81,
   0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x81, 0x42, 0x02, 0x80, 0xea,
   0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xcd, 0xe4, 0x80,
   0x10, 0xc9, 0x63, 0x00, 0x41, 0xc0, 0x23, 0x48, 0x27, 0x0e, 0xe3, 0x81, 0x5c,
   0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x86, 0x47, 0x8a, 0x6e, 0xf2, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xcc, 0xe5, 0x80, 0x10, 0xc9, 0x68, 0x00, 0x46,
   0xc0, 0x22, 0x50, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xcb,
   0xea, 0x80, 0x10, 0xc9, 0x70, 0x00, 0x4e, 0xc0, 0x21, 0x20, 0x03, 0x80, 0x6a,
   0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_4X_1_buffers_const_dest[14] = {
   37,         36,         4294967295, 4294967295, 4294967295,
   4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
   4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_4X_1_buffers_info = {
   17,
   42,
   0,
   0,
   0,
   sizeof(spm_load_4X_1_buffers_shader_code),
   spm_load_4X_1_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_4X_1_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_4X_2_buffers_shader_code[360] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x4f,
   0xff, 0x26, 0x06, 0x87, 0xa7, 0xc2, 0x83, 0x18, 0x00, 0x30, 0x8d, 0x52, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x4e, 0xff, 0x68,
   0x20, 0xe4, 0xde, 0x04, 0x08, 0x84, 0x6d, 0x80, 0x20, 0x88, 0xab, 0xe2, 0x80,
   0x08, 0x00, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x53, 0xff, 0x68, 0x20, 0xec,
   0xde, 0x04, 0x08, 0x88, 0x6d, 0x80, 0x20, 0x88, 0xab, 0xe8, 0x80, 0x08, 0x00,
   0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x81,
   0x40, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0x30,
   0x91, 0x50, 0x02, 0x80, 0x6a, 0xff, 0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00,
   0xd3, 0x62, 0x00, 0x40, 0x00, 0x58, 0x20, 0xec, 0x5e, 0x04, 0x80, 0x6d, 0x80,
   0x20, 0x88, 0xab, 0xec, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x81, 0x42,
   0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xd3, 0x63, 0x00, 0x41, 0x00, 0x02,
   0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0xc0, 0x82, 0x43, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0,
   0xa6, 0x72, 0x80, 0x3a, 0x08, 0xd3, 0x64, 0x00, 0x42, 0x00, 0x87, 0x46, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5,
   0x08, 0x00, 0xc0, 0x83, 0x44, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f,
   0xe0, 0xa6, 0x72, 0x80, 0x3d, 0x08, 0xd3, 0x65, 0x00, 0x43, 0x00, 0x81, 0x40,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xd3,
   0x68, 0x00, 0x46, 0x00, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b,
   0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x87, 0x48, 0x8a, 0x6e, 0xf2, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xca, 0xeb, 0x80, 0x10, 0xd3, 0x69, 0x00, 0x47,
   0xc0, 0x92, 0x42, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xcf,
   0xee, 0x80, 0x10, 0xd3, 0x72, 0x00, 0x50, 0xc0, 0x23, 0x22, 0x8a, 0x6e, 0xf2,
   0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xcd, 0xec, 0x80, 0x10, 0xd3, 0x62, 0x00,
   0x40, 0xc0, 0x21, 0x20, 0x05, 0x80, 0x6a, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff,
   0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_4X_2_buffers_const_dest[14] = {
   37,         36,         39,         38,         4294967295,
   4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
   4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_4X_2_buffers_info = {
   20,
   44,
   0,
   0,
   0,
   sizeof(spm_load_4X_2_buffers_shader_code),
   spm_load_4X_2_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_4X_2_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_4X_3_buffers_shader_code[488] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x55,
   0xff, 0x26, 0x06, 0x87, 0xa7, 0xc2, 0x83, 0x18, 0x00, 0x30, 0x93, 0x47, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x54, 0xff, 0x68,
   0x20, 0xe4, 0xde, 0x04, 0x08, 0x84, 0x73, 0x80, 0x20, 0x88, 0xad, 0xe2, 0x80,
   0x08, 0x00, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x59, 0xff, 0x68, 0x20, 0xec,
   0xde, 0x04, 0x08, 0x88, 0x73, 0x80, 0x20, 0x88, 0xad, 0xe8, 0x80, 0x08, 0x00,
   0x68, 0x20, 0xec, 0xde, 0x04, 0x08, 0x8c, 0x73, 0x80, 0x20, 0x88, 0xad, 0xee,
   0x80, 0x08, 0x00, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0x30, 0x81, 0x40, 0x58, 0x20, 0xec, 0x5e, 0x04, 0x80, 0x73, 0x80, 0x20,
   0x88, 0xad, 0xf2, 0x80, 0x08, 0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1,
   0x28, 0x80, 0xa9, 0x08, 0x00, 0x30, 0x97, 0x56, 0x02, 0x80, 0x6a, 0xff, 0x66,
   0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xd9, 0x62, 0x00, 0x40, 0x00, 0x02, 0x80,
   0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00,
   0xc0, 0x81, 0x42, 0x89, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xa9,
   0x08, 0x00, 0xd9, 0x63, 0x00, 0x41, 0x00, 0x58, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x82, 0x43,
   0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa6, 0x67, 0x80, 0x3a,
   0x08, 0xd9, 0x64, 0x00, 0x42, 0x00, 0x87, 0x46, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x83,
   0x44, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x78, 0x80,
   0x3c, 0x08, 0xd9, 0x65, 0x00, 0x43, 0x00, 0x81, 0x40, 0xff, 0x02, 0x80, 0xea,
   0xff, 0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xd9, 0x68, 0x00, 0x46, 0x00,
   0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x26, 0x80, 0xa7,
   0x08, 0x00, 0xc0, 0x87, 0x48, 0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xd9,
   0x69, 0x00, 0x47, 0x00, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c,
   0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x88, 0x49, 0x8b, 0x6e, 0xfa, 0xa6,
   0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x78, 0x80, 0x3a, 0x08, 0xd9, 0x6a, 0x00,
   0x48, 0x00, 0x8d, 0x4c, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81,
   0x5d, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x89, 0x4a, 0x8b, 0x6e, 0xfa,
   0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x78, 0x80, 0x3d, 0x08, 0xd9, 0x6b,
   0x00, 0x49, 0x00, 0x88, 0x47, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0x4f, 0xd9, 0x6e, 0x00, 0x4c, 0x00, 0x58, 0x02, 0x80, 0xea, 0xff,
   0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xd0, 0xf1, 0x80, 0x10,
   0xd9, 0x78, 0x00, 0x56, 0xc0, 0x82, 0x49, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03,
   0xd0, 0x3f, 0x87, 0xd5, 0xf4, 0x80, 0x10, 0xd9, 0x62, 0x00, 0x40, 0xc0, 0x23,
   0x22, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xd3, 0xf2, 0x80,
   0x10, 0xd9, 0x69, 0x00, 0x47, 0xc0, 0x21, 0x20, 0x02, 0x80, 0x6a, 0xff, 0x04,
   0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_4X_3_buffers_const_dest[14] = {
   37,         36,         39,         38,         41,
   40,         4294967295, 4294967295, 4294967295, 4294967295,
   4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_4X_3_buffers_info = {
   26,
   46,
   0,
   0,
   0,
   sizeof(spm_load_4X_3_buffers_shader_code),
   spm_load_4X_3_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_4X_3_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_4X_4_buffers_shader_code[640] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x54,
   0xff, 0x26, 0x06, 0x87, 0xa7, 0xc2, 0x83, 0x18, 0x00, 0x30, 0x92, 0x56, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x53, 0xff, 0x68,
   0x20, 0xe4, 0xde, 0x04, 0x08, 0x84, 0x72, 0x80, 0x20, 0x88, 0xaf, 0xea, 0x80,
   0x08, 0x00, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x55, 0xff, 0x68, 0x20, 0xec,
   0xde, 0x04, 0x08, 0x88, 0x72, 0x80, 0x20, 0x88, 0xaf, 0xe2, 0x80, 0x08, 0x00,
   0x58, 0x20, 0xec, 0x5e, 0x04, 0x8c, 0x72, 0x80, 0x20, 0x88, 0xaf, 0xee, 0x80,
   0x08, 0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0x30, 0x89, 0x48, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x28, 0x80, 0xa9,
   0x08, 0x00, 0x30, 0x87, 0x46, 0x02, 0x80, 0x6a, 0xff, 0x66, 0x28, 0xf2, 0xa6,
   0xc8, 0x03, 0x00, 0xd5, 0x6a, 0x00, 0x48, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x89, 0x4a,
   0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xd5, 0x6b, 0x00, 0x49, 0x00, 0x02,
   0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0xc0, 0x8a, 0x4b, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0,
   0xa6, 0x76, 0x80, 0x3a, 0x08, 0xd5, 0x6c, 0x00, 0x4a, 0x00, 0x81, 0x40, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5,
   0x08, 0x00, 0xc0, 0x8b, 0x4c, 0x26, 0x06, 0x87, 0xa9, 0x40, 0xa0, 0x2b, 0x98,
   0x00, 0x30, 0x98, 0x49, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0,
   0xaa, 0x78, 0x80, 0x3b, 0x08, 0xd5, 0x6d, 0x00, 0x4b, 0x00, 0x97, 0x56, 0xff,
   0x02, 0x80, 0xea, 0xff, 0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xd5, 0x62,
   0x00, 0x40, 0x00, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1,
   0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x81, 0x42, 0x66, 0x28, 0xfa, 0xa6, 0xc8,
   0x03, 0x00, 0xd5, 0x63, 0x00, 0x41, 0x00, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x02,
   0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8,
   0x69, 0x80, 0x3a, 0x08, 0xd5, 0x64, 0x00, 0x42, 0x00, 0x8d, 0x4c, 0xff, 0x02,
   0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x26, 0x80, 0xa7, 0x08,
   0x00, 0xc0, 0x83, 0x44, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0,
   0xaa, 0x78, 0x80, 0x3c, 0x08, 0xd5, 0x65, 0x00, 0x43, 0x00, 0x8a, 0x49, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0x4f, 0xd5, 0x6e, 0x00, 0x4c, 0x00, 0x44, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1,
   0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x88, 0x6a, 0xfa, 0xa6, 0xc8,
   0x03, 0xd0, 0x3f, 0x87, 0x51, 0xd5, 0x64, 0x00, 0x42, 0x00, 0x48, 0x8b, 0x6e,
   0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x78, 0x80, 0x3d, 0x08, 0xd5,
   0x68, 0x00, 0x46, 0x00, 0x81, 0x40, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5c, 0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x8e, 0x4f, 0x02,
   0x80, 0xea, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa,
   0x78, 0x80, 0x3a, 0x08, 0xd5, 0x70, 0x00, 0x4e, 0x00, 0x83, 0x42, 0xff, 0x58,
   0x20, 0xec, 0x5e, 0x04, 0x90, 0x72, 0x80, 0x20, 0x88, 0xaf, 0xe4, 0x80, 0x08,
   0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0x45, 0xd5, 0x64, 0x00, 0x42, 0x00, 0x58, 0x02, 0x80, 0xea, 0xff,
   0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc6, 0xe7, 0x80, 0x10,
   0xd5, 0x78, 0x00, 0x56, 0xc0, 0x8b, 0x42, 0x58, 0x20, 0xec, 0x5e, 0x04, 0x80,
   0x72, 0x80, 0x20, 0x88, 0xaf, 0xe3, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0xea,
   0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc6, 0xe5, 0x80,
   0x10, 0xd5, 0x6b, 0x00, 0x49, 0xc0, 0x23, 0x22, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8,
   0x03, 0xd0, 0x3f, 0x87, 0xc4, 0xe3, 0x80, 0x10, 0xd5, 0x62, 0x00, 0x40, 0xc0,
   0x21, 0x20, 0x03, 0x80, 0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2,
   0xff, 0xff, 0xff,
};

static const uint32_t spm_load_4X_4_buffers_const_dest[14] = {
   37, 36,         39,         38,         41,         40,         43,
   42, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_4X_4_buffers_info = {
   25,
   48,
   0,
   0,
   0,
   sizeof(spm_load_4X_4_buffers_shader_code),
   spm_load_4X_4_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_4X_4_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_4X_5_buffers_shader_code[904] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x4f,
   0xff, 0x26, 0x06, 0x87, 0xa9, 0xc2, 0x83, 0x18, 0x00, 0x30, 0x8d, 0x5c, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x4e, 0xff, 0x68,
   0x20, 0xe4, 0xde, 0x04, 0x08, 0x84, 0x6d, 0x80, 0x20, 0x88, 0xb1, 0xe9, 0x80,
   0x08, 0x00, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x56, 0xff, 0x68, 0x20, 0xec,
   0xde, 0x04, 0x08, 0x88, 0x6d, 0x80, 0x20, 0x88, 0xb1, 0xe2, 0x80, 0x08, 0x00,
   0x58, 0x20, 0xec, 0x5e, 0x04, 0x8c, 0x6d, 0x80, 0x20, 0x88, 0xb1, 0xf2, 0x80,
   0x08, 0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0x30, 0x88, 0x47, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8,
   0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x7c, 0x80, 0x3d, 0x08, 0xd6, 0x69, 0x00, 0x47,
   0x00, 0x98, 0x57, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b,
   0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x89, 0x48, 0x66, 0x28, 0xf2, 0xa6,
   0xc8, 0x03, 0x00, 0xd6, 0x6a, 0x00, 0x48, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x89, 0x4a,
   0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00, 0x30, 0x9e,
   0x5d, 0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xd6, 0x6b, 0x00, 0x49, 0x00,
   0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5,
   0x08, 0x00, 0xc0, 0x8a, 0x4b, 0x45, 0x12, 0xd3, 0x3f, 0xa7, 0x08, 0x00, 0x00,
   0x00, 0x47, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa6, 0x67,
   0x80, 0x3a, 0x08, 0xd6, 0x6c, 0x00, 0x4a, 0x00, 0x81, 0x40, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5d, 0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00, 0x30, 0x9b, 0x5a, 0x02,
   0x80, 0xea, 0xff, 0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xd6, 0x62, 0x00,
   0x40, 0x00, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x26,
   0x80, 0xa7, 0x08, 0x00, 0xc0, 0x81, 0x42, 0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03,
   0x00, 0xd6, 0x63, 0x00, 0x41, 0x00, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3,
   0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x8b, 0x6e,
   0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x7c, 0x80, 0x3a, 0x08, 0xd6,
   0x64, 0x00, 0x42, 0x00, 0x91, 0x50, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5d, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x83, 0x44, 0x25,
   0x02, 0x87, 0xad, 0x08, 0x00, 0x00, 0x00, 0x40, 0xff, 0x8b, 0x6e, 0xfa, 0xa6,
   0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x60, 0x80, 0x3b, 0x08, 0xd6, 0x65, 0x00,
   0x43, 0x00, 0x87, 0x46, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90,
   0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x84, 0x45, 0x55, 0x20, 0xfa,
   0x8a, 0x38, 0x00, 0xc6, 0xa4, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x88, 0x6a,
   0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x53, 0xd6, 0x72, 0x00, 0x50, 0x00,
   0x44, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0,
   0x82, 0x43, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xd5, 0x40,
   0xa0, 0x2b, 0x90, 0xd6, 0x64, 0x00, 0x42, 0xc0, 0x99, 0x40, 0xff, 0x25, 0x02,
   0x87, 0xad, 0x08, 0x00, 0x00, 0x00, 0x45, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8b,
   0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x65, 0x80, 0x3c, 0x08,
   0xd6, 0x79, 0x00, 0x57, 0x00, 0x91, 0x50, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c,
   0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x92, 0x53, 0x8b, 0x6e, 0xf2, 0xa6,
   0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x60, 0x80, 0x3a, 0x08, 0xd6, 0x74, 0x00,
   0x52, 0x00, 0x87, 0x46, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81,
   0x5c, 0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x83, 0x44, 0x58, 0x20, 0xe4,
   0x5e, 0x04, 0x90, 0x6d, 0x80, 0x20, 0x88, 0xb1, 0xe8, 0x80, 0x08, 0x00, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0x49, 0xd6, 0x68, 0x00, 0x46, 0x00, 0x5f, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03,
   0xd0, 0x3f, 0x87, 0xca, 0xeb, 0x80, 0x10, 0xd6, 0x7f, 0x00, 0x5d, 0xc0, 0x85,
   0x5c, 0x25, 0x02, 0x87, 0xad, 0x08, 0x00, 0x00, 0x00, 0x41, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x61,
   0x80, 0x3a, 0x08, 0xd6, 0x65, 0x00, 0x43, 0x00, 0x88, 0x47, 0xff, 0x25, 0x02,
   0x87, 0xad, 0x08, 0x00, 0x00, 0x00, 0x40, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8,
   0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x60, 0x80, 0x3d, 0x08, 0xd6, 0x7c, 0x00, 0x5a,
   0x00, 0x94, 0x53, 0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x94, 0x6d, 0x80, 0x20,
   0x88, 0xb1, 0xe9, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x58, 0x20,
   0xe4, 0x5e, 0x04, 0x80, 0x6d, 0x80, 0x20, 0x88, 0xb1, 0xe0, 0x80, 0x08, 0x00,
   0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x4a, 0xd6, 0x69,
   0x00, 0x47, 0x00, 0x4a, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf,
   0x08, 0x00, 0xc0, 0x85, 0x44, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0x88,
   0x41, 0x20, 0x45, 0x44, 0xc0, 0x88, 0x49, 0xff, 0x55, 0x20, 0xfa, 0x86, 0x38,
   0x00, 0xca, 0xa8, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80,
   0xaf, 0x08, 0x00, 0xc0, 0x84, 0x45, 0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc7,
   0xa4, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03,
   0xd0, 0x3f, 0x87, 0xcb, 0xec, 0x80, 0x10, 0xd6, 0x69, 0x00, 0x47, 0xc0, 0x92,
   0x55, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc3, 0xe2, 0x80,
   0x10, 0xd6, 0x72, 0x00, 0x50, 0xc0, 0x23, 0x22, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8,
   0x03, 0xd0, 0x3f, 0x87, 0xc1, 0xe0, 0x80, 0x10, 0xd6, 0x75, 0x00, 0x53, 0xc0,
   0x21, 0x20, 0x05, 0x80, 0xea, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x04,
   0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_4X_5_buffers_const_dest[14] = {
   37, 36, 39, 38,         41,         40,         43,
   42, 45, 44, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_4X_5_buffers_info = {
   32,
   50,
   0,
   0,
   0,
   sizeof(spm_load_4X_5_buffers_shader_code),
   spm_load_4X_5_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_4X_5_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_4X_6_buffers_shader_code[1184] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x4d,
   0xff, 0x26, 0x06, 0x87, 0xa9, 0xc2, 0x83, 0x18, 0x00, 0x30, 0x8b, 0x5c, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x4c, 0xff, 0x68,
   0x20, 0xe4, 0xde, 0x04, 0x08, 0x84, 0x6b, 0x80, 0x20, 0x88, 0xb3, 0xe2, 0x80,
   0x08, 0x00, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x4a, 0xff, 0x68, 0x20, 0xec,
   0xde, 0x04, 0x08, 0x88, 0x6b, 0x80, 0x20, 0x88, 0xb3, 0xf0, 0x80, 0x08, 0x00,
   0x58, 0x20, 0xec, 0x5e, 0x04, 0x8c, 0x6b, 0x80, 0x20, 0x88, 0xb3, 0xe6, 0x80,
   0x08, 0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0x30, 0x81, 0x40, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8,
   0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x7c, 0x80, 0x3d, 0x08, 0xca, 0x62, 0x00, 0x40,
   0x00, 0x98, 0x57, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b,
   0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x82, 0x41, 0x66, 0x28, 0xf2, 0xa6,
   0xc8, 0x03, 0x00, 0xca, 0x63, 0x00, 0x41, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x82, 0x43,
   0x02, 0x80, 0xea, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0xc5, 0xf1, 0x80, 0x10, 0xca, 0x64, 0x00, 0x42, 0xc0, 0x96, 0x45, 0x27, 0x0e,
   0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x94, 0x55, 0x26,
   0x06, 0x87, 0xab, 0x40, 0xa0, 0x27, 0x98, 0x00, 0x30, 0x80, 0x5f, 0x8b, 0x6e,
   0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa6, 0x60, 0x80, 0x3a, 0x08, 0xca,
   0x76, 0x00, 0x54, 0x00, 0x8f, 0x4e, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03,
   0xd3, 0x3f, 0xe0, 0xaa, 0x7f, 0x80, 0x3d, 0x08, 0xca, 0x70, 0x00, 0x4e, 0x00,
   0x9b, 0x5a, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1,
   0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x83, 0x44, 0x66, 0x28, 0xf2, 0xa6, 0xc8,
   0x03, 0x00, 0xca, 0x65, 0x00, 0x43, 0x00, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1,
   0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x90, 0x51, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x2c, 0x80, 0xad, 0x08, 0x00, 0x30, 0x83, 0x42,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x80,
   0x41, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x53, 0xca,
   0x72, 0x00, 0x50, 0x00, 0x42, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x26, 0x80,
   0xa7, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3,
   0x3f, 0xe0, 0xa8, 0x7c, 0x80, 0x3a, 0x08, 0xca, 0x62, 0x00, 0x40, 0x00, 0x85,
   0x44, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x2c, 0x80, 0xad, 0x08, 0x00,
   0x30, 0x9e, 0x5d, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03,
   0xd0, 0x3f, 0x87, 0x47, 0xca, 0x66, 0x00, 0x44, 0x00, 0x50, 0x27, 0x0e, 0xe3,
   0x81, 0x5b, 0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x8e, 0x4f, 0x88, 0x6a,
   0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x49, 0xca, 0x70, 0x00, 0x4e, 0x00,
   0x59, 0x26, 0x06, 0x87, 0xad, 0x40, 0xa0, 0x2f, 0x98, 0x00, 0x30, 0x89, 0x53,
   0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0,
   0xae, 0x69, 0x80, 0x3b, 0x08, 0xca, 0x79, 0x00, 0x57, 0x00, 0x84, 0x43, 0xff,
   0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1,
   0x08, 0x00, 0xc0, 0x94, 0x40, 0x26, 0x06, 0xe3, 0x8c, 0x41, 0x20, 0x54, 0x40,
   0xc0, 0x81, 0x42, 0xff, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xb4, 0x41, 0xa0, 0x41, 0x08,
   0x42, 0xc0, 0x82, 0x43, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc4, 0xa2, 0x00,
   0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0,
   0x86, 0x47, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3,
   0x3f, 0xe0, 0xaa, 0x7f, 0x80, 0x3a, 0x08, 0xca, 0x68, 0x00, 0x46, 0x00, 0x84,
   0x43, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00,
   0xc0, 0x80, 0x41, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2a, 0x80, 0xab, 0x08,
   0x00, 0xc0, 0x8f, 0x50, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2c, 0x80, 0xad,
   0x08, 0x00, 0xc0, 0x94, 0x55, 0x02, 0x80, 0xea, 0xff, 0x58, 0x20, 0xec, 0x5e,
   0x04, 0x90, 0x6b, 0x80, 0x20, 0x88, 0xb3, 0xe5, 0x80, 0x08, 0x00, 0xff, 0x02,
   0x80, 0xea, 0xff, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x46,
   0xca, 0x65, 0x00, 0x43, 0x00, 0x42, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0xc7, 0xe8, 0x80, 0x10, 0xca, 0x62, 0x00, 0x40, 0xc0, 0x91, 0x5c,
   0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0,
   0xac, 0x73, 0x80, 0x3a, 0x08, 0xca, 0x71, 0x00, 0x4f, 0x00, 0x84, 0x43, 0xff,
   0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xae, 0x69, 0x80, 0x3c,
   0x08, 0xca, 0x7c, 0x00, 0x5a, 0x00, 0x93, 0x52, 0xff, 0x58, 0x20, 0xec, 0x5e,
   0x04, 0x94, 0x6b, 0x80, 0x20, 0x88, 0xb3, 0xe5, 0x80, 0x08, 0x00, 0xff, 0x02,
   0x80, 0xea, 0xff, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x46,
   0xca, 0x65, 0x00, 0x43, 0x00, 0x50, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x83, 0x42, 0x26, 0x06,
   0xe3, 0x88, 0x41, 0x20, 0x43, 0x42, 0xc0, 0x8e, 0x4f, 0xff, 0x55, 0x20, 0xfa,
   0x86, 0x38, 0x00, 0xd0, 0xae, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3,
   0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf9, 0x8c, 0x00,
   0x00, 0xc3, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8a, 0x6e, 0xfa, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc7, 0xe8, 0x80, 0x10, 0xca, 0x65, 0x00, 0x43,
   0xc0, 0x96, 0x5f, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03,
   0xd3, 0x3f, 0xe0, 0xae, 0x69, 0x80, 0x3a, 0x08, 0xca, 0x76, 0x00, 0x54, 0x00,
   0x84, 0x43, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xae,
   0x69, 0x80, 0x3d, 0x08, 0xca, 0x7f, 0x00, 0x5d, 0x00, 0x90, 0x4f, 0xff, 0x68,
   0x20, 0xec, 0xde, 0x04, 0x08, 0x98, 0x6b, 0x80, 0x20, 0x88, 0xb3, 0xe5, 0x80,
   0x08, 0x00, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x80, 0x6b, 0x80, 0x20, 0x88, 0xb3,
   0xeb, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x88, 0x6a, 0xfa, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x46, 0xca, 0x65, 0x00, 0x43, 0x00, 0x46, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x81, 0x40,
   0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xb5, 0x41, 0xa0, 0x41, 0x08, 0x40,
   0xc0, 0x84, 0x45, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc6, 0xa4, 0x00, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x83,
   0x42, 0x26, 0x06, 0xe3, 0x8c, 0x41, 0x20, 0x43, 0x42, 0xc0, 0x80, 0x41, 0xff,
   0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc3, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x26, 0x06, 0xe3, 0xb4, 0x41, 0xa0, 0x40, 0x08, 0x41, 0xc0, 0x80, 0x41,
   0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc4, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc7, 0xe8, 0x80,
   0x10, 0xca, 0x65, 0x00, 0x43, 0xc0, 0x94, 0x51, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8,
   0x03, 0xd0, 0x3f, 0x87, 0xce, 0xed, 0x80, 0x10, 0xca, 0x74, 0x00, 0x52, 0xc0,
   0x23, 0x22, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xcc, 0xeb,
   0x80, 0x10, 0xca, 0x71, 0x00, 0x4f, 0xc0, 0x21, 0x20, 0x05, 0x80, 0xea, 0xff,
   0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff,
   0xff,
};

static const uint32_t spm_load_4X_6_buffers_const_dest[14] = {
   37, 36, 39, 38, 41, 40, 43, 42, 45, 44, 47, 46, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_4X_6_buffers_info = {
   32,
   54,
   0,
   0,
   0,
   sizeof(spm_load_4X_6_buffers_shader_code),
   spm_load_4X_6_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_4X_6_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_4X_7_buffers_shader_code[1160] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x4d,
   0xff, 0x26, 0x06, 0x87, 0xa9, 0xc2, 0x83, 0x18, 0x00, 0x30, 0x8b, 0x4e, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x4c, 0xff, 0x68,
   0x20, 0xe4, 0xde, 0x04, 0x08, 0x84, 0x6b, 0x80, 0x20, 0x88, 0xb5, 0xe2, 0x80,
   0x08, 0x00, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x4a, 0xff, 0x68, 0x20, 0xec,
   0xde, 0x04, 0x08, 0x88, 0x6b, 0x80, 0x20, 0x88, 0xb5, 0xe6, 0x80, 0x08, 0x00,
   0x58, 0x20, 0xec, 0x5e, 0x04, 0x8c, 0x6b, 0x80, 0x20, 0x88, 0xb5, 0xf0, 0x80,
   0x08, 0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0x30, 0x81, 0x40, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8,
   0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x6e, 0x80, 0x3d, 0x08, 0xca, 0x62, 0x00, 0x40,
   0x00, 0x9b, 0x5a, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b,
   0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x82, 0x41, 0x66, 0x28, 0xf2, 0xa6,
   0xc8, 0x03, 0x00, 0xca, 0x63, 0x00, 0x41, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x82, 0x43,
   0x02, 0x80, 0xea, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0xc5, 0xe7, 0x80, 0x10, 0xca, 0x64, 0x00, 0x42, 0xc0, 0x99, 0x56, 0x27, 0x0e,
   0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x97, 0x58, 0x02,
   0x80, 0x6a, 0xff, 0x26, 0x06, 0x87, 0xab, 0x40, 0xa0, 0x27, 0x98, 0x00, 0x30,
   0x83, 0x5e, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa6, 0x63,
   0x80, 0x3a, 0x08, 0xca, 0x79, 0x00, 0x57, 0x00, 0x85, 0x44, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x7e,
   0x80, 0x3d, 0x08, 0xca, 0x66, 0x00, 0x44, 0x00, 0x98, 0x57, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5b, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x94, 0x55, 0x66,
   0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xca, 0x76, 0x00, 0x54, 0x00, 0x02, 0x80,
   0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00,
   0xc0, 0x86, 0x47, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc9,
   0xf1, 0x80, 0x10, 0xca, 0x68, 0x00, 0x46, 0xc0, 0x85, 0x42, 0x27, 0x0e, 0xe3,
   0x81, 0x5d, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x83, 0x44, 0x8b, 0x6e,
   0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x6e, 0x80, 0x3a, 0x08, 0xca,
   0x65, 0x00, 0x43, 0x00, 0x8f, 0x4e, 0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06,
   0x87, 0xb1, 0x40, 0xa0, 0x2d, 0x98, 0x00, 0x30, 0x96, 0x5f, 0x8b, 0x6e, 0xfa,
   0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x76, 0x80, 0x3d, 0x08, 0xca, 0x70,
   0x00, 0x4e, 0x00, 0x95, 0x54, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x28,
   0x80, 0xa9, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03,
   0x00, 0xca, 0x62, 0x00, 0x40, 0x00, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3,
   0x81, 0x5c, 0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x90, 0x51, 0x02, 0x80,
   0x6a, 0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x90, 0x6b, 0x80, 0x20, 0x88, 0xb5,
   0xe2, 0x80, 0x08, 0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x2e, 0x80,
   0xaf, 0x08, 0x00, 0x30, 0x89, 0x48, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32,
   0x80, 0xb3, 0x08, 0x00, 0xc0, 0x86, 0x47, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00,
   0xc8, 0xa6, 0x00, 0xff, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0x53, 0xca, 0x72, 0x00, 0x50, 0x00, 0x5c, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03,
   0xd3, 0x3f, 0xe0, 0xaa, 0x7e, 0x80, 0x3a, 0x08, 0xca, 0x7c, 0x00, 0x5a, 0x00,
   0x81, 0x40, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1,
   0x2e, 0x80, 0xaf, 0x08, 0x00, 0x30, 0x9b, 0x5a, 0x88, 0x6a, 0xf2, 0xa6, 0xc8,
   0x03, 0xd0, 0x3f, 0x87, 0x43, 0xca, 0x62, 0x00, 0x40, 0x00, 0x48, 0x27, 0x0e,
   0xe3, 0x81, 0x5b, 0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x86, 0x47, 0x88,
   0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x45, 0xca, 0x68, 0x00, 0x46,
   0x00, 0x59, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xb0, 0x7f,
   0x80, 0x3b, 0x08, 0xca, 0x79, 0x00, 0x57, 0x00, 0x9e, 0x5d, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00,
   0xc0, 0x82, 0x43, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xac,
   0x76, 0x80, 0x3a, 0x08, 0xca, 0x64, 0x00, 0x42, 0x00, 0x81, 0x40, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x8e, 0x4f,
   0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x86,
   0x47, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2e, 0x80,
   0xaf, 0x08, 0x00, 0xc0, 0x97, 0x58, 0x02, 0x80, 0x6a, 0xff, 0x58, 0x20, 0xe4,
   0x5e, 0x04, 0x94, 0x6b, 0x80, 0x20, 0x88, 0xb5, 0xe2, 0x80, 0x08, 0x00, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0xc3, 0x40, 0xa0, 0x2f, 0x90, 0xca, 0x62, 0x00, 0x40, 0xc0, 0x90, 0x49, 0xff,
   0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc4, 0xe5, 0x80, 0x10,
   0xca, 0x70, 0x00, 0x4e, 0xc0, 0x88, 0x56, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03,
   0xd3, 0x3f, 0xe0, 0xae, 0x69, 0x80, 0x3a, 0x08, 0xca, 0x68, 0x00, 0x46, 0x00,
   0x84, 0x43, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03,
   0xd3, 0x3f, 0xe0, 0xb0, 0x7f, 0x80, 0x3c, 0x08, 0xca, 0x76, 0x00, 0x54, 0x00,
   0x82, 0x41, 0xff, 0x58, 0x20, 0xec, 0x5e, 0x04, 0x98, 0x6b, 0x80, 0x20, 0x88,
   0xb5, 0xe5, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x88, 0x6a, 0xfa,
   0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x46, 0xca, 0x65, 0x00, 0x43, 0x00, 0x50,
   0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3,
   0x08, 0x00, 0xc0, 0x85, 0x43, 0x26, 0x06, 0xe3, 0x88, 0x41, 0x20, 0x45, 0x43,
   0xc0, 0x8e, 0x4f, 0xff, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xd0, 0xae, 0x00,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80,
   0xb3, 0x08, 0x00, 0xc0, 0x8e, 0x4f, 0x55, 0x20, 0xf9, 0x8c, 0x00, 0x00, 0xc3,
   0xae, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03,
   0xd0, 0x3f, 0x87, 0xc7, 0xe8, 0x80, 0x10, 0xca, 0x65, 0x00, 0x43, 0xc0, 0x99,
   0x5c, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f,
   0xe0, 0xb0, 0x7f, 0x80, 0x3a, 0x08, 0xca, 0x79, 0x00, 0x57, 0x00, 0x84, 0x43,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f,
   0xe0, 0xb0, 0x7f, 0x80, 0x3d, 0x08, 0xca, 0x7c, 0x00, 0x5a, 0x00, 0x94, 0x53,
   0xff, 0x68, 0x20, 0xe4, 0xde, 0x04, 0x08, 0x9c, 0x6b, 0x80, 0x20, 0x88, 0xb5,
   0xe5, 0x80, 0x08, 0x00, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x80, 0x6b, 0x80, 0x20,
   0x88, 0xb5, 0xee, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a,
   0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x46, 0xca, 0x65, 0x00, 0x43, 0x00,
   0x5f, 0x02, 0x80, 0x6a, 0xff, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f,
   0x87, 0xc7, 0xe8, 0x80, 0x10, 0xca, 0x7f, 0x00, 0x5d, 0xc0, 0x83, 0x55, 0x8a,
   0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xd1, 0xf0, 0x80, 0x10, 0xca,
   0x63, 0x00, 0x41, 0xc0, 0x23, 0x22, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0xcf, 0xee, 0x80, 0x10, 0xca, 0x75, 0x00, 0x53, 0xc0, 0x21, 0x20,
   0x04, 0x80, 0xea, 0xff, 0xf2, 0xff, 0xff, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2,
   0xff, 0xff, 0xff,
};

static const uint32_t spm_load_4X_7_buffers_const_dest[14] = {
   37, 36, 39, 38, 41, 40, 43, 42, 45, 44, 47, 46, 49, 48,
};

static const struct pvr_shader_factory_info spm_load_4X_7_buffers_info = {
   32,
   54,
   0,
   0,
   0,
   sizeof(spm_load_4X_7_buffers_shader_code),
   spm_load_4X_7_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_4X_7_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_8X_1_regs_shader_code[80] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90,
   0x42, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc2, 0x83, 0x10, 0x00, 0x00,
   0x40, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00,
   0x41, 0xff, 0x58, 0x20, 0xe4, 0x52, 0x04, 0x80, 0x60, 0x80, 0x20, 0x88,
   0xa7, 0xe1, 0x80, 0x08, 0x00, 0xff, 0x05, 0x80, 0x6a, 0xff, 0xf3, 0xff,
   0xff, 0xff, 0xff, 0xff, 0x58, 0x9a, 0x80, 0xd3, 0x3f, 0x41, 0x00, 0x00,
   0x20, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff,
};

static const struct pvr_shader_factory_info spm_load_8X_1_regs_info = {
   3,
   40,
   0,
   0,
   0,
   sizeof(spm_load_8X_1_regs_shader_code),
   spm_load_8X_1_regs_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   NULL,
   0,
   NULL,
   0,
};

static const uint8_t spm_load_8X_2_regs_shader_code[80] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90,
   0x42, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc2, 0x83, 0x10, 0x00, 0x00,
   0x40, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00,
   0x41, 0xff, 0x58, 0x20, 0xe4, 0x56, 0x04, 0x80, 0x60, 0x80, 0x20, 0x88,
   0xa7, 0xe1, 0x80, 0x08, 0x00, 0xff, 0x05, 0x80, 0x6a, 0xff, 0xf3, 0xff,
   0xff, 0xff, 0xff, 0xff, 0x38, 0x8e, 0x80, 0x87, 0xc2, 0xe1, 0x80, 0x10,
   0x00, 0xc0, 0x21, 0x20, 0xf2, 0xff, 0xff, 0xff,
};

static const struct pvr_shader_factory_info spm_load_8X_2_regs_info = {
   3,
   40,
   0,
   0,
   0,
   sizeof(spm_load_8X_2_regs_shader_code),
   spm_load_8X_2_regs_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   NULL,
   0,
   NULL,
   0,
};

static const uint8_t spm_load_8X_4_regs_shader_code[88] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x43,
   0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc2, 0x83, 0x10, 0x00, 0x00, 0x41, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x42, 0xff, 0x58,
   0x20, 0xe4, 0x5e, 0x04, 0x80, 0x61, 0x80, 0x20, 0x88, 0xa7, 0xe0, 0x80, 0x08,
   0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0x87, 0xc1, 0xe0, 0x80, 0x10,
   0x00, 0xc0, 0x21, 0x20, 0xff, 0xf1, 0xff, 0x38, 0x8e, 0x80, 0x87, 0xc3, 0xe2,
   0x80, 0x10, 0x00, 0xc0, 0x23, 0x22, 0xf2, 0xff, 0xff, 0xff,
};

static const struct pvr_shader_factory_info spm_load_8X_4_regs_info = {
   4,
   40,
   0,
   0,
   0,
   sizeof(spm_load_8X_4_regs_shader_code),
   spm_load_8X_4_regs_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   NULL,
   0,
   NULL,
   0,
};

static const uint8_t spm_load_8X_1_buffers_shader_code[368] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x4d,
   0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc2, 0x83, 0x10, 0x00, 0x00, 0x4b, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x4c, 0xff, 0x68,
   0x20, 0xe4, 0xde, 0x04, 0x08, 0x84, 0x6b, 0x80, 0x20, 0x88, 0xa9, 0xe6, 0x80,
   0x08, 0x00, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x80, 0x6b, 0x80, 0x20, 0x88, 0xa9,
   0xe2, 0x80, 0x08, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x26, 0x80,
   0xa7, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x02, 0x80, 0x6a, 0xff, 0x55, 0x20, 0xf2,
   0x92, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00,
   0x4e, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24,
   0x80, 0xa5, 0x08, 0x00, 0x30, 0x85, 0x44, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1,
   0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x81, 0x40, 0x66, 0x28, 0xf2, 0xa6, 0xc8,
   0x03, 0x00, 0xce, 0x66, 0x00, 0x44, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x85, 0x46, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x8d, 0x44,
   0x26, 0x06, 0xe3, 0x8c, 0x41, 0x20, 0x4d, 0x44, 0xc0, 0x82, 0x43, 0xff, 0x55,
   0x20, 0xf1, 0x84, 0x00, 0x00, 0xc2, 0xa2, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc2, 0xe8, 0x80, 0x10,
   0xce, 0x67, 0x00, 0x45, 0xc0, 0x23, 0x4c, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1,
   0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x8a, 0x4b, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x87, 0x46,
   0x26, 0x06, 0xe3, 0x88, 0x41, 0x20, 0x47, 0x46, 0xc0, 0x82, 0x43, 0xff, 0x55,
   0x20, 0xf1, 0x84, 0x00, 0x00, 0xc7, 0xa2, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc7, 0xe9, 0x80, 0x10,
   0xce, 0x6c, 0x00, 0x4a, 0xc0, 0x22, 0x42, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3,
   0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x83, 0x44, 0x55, 0x20, 0xf9, 0x88, 0x00,
   0x00, 0xc7, 0xa3, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8a, 0x6e, 0xf2, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc8, 0xe7, 0x80, 0x10, 0xce, 0x62, 0x00, 0x40,
   0xc0, 0x21, 0x20, 0x03, 0x80, 0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00,
   0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_8X_1_buffers_const_dest[14] = {
   37,         36,         4294967295, 4294967295, 4294967295,
   4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
   4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_8X_1_buffers_info = {
   15,
   42,
   0,
   0,
   0,
   sizeof(spm_load_8X_1_buffers_shader_code),
   spm_load_8X_1_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_8X_1_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_8X_2_buffers_shader_code[1144] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x4e,
   0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc2, 0x83, 0x10, 0x00, 0x00, 0x4c, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x4d, 0xff, 0x68,
   0x20, 0xe4, 0xde, 0x04, 0x08, 0x84, 0x6c, 0x80, 0x20, 0x88, 0xab, 0xe6, 0x80,
   0x08, 0x00, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x42, 0xff, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x55, 0x20,
   0xfa, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x58,
   0x20, 0xe4, 0x5e, 0x04, 0x88, 0x6c, 0x80, 0x20, 0x88, 0xab, 0xe2, 0x80, 0x08,
   0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x28, 0x80, 0xa9, 0x08, 0x00,
   0xc0, 0x8b, 0x4a, 0x26, 0x06, 0xe3, 0xac, 0x41, 0xa0, 0x4b, 0x08, 0x4a, 0xc0,
   0x80, 0x41, 0x02, 0x80, 0x6a, 0xff, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc2,
   0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xad, 0x41, 0xa0,
   0x40, 0x08, 0x41, 0xc0, 0x82, 0x43, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc4,
   0xa2, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1,
   0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x85, 0x44, 0x27, 0x0e, 0xe3, 0x81, 0x5c,
   0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0x30, 0x83, 0x42, 0x27, 0x06, 0xe3, 0x90,
   0x50, 0xa3, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x8b, 0x4a, 0x26, 0x06, 0xe3,
   0x84, 0x41, 0x20, 0x4b, 0x4a, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf2, 0x8a,
   0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x55, 0x20,
   0xf1, 0x84, 0x00, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x66,
   0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xc2, 0x66, 0x00, 0x44, 0x00, 0x02, 0x80,
   0x6a, 0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x80, 0x6c, 0x80, 0x20, 0x88, 0xab,
   0xe2, 0x80, 0x08, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x28, 0x80,
   0xa9, 0x08, 0x00, 0xc0, 0x8b, 0x4a, 0x26, 0x06, 0xe3, 0xb1, 0x41, 0xa0, 0x4b,
   0x08, 0x4a, 0xc0, 0x80, 0x41, 0x02, 0x80, 0x6a, 0xff, 0x55, 0x20, 0xf2, 0x8a,
   0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3,
   0xad, 0x41, 0xa0, 0x40, 0x08, 0x41, 0xc0, 0x82, 0x43, 0x55, 0x20, 0xf2, 0x8a,
   0x38, 0x00, 0xc4, 0xa2, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3,
   0x81, 0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x85, 0x46, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x55,
   0x20, 0xf1, 0x84, 0x00, 0x00, 0xc3, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xc3, 0x67, 0x00, 0x45, 0x00, 0x02,
   0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0xc0, 0x86, 0x47, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x28, 0x80, 0xa9,
   0x08, 0x00, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc5, 0xa0,
   0x00, 0xff, 0x25, 0x02, 0x87, 0xa7, 0x08, 0x00, 0x00, 0x00, 0x44, 0xff, 0x02,
   0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa6,
   0x64, 0x80, 0x3a, 0x08, 0xc5, 0x68, 0x00, 0x46, 0x00, 0x83, 0x42, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x85, 0x44,
   0x26, 0x06, 0xe3, 0xb0, 0x41, 0xa0, 0x45, 0x08, 0x44, 0xc0, 0x80, 0x41, 0x55,
   0x20, 0xfa, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x87,
   0x48, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x28, 0x80,
   0xa9, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc5,
   0xa0, 0x00, 0xff, 0x25, 0x02, 0x87, 0xa7, 0x08, 0x00, 0x00, 0x00, 0x44, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0,
   0xa6, 0x64, 0x80, 0x3d, 0x08, 0xc5, 0x69, 0x00, 0x47, 0x00, 0x83, 0x42, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x80,
   0x41, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xca, 0xa0, 0x00, 0xff, 0x02, 0x80,
   0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x28, 0x80, 0xa9, 0x08, 0x00,
   0xc0, 0x84, 0x41, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb0, 0x41, 0xa0,
   0x44, 0x08, 0x41, 0xc0, 0x87, 0x48, 0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc4,
   0xa7, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03,
   0x00, 0xca, 0x66, 0x00, 0x44, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3,
   0x81, 0x5b, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x86, 0x47, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x81, 0x40, 0x26,
   0x06, 0xe3, 0xae, 0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0, 0x84, 0x45, 0x55, 0x20,
   0xf2, 0x8a, 0x38, 0x00, 0xc6, 0xa4, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf9, 0x84,
   0x00, 0x00, 0xcd, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x81, 0x40, 0x26, 0x06,
   0xe3, 0xae, 0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0, 0x8b, 0x4c, 0x55, 0x20, 0xf9,
   0x8c, 0x00, 0x00, 0xc8, 0xab, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06,
   0xe3, 0xaf, 0x41, 0xa0, 0x4b, 0x08, 0x4c, 0xc0, 0x8b, 0x4c, 0x55, 0x20, 0xf1,
   0x88, 0x00, 0x00, 0xc5, 0xab, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8a, 0x6e,
   0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc5, 0xe6, 0x80, 0x10, 0xcd, 0x6a,
   0x00, 0x48, 0xc0, 0x87, 0x44, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x28, 0x80,
   0xa9, 0x08, 0x00, 0xc0, 0x8b, 0x40, 0x26, 0x06, 0xe3, 0x8c, 0x41, 0x20, 0x4b,
   0x40, 0xc0, 0x85, 0x46, 0xff, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc7, 0xa5,
   0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x28, 0x80, 0xa9, 0x08, 0x00,
   0xc0, 0x80, 0x41, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xcd, 0xa0, 0x00, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x28, 0x80, 0xa9,
   0x08, 0x00, 0xc0, 0x81, 0x40, 0x26, 0x06, 0xe3, 0x84, 0x41, 0x20, 0x41, 0x40,
   0xc0, 0x8b, 0x4c, 0xff, 0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc5, 0xab, 0x00,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x28, 0x80,
   0xa9, 0x08, 0x00, 0xc0, 0x8b, 0x4a, 0x26, 0x06, 0xe3, 0xb2, 0x41, 0xa0, 0x4b,
   0x08, 0x4a, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xcb, 0xa0,
   0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0xcc, 0xeb, 0x80, 0x10, 0xcd, 0x67, 0x00, 0x45, 0xc0, 0x23, 0x22,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x80,
   0x41, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc7, 0xa0, 0x00, 0xff, 0x02, 0x80,
   0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x28, 0x80, 0xa9, 0x08, 0x00,
   0xc0, 0x8b, 0x45, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb1, 0x41, 0xa0,
   0x4b, 0x08, 0x45, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc5,
   0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03,
   0xd0, 0x3f, 0x87, 0xc6, 0xe5, 0x80, 0x10, 0xc7, 0x64, 0x00, 0x42, 0xc0, 0x21,
   0x20, 0x02, 0x80, 0x6a, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_8X_2_buffers_const_dest[14] = {
   37,         36,         39,         38,         4294967295,
   4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
   4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_8X_2_buffers_info = {
   15,
   51,
   0,
   0,
   0,
   sizeof(spm_load_8X_2_buffers_shader_code),
   spm_load_8X_2_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_8X_2_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_8X_3_buffers_shader_code[1824] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x42,
   0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0,
   0x85, 0x43, 0x26, 0x06, 0xe3, 0xb3, 0x41, 0xa0, 0x45, 0x08, 0x43, 0xc0, 0x80,
   0x41, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x26, 0x06, 0x87, 0xa7, 0xc2, 0x83, 0x18, 0x00, 0x30, 0x82, 0x4e,
   0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0,
   0x85, 0x43, 0x26, 0x06, 0xe3, 0xb2, 0x41, 0xa0, 0x45, 0x08, 0x43, 0xc0, 0x80,
   0x41, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x42,
   0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0,
   0x85, 0x43, 0x26, 0x06, 0xe3, 0xb4, 0x41, 0xa0, 0x45, 0x08, 0x43, 0xc0, 0x80,
   0x41, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2a, 0x80, 0xab, 0x08, 0x00,
   0xc0, 0x81, 0x40, 0x26, 0x06, 0xe3, 0xb2, 0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0,
   0x83, 0x44, 0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc0, 0xa3, 0x00, 0xff, 0x02,
   0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xae, 0x41, 0xa0, 0x43, 0x08, 0x44, 0xc0,
   0x83, 0x44, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc2, 0xa3, 0x00, 0xff, 0x02,
   0x80, 0x6a, 0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x84, 0x60, 0x80, 0x20, 0x88,
   0xad, 0xe2, 0x80, 0x08, 0x00, 0xff, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x4d,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2a, 0x80,
   0xab, 0x08, 0x00, 0xc0, 0x81, 0x40, 0x26, 0x06, 0xe3, 0xb2, 0x41, 0xa0, 0x41,
   0x08, 0x40, 0xc0, 0x8a, 0x4b, 0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc6, 0xaa,
   0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xae, 0x41, 0xa0, 0x4a,
   0x08, 0x4b, 0xc0, 0x8a, 0x4b, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc8, 0xaa,
   0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x88, 0x66,
   0x80, 0x20, 0x88, 0xad, 0xe8, 0x80, 0x08, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90,
   0x50, 0xa3, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x80, 0x4c, 0x02, 0x80, 0x6a,
   0xff, 0x26, 0x06, 0xe3, 0xb5, 0x41, 0xa0, 0x40, 0x08, 0x4c, 0xc0, 0x86, 0x47,
   0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc8, 0xa6, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x46, 0x08, 0x47, 0xc0, 0x87, 0x48,
   0x55, 0x20, 0xf2, 0x8e, 0x38, 0x00, 0xc9, 0xa7, 0x00, 0xff, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x81, 0x40, 0x02, 0x80,
   0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb2, 0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0, 0x8a,
   0x4b, 0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc6, 0xaa, 0x00, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x26, 0x06, 0xe3, 0xae, 0x41, 0xa0, 0x4a, 0x08, 0x4b, 0xc0, 0x8a,
   0x4b, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc8, 0xaa, 0x00, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x8c, 0x66, 0x80, 0x20, 0x88, 0xad,
   0xe8, 0x80, 0x08, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2a, 0x80,
   0xab, 0x08, 0x00, 0xc0, 0x80, 0x4c, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3,
   0x88, 0x41, 0x20, 0x40, 0x4c, 0xc0, 0x86, 0x47, 0xff, 0x55, 0x20, 0xf2, 0x8a,
   0x38, 0x00, 0xc8, 0xa6, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3,
   0xae, 0x41, 0xa0, 0x46, 0x08, 0x47, 0xc0, 0x88, 0x49, 0x55, 0x20, 0xf2, 0x8a,
   0x38, 0x00, 0xca, 0xa8, 0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24,
   0x80, 0xa5, 0x08, 0x00, 0x30, 0x81, 0x40, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3,
   0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x87, 0x46, 0x02, 0x80, 0x6a, 0xff, 0x26,
   0x06, 0xe3, 0xb2, 0x41, 0xa0, 0x47, 0x08, 0x46, 0xc0, 0x8a, 0x4b, 0x55, 0x20,
   0xf1, 0x88, 0x00, 0x00, 0xc6, 0xaa, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26,
   0x06, 0xe3, 0xae, 0x41, 0xa0, 0x4a, 0x08, 0x4b, 0xc0, 0x8a, 0x4b, 0x55, 0x20,
   0xf1, 0x84, 0x00, 0x00, 0xc8, 0xaa, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x58,
   0x20, 0xe4, 0x5e, 0x04, 0x80, 0x66, 0x80, 0x20, 0x88, 0xad, 0xe8, 0x80, 0x08,
   0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2a,
   0x80, 0xab, 0x08, 0x00, 0xc0, 0x86, 0x4c, 0x26, 0x06, 0xe3, 0xb0, 0x41, 0xa0,
   0x46, 0x08, 0x4c, 0xc0, 0x86, 0x47, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc8,
   0xa6, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xae, 0x41, 0xa0,
   0x46, 0x08, 0x47, 0xc0, 0x88, 0x49, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xca,
   0xa8, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1,
   0x28, 0x80, 0xa9, 0x08, 0x00, 0x30, 0x8b, 0x4a, 0x66, 0x28, 0xf2, 0xa6, 0xc8,
   0x03, 0x00, 0xcd, 0x62, 0x00, 0x40, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x81, 0x42, 0x89,
   0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xa9, 0x08, 0x00, 0xcd, 0x63,
   0x00, 0x41, 0x00, 0x4c, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c,
   0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x8b, 0x6e, 0xf2, 0xa6,
   0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa6, 0x6e, 0x80, 0x3a, 0x08, 0xcd, 0x64, 0x00,
   0x42, 0x00, 0x89, 0x48, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90,
   0x50, 0xa3, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x83, 0x42, 0x26, 0x06, 0xe3,
   0xb9, 0x41, 0xa0, 0x43, 0x08, 0x42, 0xc0, 0x86, 0x47, 0x55, 0x20, 0xf2, 0x8a,
   0x38, 0x00, 0xc8, 0xa6, 0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24,
   0x80, 0xa5, 0x08, 0x00, 0xc0, 0x83, 0x44, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e,
   0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x6c, 0x80, 0x3c, 0x08, 0xcd,
   0x65, 0x00, 0x43, 0x00, 0x87, 0x46, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3,
   0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x81, 0x40, 0x02, 0x80, 0x6a, 0xff, 0x26,
   0x06, 0xe3, 0xba, 0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0, 0x84, 0x45, 0x55, 0x20,
   0xf2, 0x86, 0x38, 0x00, 0xc6, 0xa4, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26,
   0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x44, 0x08, 0x45, 0xc0, 0x85, 0x46, 0x55, 0x20,
   0xf2, 0x86, 0x38, 0x00, 0xc7, 0xa5, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x81, 0x40, 0x26, 0x06, 0xe3, 0xb9,
   0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0, 0x82, 0x43, 0x55, 0x20, 0xf9, 0x8c, 0x00,
   0x00, 0xc6, 0xa2, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x66, 0x28, 0xfa, 0xa6,
   0xc8, 0x03, 0x00, 0xcd, 0x68, 0x00, 0x46, 0x00, 0x27, 0x0e, 0xe3, 0x81, 0x5b,
   0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x02, 0x80, 0x6a, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x85,
   0x44, 0x26, 0x06, 0xe3, 0xb8, 0x41, 0xa0, 0x45, 0x08, 0x44, 0xc0, 0x80, 0x41,
   0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0,
   0x81, 0x40, 0x26, 0x06, 0xe3, 0xb8, 0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0, 0x82,
   0x43, 0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x26, 0x06, 0xe3, 0xae, 0x41, 0xa0, 0x42, 0x08, 0x43, 0xc0, 0x82,
   0x43, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc8, 0xa2, 0x00, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xcd, 0x68, 0x00, 0x46,
   0x00, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0,
   0x82, 0x43, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2a, 0x80, 0xab, 0x08, 0x00,
   0xc0, 0x85, 0x44, 0x26, 0x06, 0xe3, 0xb5, 0x41, 0xa0, 0x45, 0x08, 0x44, 0xc0,
   0x80, 0x41, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02,
   0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x40, 0x08, 0x41, 0xc0,
   0x81, 0x42, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02,
   0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2a, 0x80, 0xab, 0x08,
   0x00, 0xc0, 0x81, 0x40, 0x26, 0x06, 0xe3, 0xb5, 0x41, 0xa0, 0x41, 0x08, 0x40,
   0xc0, 0x82, 0x43, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x42, 0x08, 0x43,
   0xc0, 0x82, 0x43, 0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc7, 0xa2, 0x00, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0,
   0xa8, 0x6c, 0x80, 0x3a, 0x08, 0xcd, 0x68, 0x00, 0x46, 0x00, 0x84, 0x43, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x81,
   0x42, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00,
   0xc0, 0x82, 0x43, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2a, 0x80, 0xab, 0x08,
   0x00, 0xc0, 0x85, 0x44, 0x26, 0x06, 0xe3, 0xb7, 0x41, 0xa0, 0x45, 0x08, 0x44,
   0xc0, 0x80, 0x41, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2a, 0x80, 0xab,
   0x08, 0x00, 0xc0, 0x83, 0x42, 0x26, 0x06, 0xe3, 0xb7, 0x41, 0xa0, 0x43, 0x08,
   0x42, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc2, 0xa0, 0x00,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f,
   0xe0, 0xa8, 0x6c, 0x80, 0x3d, 0x08, 0xcd, 0x64, 0x00, 0x42, 0x00, 0x81, 0x40,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2a, 0x80,
   0xab, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x55, 0x20, 0xf1, 0x90, 0x00, 0x00, 0xc6,
   0xa2, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03,
   0xd0, 0x3f, 0x87, 0x49, 0xcd, 0x68, 0x00, 0x46, 0x00, 0x4c, 0x02, 0x80, 0xea,
   0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0,
   0x87, 0x46, 0x26, 0x06, 0xe3, 0xaf, 0x41, 0xa0, 0x47, 0x08, 0x46, 0xc0, 0x82,
   0x43, 0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc7, 0xa2, 0x00, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc7, 0xe8,
   0x80, 0x10, 0xcd, 0x6c, 0x00, 0x4a, 0xc0, 0x86, 0x42, 0x27, 0x06, 0xe3, 0x90,
   0x50, 0xa3, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x89, 0x47, 0x26, 0x06, 0xe3,
   0xbb, 0x41, 0xa0, 0x49, 0x08, 0x47, 0xc0, 0x84, 0x45, 0x55, 0x20, 0xfa, 0x86,
   0x38, 0x00, 0xc6, 0xa4, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x86, 0x45, 0x26, 0x06,
   0xe3, 0xb1, 0x41, 0xa0, 0x46, 0x08, 0x45, 0xc0, 0x83, 0x44, 0x55, 0x20, 0xf9,
   0x88, 0x00, 0x00, 0xc8, 0xa3, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x85, 0x43, 0x26,
   0x06, 0xe3, 0xba, 0x41, 0xa0, 0x45, 0x08, 0x43, 0xc0, 0x86, 0x47, 0x55, 0x20,
   0xf9, 0x84, 0x00, 0x00, 0xc3, 0xa6, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x26,
   0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x46, 0x08, 0x47, 0xc0, 0x86, 0x47, 0x55, 0x20,
   0xf9, 0x88, 0x00, 0x00, 0xc4, 0xa6, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8a,
   0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc9, 0xe8, 0x80, 0x10, 0xcd,
   0x65, 0x00, 0x43, 0xc0, 0x23, 0x22, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x86, 0x45, 0x26, 0x06,
   0xe3, 0xb0, 0x41, 0xa0, 0x46, 0x08, 0x45, 0xc0, 0x83, 0x44, 0x55, 0x20, 0xf9,
   0x88, 0x00, 0x00, 0xc6, 0xa3, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8a, 0x6e,
   0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc7, 0xe6, 0x80, 0x10, 0xcd, 0x62,
   0x00, 0x40, 0xc0, 0x21, 0x20, 0x02, 0x80, 0x6a, 0xff, 0x04, 0x80, 0xee, 0x00,
   0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_8X_3_buffers_const_dest[14] = {
   37,         36,         39,         38,         41,
   40,         4294967295, 4294967295, 4294967295, 4294967295,
   4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_8X_3_buffers_info = {
   15,
   60,
   0,
   0,
   0,
   sizeof(spm_load_8X_3_buffers_shader_code),
   spm_load_8X_3_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_8X_3_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_8X_4_buffers_shader_code[2016] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x42,
   0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0,
   0x85, 0x43, 0x26, 0x06, 0xe3, 0x88, 0x41, 0x20, 0x45, 0x43, 0xc0, 0x80, 0x41,
   0xff, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x26, 0x06, 0x87, 0xa7, 0xc2, 0x83, 0x18, 0x00, 0x30, 0x82, 0x47,
   0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0,
   0x80, 0x41, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02,
   0x80, 0x6a, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00,
   0x42, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00,
   0xc0, 0x85, 0x43, 0x26, 0x06, 0xe3, 0x84, 0x41, 0x20, 0x45, 0x43, 0xc0, 0x80,
   0x41, 0xff, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x83, 0x44,
   0x55, 0x20, 0xf9, 0x8c, 0x00, 0x00, 0xc0, 0xa3, 0x00, 0xff, 0x02, 0x80, 0xea,
   0xff, 0x58, 0x20, 0xec, 0x5e, 0x04, 0x84, 0x60, 0x80, 0x20, 0x88, 0xaf, 0xea,
   0x80, 0x08, 0x00, 0xff, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x46, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x83, 0x44,
   0x02, 0x80, 0xea, 0xff, 0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc0, 0xa3, 0x00,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x88, 0x60, 0x80,
   0x20, 0x88, 0xaf, 0xe2, 0x80, 0x08, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x8f, 0x4e, 0x02, 0x80, 0x6a, 0xff,
   0x26, 0x06, 0xe3, 0xb8, 0x41, 0xa0, 0x4f, 0x08, 0x4e, 0xc0, 0x80, 0x41, 0x55,
   0x20, 0xf2, 0x8e, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x26, 0x06, 0xe3, 0xb1, 0x41, 0xa0, 0x40, 0x08, 0x41, 0xc0, 0x83, 0x44, 0x55,
   0x20, 0xf2, 0x86, 0x38, 0x00, 0xc5, 0xa3, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x83,
   0x44, 0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc0, 0xa3, 0x00, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x8c, 0x60, 0x80, 0x20, 0x88, 0xaf,
   0xe2, 0x80, 0x08, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80,
   0xad, 0x08, 0x00, 0xc0, 0x8f, 0x4e, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3,
   0xb0, 0x41, 0xa0, 0x4f, 0x08, 0x4e, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf2, 0x8e,
   0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3,
   0xb1, 0x41, 0xa0, 0x40, 0x08, 0x41, 0xc0, 0x83, 0x44, 0x55, 0x20, 0xf2, 0x86,
   0x38, 0x00, 0xc5, 0xa3, 0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24,
   0x80, 0xa5, 0x08, 0x00, 0x30, 0x89, 0x48, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5d, 0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0x30, 0x83, 0x42, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x85, 0x44,
   0x26, 0x06, 0xe3, 0xb4, 0x41, 0xa0, 0x45, 0x08, 0x44, 0xc0, 0x80, 0x41, 0x55,
   0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x66, 0x28, 0xfa, 0xa6,
   0xc8, 0x03, 0x00, 0xc6, 0x6a, 0x00, 0x48, 0x00, 0x02, 0x80, 0xea, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x89, 0x4a,
   0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xc6, 0x6b, 0x00, 0x49, 0x00, 0x02,
   0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0xc0, 0x8a, 0x4b, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8,
   0x03, 0xd3, 0x3f, 0xe0, 0xa6, 0x67, 0x80, 0x3a, 0x08, 0xc6, 0x6c, 0x00, 0x4a,
   0x00, 0x83, 0x42, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad,
   0x08, 0x00, 0xc0, 0x85, 0x44, 0x26, 0x06, 0xe3, 0xbc, 0x41, 0xa0, 0x45, 0x08,
   0x44, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xb3, 0x41, 0xa0, 0x40, 0x08,
   0x41, 0xc0, 0x81, 0x42, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80,
   0xa5, 0x08, 0x00, 0xc0, 0x8b, 0x4c, 0x26, 0x06, 0x87, 0xa9, 0x40, 0xa0, 0x2b,
   0x98, 0x00, 0x30, 0x8f, 0x45, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e, 0xf2, 0xa6,
   0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x6f, 0x80, 0x3b, 0x08, 0xc6, 0x6d, 0x00,
   0x4b, 0x00, 0x83, 0x42, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80,
   0xad, 0x08, 0x00, 0xc0, 0x8a, 0x44, 0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x4a,
   0x08, 0x44, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xfa, 0x8a, 0x38, 0x00, 0xc2, 0xa0,
   0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c,
   0x80, 0xad, 0x08, 0x00, 0xc0, 0x83, 0x42, 0x26, 0x06, 0xe3, 0xbc, 0x41, 0xa0,
   0x43, 0x08, 0x42, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc2,
   0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xb3, 0x41, 0xa0,
   0x40, 0x08, 0x41, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf9, 0x88, 0x00, 0x00, 0xc3,
   0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03,
   0x00, 0xc6, 0x64, 0x00, 0x42, 0x00, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3,
   0x81, 0x5b, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x8a, 0x44, 0x26,
   0x06, 0xe3, 0xbb, 0x41, 0xa0, 0x4a, 0x08, 0x44, 0xc0, 0x80, 0x41, 0x55, 0x20,
   0xfa, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x83, 0x42,
   0x26, 0x06, 0xe3, 0xbb, 0x41, 0xa0, 0x43, 0x08, 0x42, 0xc0, 0x80, 0x41, 0x55,
   0x20, 0xf9, 0x8c, 0x00, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff,
   0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xc6, 0x64, 0x00, 0x42, 0x00, 0x02,
   0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08,
   0x00, 0xc0, 0x82, 0x43, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad,
   0x08, 0x00, 0xc0, 0x8a, 0x44, 0x26, 0x06, 0xe3, 0xb8, 0x41, 0xa0, 0x4a, 0x08,
   0x44, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xfa, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80,
   0xad, 0x08, 0x00, 0xc0, 0x81, 0x40, 0x26, 0x06, 0xe3, 0xb8, 0x41, 0xa0, 0x41,
   0x08, 0x40, 0xc0, 0x82, 0x43, 0x55, 0x20, 0xf9, 0x8c, 0x00, 0x00, 0xc7, 0xa2,
   0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3,
   0x3f, 0xe0, 0xa8, 0x65, 0x80, 0x3a, 0x08, 0xc6, 0x69, 0x00, 0x47, 0x00, 0x83,
   0x42, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00,
   0xc0, 0x85, 0x44, 0x26, 0x06, 0xe3, 0x8c, 0x41, 0x20, 0x45, 0x44, 0xc0, 0x80,
   0x41, 0xff, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02,
   0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xb3, 0x41, 0xa0, 0x40, 0x08, 0x41, 0xc0,
   0x81, 0x42, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02,
   0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x26, 0x80, 0xa7, 0x08,
   0x00, 0xc0, 0x82, 0x43, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad,
   0x08, 0x00, 0xc0, 0x85, 0x44, 0x26, 0x06, 0xe3, 0xb9, 0x41, 0xa0, 0x45, 0x08,
   0x44, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xfa, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80,
   0xad, 0x08, 0x00, 0xc0, 0x81, 0x40, 0x26, 0x06, 0xe3, 0xb9, 0x41, 0xa0, 0x41,
   0x08, 0x40, 0xc0, 0x82, 0x43, 0x55, 0x20, 0xf9, 0x88, 0x00, 0x00, 0xc7, 0xa2,
   0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xba, 0x41, 0xa0, 0x42,
   0x08, 0x43, 0xc0, 0x82, 0x43, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc9, 0xa2,
   0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3,
   0x3f, 0xe0, 0xaa, 0x6f, 0x80, 0x3c, 0x08, 0xc6, 0x69, 0x00, 0x47, 0x00, 0x83,
   0x42, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00,
   0xc0, 0x85, 0x44, 0x26, 0x06, 0xe3, 0xbd, 0x41, 0xa0, 0x45, 0x08, 0x44, 0xc0,
   0x80, 0x41, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02,
   0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08,
   0x00, 0xc0, 0x81, 0x40, 0x26, 0x06, 0xe3, 0x8c, 0x41, 0x20, 0x41, 0x40, 0xc0,
   0x83, 0x44, 0xff, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc7, 0xa3, 0x00, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb3, 0x41, 0xa0, 0x43, 0x08, 0x44,
   0xc0, 0x83, 0x44, 0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc8, 0xa3, 0x00, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0x4a, 0xc6, 0x69, 0x00, 0x47, 0x00, 0x44, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1,
   0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x8b, 0x45, 0x26, 0x06, 0xe3, 0xb2,
   0x41, 0xa0, 0x4b, 0x08, 0x45, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf9, 0x84, 0x00,
   0x00, 0xc5, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x88, 0x6a, 0xf2, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x45, 0xc6, 0x64, 0x00, 0x42, 0x00, 0x49, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x85, 0x41,
   0x26, 0x06, 0xe3, 0xb5, 0x41, 0xa0, 0x45, 0x08, 0x41, 0xc0, 0x87, 0x48, 0x55,
   0x20, 0xfa, 0x86, 0x38, 0x00, 0xc9, 0xa7, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90,
   0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x8b, 0x45, 0x26, 0x06, 0xe3,
   0xb4, 0x41, 0xa0, 0x4b, 0x08, 0x45, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf1, 0x8c,
   0x00, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2,
   0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x6f, 0x80, 0x3d, 0x08, 0xc6, 0x64,
   0x00, 0x42, 0x00, 0x8e, 0x4d, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3,
   0x81, 0x5c, 0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x85, 0x44, 0x26,
   0x06, 0xe3, 0xb0, 0x41, 0xa0, 0x45, 0x08, 0x44, 0xc0, 0x80, 0x41, 0x55, 0x20,
   0xf2, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x83, 0x42,
   0x26, 0x06, 0xe3, 0xb0, 0x41, 0xa0, 0x43, 0x08, 0x42, 0xc0, 0x80, 0x41, 0x55,
   0x20, 0xf9, 0x8c, 0x00, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff,
   0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x6f, 0x80, 0x3a,
   0x08, 0xc6, 0x64, 0x00, 0x42, 0x00, 0x88, 0x47, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x83,
   0x44, 0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc0, 0xa3, 0x00, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x90, 0x60, 0x80, 0x20, 0x88, 0xaf,
   0xe9, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a, 0xf2, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x4a, 0xc6, 0x69, 0x00, 0x47, 0x00, 0x43, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x84, 0x40,
   0x26, 0x06, 0xe3, 0xb7, 0x41, 0xa0, 0x44, 0x08, 0x40, 0xc0, 0x81, 0x42, 0x55,
   0x20, 0xfa, 0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x81,
   0x40, 0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0, 0x83, 0x44,
   0x55, 0x20, 0xf9, 0x8c, 0x00, 0x00, 0xc0, 0xa3, 0x00, 0xff, 0x02, 0x80, 0xea,
   0xff, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xcb, 0xec, 0x80,
   0x10, 0xc6, 0x62, 0x00, 0x40, 0xc0, 0x85, 0x4f, 0x02, 0x80, 0xea, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x81, 0x40,
   0x26, 0x06, 0xe3, 0xbe, 0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0, 0x83, 0x44, 0x55,
   0x20, 0xfa, 0x86, 0x38, 0x00, 0xc5, 0xa3, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x83,
   0x44, 0x55, 0x20, 0xf9, 0x8c, 0x00, 0x00, 0xc0, 0xa3, 0x00, 0xff, 0x02, 0x80,
   0xea, 0xff, 0x58, 0x20, 0xec, 0x5e, 0x04, 0x80, 0x60, 0x80, 0x20, 0x88, 0xaf,
   0xe2, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90,
   0x50, 0xa3, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x81, 0x40, 0x26, 0x06, 0xe3,
   0xbd, 0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0, 0x8a, 0x4b, 0x55, 0x20, 0xf9, 0x8c,
   0x00, 0x00, 0xc7, 0xaa, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8a, 0x6e, 0xf2,
   0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc5, 0xe4, 0x80, 0x10, 0xc6, 0x69, 0x00,
   0x47, 0xc0, 0x23, 0x22, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0xc3, 0xe2, 0x80, 0x10, 0xc6, 0x6f, 0x00, 0x4d, 0xc0, 0x21, 0x20, 0x04, 0x80,
   0x6a, 0xff, 0xf2, 0xff, 0xff, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff,
   0xff,
};

static const uint32_t spm_load_8X_4_buffers_const_dest[14] = {
   37, 36,         39,         38,         41,         40,         43,
   42, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_8X_4_buffers_info = {
   16,
   63,
   0,
   0,
   0,
   sizeof(spm_load_8X_4_buffers_shader_code),
   spm_load_8X_4_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_8X_4_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_8X_5_buffers_shader_code[3664] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x4f,
   0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc2, 0x83, 0x10, 0x00, 0x00, 0x4d, 0xff,
   0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x4e, 0xff, 0x68,
   0x20, 0xe4, 0xde, 0x04, 0x08, 0x84, 0x6d, 0x80, 0x20, 0x88, 0xb1, 0xe6, 0x80,
   0x08, 0x00, 0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x42, 0xff, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x55, 0x20,
   0xfa, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x58,
   0x20, 0xe4, 0x5e, 0x04, 0x88, 0x6d, 0x80, 0x20, 0x88, 0xb1, 0xe2, 0x80, 0x08,
   0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00,
   0xc0, 0x8c, 0x4b, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0x00, 0xe0, 0x80, 0x40,
   0x00, 0x00, 0x80, 0x80, 0x4a, 0xff, 0x26, 0x06, 0xe3, 0xca, 0x41, 0x20, 0x4c,
   0x4b, 0xc0, 0x80, 0x41, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x55, 0x20, 0xf2, 0x92,
   0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x58, 0x20, 0xe4,
   0x5e, 0x04, 0x8c, 0x6d, 0x80, 0x20, 0x88, 0xb1, 0xe2, 0x80, 0x08, 0x00, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x8b,
   0x4a, 0x26, 0x06, 0xe3, 0x8c, 0x41, 0x20, 0x4b, 0x4a, 0xc0, 0x80, 0x41, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb2, 0x41, 0xa0, 0x40, 0x08,
   0x41, 0xc0, 0x81, 0x42, 0x55, 0x20, 0xf2, 0x8e, 0x38, 0x00, 0xc3, 0xa1, 0x00,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24, 0x80,
   0xa5, 0x08, 0x00, 0x30, 0x85, 0x44, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e,
   0x80, 0xaf, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00,
   0xc1, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x25, 0x02, 0x87, 0xa9, 0x08,
   0x00, 0x00, 0x00, 0x40, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f,
   0xe0, 0xa8, 0x60, 0x80, 0x3d, 0x08, 0xc1, 0x66, 0x00, 0x44, 0x00, 0x83, 0x42,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80,
   0xaf, 0x08, 0x00, 0xc0, 0x85, 0x44, 0x26, 0x06, 0xe3, 0xb5, 0x41, 0xa0, 0x45,
   0x08, 0x44, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc2, 0xa0,
   0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb2, 0x41, 0xa0, 0x40,
   0x08, 0x41, 0xc0, 0x81, 0x42, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc3, 0xa1,
   0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00,
   0x30, 0x86, 0x45, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3,
   0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf1, 0x84, 0x00,
   0x00, 0xc3, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x66, 0x28, 0xf2, 0xa6,
   0xc8, 0x03, 0x00, 0xc3, 0x67, 0x00, 0x45, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x86, 0x47,
   0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00, 0x30, 0x83,
   0x42, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0,
   0x85, 0x44, 0x26, 0x06, 0xe3, 0xbc, 0x41, 0xa0, 0x45, 0x08, 0x44, 0xc0, 0x80,
   0x41, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00,
   0xc0, 0x80, 0x41, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc2, 0xa0, 0x00, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xc2, 0x68,
   0x00, 0x46, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1,
   0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x87, 0x48, 0x45, 0x12, 0xd3, 0x3f, 0xa7,
   0x08, 0x00, 0x00, 0x00, 0x45, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80,
   0xaf, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc4,
   0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03,
   0xd3, 0x3f, 0xe0, 0xa6, 0x65, 0x80, 0x3a, 0x08, 0xc4, 0x69, 0x00, 0x47, 0x00,
   0x83, 0x42, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08,
   0x00, 0xc0, 0x86, 0x45, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0x08, 0xc0, 0x80,
   0x40, 0x00, 0x00, 0x80, 0x80, 0x44, 0xff, 0x26, 0x06, 0xe3, 0xc4, 0x41, 0x20,
   0x46, 0x45, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xfa, 0x8a, 0x38, 0x00, 0xc2,
   0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1,
   0x2a, 0x80, 0xab, 0x08, 0x00, 0x30, 0x83, 0x42, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x85, 0x44, 0x26, 0x06, 0xe3, 0xba,
   0x41, 0xa0, 0x45, 0x08, 0x44, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xfa, 0x8a, 0x38,
   0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90,
   0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf9,
   0x84, 0x00, 0x00, 0xcb, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x82, 0x41, 0x88,
   0xf2, 0x40, 0x00, 0x47, 0x90, 0x08, 0xc0, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80,
   0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x42, 0x41, 0xc0, 0x83, 0x44,
   0xff, 0x55, 0x20, 0xf9, 0x88, 0x00, 0x00, 0xc0, 0xa3, 0x00, 0xff, 0x02, 0x80,
   0xea, 0xff, 0x26, 0x06, 0xe3, 0xb8, 0x41, 0xa0, 0x43, 0x08, 0x44, 0xc0, 0x83,
   0x44, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc2, 0xa3, 0x00, 0xff, 0x02, 0x80,
   0xea, 0xff, 0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xcb, 0x62, 0x00, 0x40,
   0x00, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x26, 0x80,
   0xa7, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e,
   0x80, 0xaf, 0x08, 0x00, 0xc0, 0x86, 0x45, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90,
   0x0c, 0xc0, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x44, 0xff, 0x26, 0x06, 0xe3,
   0xc4, 0x41, 0x20, 0x46, 0x45, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xfa, 0x86,
   0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3,
   0xb2, 0x41, 0xa0, 0x40, 0x08, 0x41, 0xc0, 0x81, 0x42, 0x55, 0x20, 0xfa, 0x86,
   0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x55, 0x20,
   0xf9, 0x84, 0x00, 0x00, 0xcb, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x82, 0x41,
   0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0x0c, 0xc0, 0x80, 0x40, 0x00, 0x00, 0x80,
   0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x42, 0x41, 0xc0, 0x83,
   0x44, 0xff, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc0, 0xa3, 0x00, 0xff, 0x02,
   0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xb2, 0x41, 0xa0, 0x43, 0x08, 0x44, 0xc0,
   0x83, 0x44, 0x55, 0x20, 0xf9, 0x88, 0x00, 0x00, 0xc1, 0xa3, 0x00, 0xff, 0x02,
   0x80, 0xea, 0xff, 0x66, 0x28, 0xfa, 0xa6, 0xc8, 0x03, 0x00, 0xcb, 0x62, 0x00,
   0x40, 0x00, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x26,
   0x80, 0xa7, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3,
   0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x86, 0x45, 0x88, 0xf2, 0x40, 0x00, 0x47,
   0x90, 0x00, 0xe0, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x44, 0xff, 0x26, 0x06,
   0xe3, 0xc4, 0x41, 0x20, 0x46, 0x45, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xfa,
   0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x55,
   0x20, 0xf9, 0x84, 0x00, 0x00, 0xc5, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x84,
   0x41, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0x00, 0xe0, 0x80, 0x40, 0x00, 0x00,
   0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x44, 0x41, 0xc0,
   0x82, 0x43, 0xff, 0x55, 0x20, 0xf9, 0x8c, 0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff,
   0x25, 0x02, 0x87, 0xa9, 0x08, 0x00, 0x00, 0x00, 0x44, 0xff, 0x02, 0x80, 0xea,
   0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x64, 0x80,
   0x3a, 0x08, 0xc5, 0x68, 0x00, 0x46, 0x00, 0x83, 0x42, 0xff, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x85, 0x44, 0x26, 0x06,
   0xe3, 0x84, 0x41, 0x20, 0x45, 0x44, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xfa,
   0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5d, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x86, 0x45,
   0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0x04, 0xe0, 0x80, 0x40, 0x00, 0x00, 0x80,
   0x80, 0x44, 0xff, 0x26, 0x06, 0xe3, 0xc4, 0x41, 0x20, 0x46, 0x45, 0xc0, 0x80,
   0x41, 0xff, 0x55, 0x20, 0xfa, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02,
   0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08,
   0x00, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc4, 0xa0, 0x00,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x25, 0x02, 0x87, 0xad, 0x08, 0x00, 0x00, 0x00,
   0x41, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00,
   0xc0, 0x85, 0x46, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0x04, 0xe0, 0x80, 0x40,
   0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x45,
   0x46, 0xc0, 0x82, 0x43, 0xff, 0x55, 0x20, 0xf9, 0x8c, 0x00, 0x00, 0xc6, 0xa2,
   0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3,
   0x3f, 0xe0, 0xac, 0x61, 0x80, 0x3b, 0x08, 0xc4, 0x68, 0x00, 0x46, 0x00, 0x83,
   0x42, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00,
   0xc0, 0x85, 0x44, 0x26, 0x06, 0xe3, 0xbe, 0x41, 0xa0, 0x45, 0x08, 0x44, 0xc0,
   0x80, 0x41, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02,
   0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xb2, 0x41, 0xa0, 0x40, 0x08, 0x41, 0xc0,
   0x81, 0x42, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02,
   0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08,
   0x00, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc7, 0xa0, 0x00,
   0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0,
   0x83, 0x42, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0x84, 0x41, 0x20, 0x43,
   0x42, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf9, 0x8c, 0x00, 0x00, 0xc2, 0xa0,
   0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xb4, 0x41, 0xa0, 0x40,
   0x08, 0x41, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc5, 0xa0,
   0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0x45, 0xc7, 0x64, 0x00, 0x42, 0x00, 0x46, 0x02, 0x80, 0xea, 0xff,
   0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x84,
   0x45, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0,
   0x80, 0x41, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc7, 0xa0, 0x00, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x83, 0x42,
   0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xb3, 0x41, 0xa0, 0x43, 0x08, 0x42,
   0xc0, 0x80, 0x41, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc3, 0xa0, 0x00, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0xc3, 0x40, 0xa0, 0x2b, 0x90, 0xc7, 0x66, 0x00, 0x44, 0xc0, 0x82, 0x49, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x8a,
   0x43, 0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x4a, 0x08, 0x43, 0xc0, 0x80, 0x41,
   0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea,
   0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0,
   0x80, 0x41, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc5, 0xa0, 0x00, 0xff, 0x02,
   0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08,
   0x00, 0xc0, 0x81, 0x40, 0x26, 0x06, 0xe3, 0xb5, 0x41, 0xa0, 0x41, 0x08, 0x40,
   0xc0, 0x82, 0x43, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff,
   0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xb2, 0x41, 0xa0, 0x42, 0x08, 0x43,
   0xc0, 0x82, 0x43, 0x55, 0x20, 0xf9, 0x88, 0x00, 0x00, 0xc7, 0xa2, 0x00, 0xff,
   0x25, 0x02, 0x87, 0xad, 0x08, 0x00, 0x00, 0x00, 0x4c, 0xff, 0x02, 0x80, 0xea,
   0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x6c, 0x80,
   0x3c, 0x08, 0xc5, 0x68, 0x00, 0x46, 0x00, 0x83, 0x42, 0xff, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x8b, 0x4a, 0x26, 0x06,
   0xe3, 0xb7, 0x41, 0xa0, 0x4b, 0x08, 0x4a, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf2,
   0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5c, 0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x85, 0x44,
   0x26, 0x06, 0xe3, 0x8c, 0x41, 0x20, 0x45, 0x44, 0xc0, 0x80, 0x41, 0xff, 0x55,
   0x20, 0xf2, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x26, 0x06, 0xe3, 0xb2, 0x41, 0xa0, 0x40, 0x08, 0x41, 0xc0, 0x81, 0x42, 0x55,
   0x20, 0xf2, 0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x80,
   0x41, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc5, 0xa0, 0x00, 0xff, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x83, 0x42, 0x02,
   0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0x8c, 0x41, 0x20, 0x43, 0x42, 0xc0, 0x80,
   0x41, 0xff, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02,
   0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb2, 0x41, 0xa0, 0x40, 0x08, 0x41, 0xc0,
   0x80, 0x41, 0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc3, 0xa0, 0x00, 0xff, 0x02,
   0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa,
   0x69, 0x80, 0x3a, 0x08, 0xc5, 0x64, 0x00, 0x42, 0x00, 0x81, 0x40, 0xff, 0x02,
   0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2a, 0x80, 0xab, 0x08,
   0x00, 0xc0, 0x84, 0x45, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x88, 0x47, 0xa9, 0xf2, 0x40, 0x00,
   0x47, 0x91, 0x00, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x46,
   0xff, 0x26, 0x06, 0xe3, 0xc6, 0x41, 0x20, 0x48, 0x47, 0xc0, 0x82, 0x43, 0xff,
   0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc4, 0xa2, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x90, 0x6d, 0x80, 0x20, 0x88, 0xb1, 0xe2,
   0x80, 0x08, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf,
   0x08, 0x00, 0xc0, 0x86, 0x47, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xca, 0xa6,
   0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0x43, 0xca, 0x62, 0x00, 0x40, 0x00, 0x4c, 0x02, 0x80, 0x6a, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x81,
   0x40, 0x26, 0x06, 0xe3, 0xbd, 0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0, 0x8a, 0x4b,
   0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xcc, 0xaa, 0x00, 0xff, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x55, 0x20,
   0xf9, 0x84, 0x00, 0x00, 0xc3, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x81, 0x40,
   0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xbc, 0x41, 0xa0, 0x41, 0x08, 0x40,
   0xc0, 0x8a, 0x4b, 0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc7, 0xaa, 0x00, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87,
   0xc4, 0xe5, 0x80, 0x10, 0xc3, 0x69, 0x00, 0x47, 0xc0, 0x86, 0x42, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x83, 0x41, 0xa9,
   0xf2, 0x40, 0x00, 0x47, 0x91, 0x08, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
   0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x43, 0x41, 0xc0,
   0x84, 0x45, 0xff, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc6, 0xa4, 0x00, 0xff,
   0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf,
   0x08, 0x00, 0xc0, 0x85, 0x43, 0x26, 0x06, 0xe3, 0xbb, 0x41, 0xa0, 0x45, 0x08,
   0x43, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80,
   0xaf, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xca,
   0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x25, 0x02, 0x87, 0xad, 0x08, 0x00,
   0x00, 0x00, 0x41, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf,
   0x08, 0x00, 0xc0, 0x84, 0x46, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x00, 0x00,
   0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3,
   0xc0, 0x41, 0x20, 0x44, 0x46, 0xc0, 0x82, 0x43, 0xff, 0x55, 0x20, 0xf9, 0x8c,
   0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e, 0xfa,
   0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x61, 0x80, 0x3a, 0x08, 0xca, 0x68,
   0x00, 0x46, 0x00, 0x85, 0x44, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e,
   0x80, 0xaf, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00,
   0xc1, 0xa2, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x86, 0x40, 0x26, 0x06, 0xe3, 0xba,
   0x41, 0xa0, 0x46, 0x08, 0x40, 0xc0, 0x82, 0x43, 0x55, 0x20, 0xf9, 0x8c, 0x00,
   0x00, 0xc6, 0xa2, 0x00, 0xff, 0x25, 0x02, 0x87, 0xad, 0x08, 0x00, 0x00, 0x00,
   0x4c, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3,
   0x3f, 0xe0, 0xac, 0x6c, 0x80, 0x3d, 0x08, 0xc1, 0x68, 0x00, 0x46, 0x00, 0x83,
   0x42, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e,
   0x80, 0xaf, 0x08, 0x00, 0xc0, 0x86, 0x4b, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91,
   0x0c, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x4a, 0xff, 0x26,
   0x06, 0xe3, 0xca, 0x41, 0x20, 0x46, 0x4b, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20,
   0xfa, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x26,
   0x06, 0xe3, 0xb2, 0x41, 0xa0, 0x40, 0x08, 0x41, 0xc0, 0x81, 0x42, 0x55, 0x20,
   0xfa, 0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x68,
   0x20, 0xe4, 0xde, 0x04, 0x08, 0x94, 0x6d, 0x80, 0x20, 0x88, 0xb1, 0xe6, 0x80,
   0x08, 0x00, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x80, 0x6d, 0x80, 0x20, 0x88, 0xb1,
   0xec, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90,
   0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x82, 0x41, 0x88, 0xf2, 0x40,
   0x00, 0x47, 0x90, 0x08, 0xa0, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff,
   0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x42, 0x41, 0xc0, 0x8a, 0x4b, 0xff, 0x02,
   0x80, 0x6a, 0xff, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xcc, 0xaa, 0x00, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb8, 0x41, 0xa0, 0x4a, 0x08, 0x4b,
   0xc0, 0x8c, 0x4d, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xce, 0xac, 0x00, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x80,
   0x41, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc3, 0xa0, 0x00, 0xff, 0x02, 0x80,
   0xea, 0xff, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x47, 0xc3,
   0x66, 0x00, 0x44, 0x00, 0x42, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90,
   0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x85, 0x43, 0x26, 0x06, 0xe3,
   0xbf, 0x41, 0xa0, 0x45, 0x08, 0x43, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xfa, 0x86,
   0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x55, 0x20,
   0xf9, 0x84, 0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x83, 0x42,
   0x26, 0x06, 0xe3, 0xbe, 0x41, 0xa0, 0x43, 0x08, 0x42, 0xc0, 0x80, 0x41, 0x55,
   0x20, 0xf9, 0x84, 0x00, 0x00, 0xc3, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff,
   0x26, 0x06, 0xe3, 0xb2, 0x41, 0xa0, 0x40, 0x08, 0x41, 0xc0, 0x80, 0x41, 0x55,
   0x20, 0xf9, 0x88, 0x00, 0x00, 0xc4, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff,
   0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc8, 0xe9, 0x80, 0x10,
   0xc6, 0x65, 0x00, 0x43, 0xc0, 0x87, 0x42, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x86, 0x45, 0xa9,
   0xf2, 0x40, 0x00, 0x47, 0x91, 0x04, 0x20, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
   0x80, 0x80, 0x43, 0xff, 0x26, 0x06, 0xe3, 0xc3, 0x41, 0x20, 0x46, 0x45, 0xc0,
   0x80, 0x41, 0xff, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff,
   0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf,
   0x08, 0x00, 0xc0, 0x83, 0x40, 0x26, 0x06, 0xe3, 0xb9, 0x41, 0xa0, 0x43, 0x08,
   0x40, 0xc0, 0x85, 0x46, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc7, 0xa5, 0x00,
   0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0,
   0x80, 0x41, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xcb, 0xa0, 0x00, 0xff, 0x02,
   0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08,
   0x00, 0xc0, 0x81, 0x40, 0x26, 0x06, 0xe3, 0xb7, 0x41, 0xa0, 0x41, 0x08, 0x40,
   0xc0, 0x83, 0x44, 0x55, 0x20, 0xf9, 0x88, 0x00, 0x00, 0xc0, 0xa3, 0x00, 0xff,
   0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xb8, 0x41, 0xa0, 0x43, 0x08, 0x44,
   0xc0, 0x83, 0x44, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc2, 0xa3, 0x00, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x87,
   0x46, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0x00, 0xc0, 0x80, 0x40, 0x00, 0x00,
   0x80, 0x80, 0x45, 0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xc5, 0x41,
   0x20, 0x47, 0x46, 0xc0, 0x83, 0x44, 0xff, 0x55, 0x20, 0xf9, 0x88, 0x00, 0x00,
   0xc5, 0xa3, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8,
   0x03, 0xd0, 0x3f, 0x87, 0xc6, 0xe5, 0x80, 0x10, 0xcb, 0x62, 0x00, 0x40, 0xc0,
   0x23, 0x22, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e,
   0x80, 0xaf, 0x08, 0x00, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00,
   0xc5, 0xa0, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf,
   0x08, 0x00, 0xc0, 0x84, 0x43, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0x08, 0xa0,
   0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x42, 0xff, 0x02, 0x80, 0xea, 0xff, 0x26,
   0x06, 0xe3, 0xc2, 0x41, 0x20, 0x44, 0x43, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20,
   0xf9, 0x88, 0x00, 0x00, 0xcb, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x2e, 0x80, 0xaf, 0x08, 0x00, 0xc0, 0x82, 0x41,
   0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x0c, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00,
   0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x42, 0x41,
   0xc0, 0x83, 0x44, 0xff, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc0, 0xa3, 0x00,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xb2, 0x41, 0xa0, 0x43, 0x08,
   0x44, 0xc0, 0x83, 0x44, 0x55, 0x20, 0xf9, 0x88, 0x00, 0x00, 0xc1, 0xa3, 0x00,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f,
   0x87, 0xcc, 0xeb, 0x80, 0x10, 0xc5, 0x62, 0x00, 0x40, 0xc0, 0x21, 0x20, 0x02,
   0x80, 0x6a, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_8X_5_buffers_const_dest[14] = {
   37, 36, 39, 38,         41,         40,         43,
   42, 45, 44, 4294967295, 4294967295, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_8X_5_buffers_info = {
   16,
   64,
   0,
   0,
   0,
   sizeof(spm_load_8X_5_buffers_shader_code),
   spm_load_8X_5_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_8X_5_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_8X_6_buffers_shader_code[4056] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x42,
   0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0,
   0x86, 0x45, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x08, 0x20, 0x01, 0x00, 0x80,
   0x40, 0x00, 0x00, 0x80, 0x80, 0x43, 0xff, 0x26, 0x06, 0xe3, 0xc3, 0x41, 0x20,
   0x46, 0x45, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc2,
   0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc2,
   0x83, 0x10, 0x00, 0x00, 0x42, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30,
   0x80, 0xb1, 0x08, 0x00, 0xc0, 0x86, 0x45, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91,
   0x00, 0x20, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x43, 0xff, 0x26,
   0x06, 0xe3, 0xc3, 0x41, 0x20, 0x46, 0x45, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20,
   0xf2, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x46,
   0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x42, 0xff, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x86, 0x45, 0xa9,
   0xf2, 0x40, 0x00, 0x47, 0x91, 0x04, 0x20, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
   0x80, 0x80, 0x43, 0xff, 0x26, 0x06, 0xe3, 0xc3, 0x41, 0x20, 0x46, 0x45, 0xc0,
   0x80, 0x41, 0xff, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1,
   0x08, 0x00, 0xc0, 0x82, 0x41, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x00, 0x20,
   0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3,
   0xc0, 0x41, 0x20, 0x42, 0x41, 0xc0, 0x83, 0x44, 0xff, 0x55, 0x20, 0xf1, 0x8c,
   0x00, 0x00, 0xc0, 0xa3, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x58, 0x20, 0xe4,
   0x5e, 0x04, 0x84, 0x60, 0x80, 0x20, 0x88, 0xb3, 0xe9, 0x80, 0x08, 0x00, 0xff,
   0x34, 0x22, 0x20, 0x00, 0x00, 0x00, 0x46, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x82, 0x41,
   0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x00, 0x20, 0x01, 0x00, 0x80, 0x40, 0x00,
   0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x42, 0x41,
   0xc0, 0x83, 0x44, 0xff, 0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc0, 0xa3, 0x00,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x88, 0x60, 0x80,
   0x20, 0x88, 0xb3, 0xe2, 0x80, 0x08, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x87, 0x4d, 0x02, 0x80, 0x6a, 0xff,
   0x26, 0x06, 0xe3, 0x88, 0x41, 0x20, 0x47, 0x4d, 0xc0, 0x80, 0x41, 0xff, 0x55,
   0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x26, 0x06, 0xe3, 0xb4, 0x41, 0xa0, 0x40, 0x08, 0x41, 0xc0, 0x82, 0x43, 0x55,
   0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc4, 0xa2, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x82,
   0x41, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x00, 0x20, 0x01, 0x00, 0x80, 0x40,
   0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x42,
   0x41, 0xc0, 0x83, 0x44, 0xff, 0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc0, 0xa3,
   0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x8c, 0x60,
   0x80, 0x20, 0x88, 0xb3, 0xe2, 0x80, 0x08, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90,
   0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x87, 0x4d, 0x02, 0x80, 0x6a,
   0xff, 0x26, 0x06, 0xe3, 0xb8, 0x41, 0xa0, 0x47, 0x08, 0x4d, 0xc0, 0x80, 0x41,
   0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x26, 0x06, 0xe3, 0xb4, 0x41, 0xa0, 0x40, 0x08, 0x41, 0xc0, 0x82, 0x43,
   0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc4, 0xa2, 0x00, 0xff, 0x27, 0x0e, 0xe3,
   0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x88, 0x47, 0x02, 0x80,
   0x6a, 0xff, 0x25, 0x02, 0x87, 0xa9, 0x08, 0x00, 0x00, 0x00, 0x44, 0xff, 0x8b,
   0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x64, 0x80, 0x3d, 0x08,
   0xc6, 0x69, 0x00, 0x47, 0x00, 0x83, 0x42, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x85, 0x44, 0x26, 0x06, 0xe3, 0xbb,
   0x41, 0xa0, 0x45, 0x08, 0x44, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xfa, 0x8a, 0x38,
   0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81,
   0x5b, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x89, 0x48, 0x66, 0x28, 0xf2,
   0xa6, 0xc8, 0x03, 0x00, 0xc6, 0x6a, 0x00, 0x48, 0x00, 0x02, 0x80, 0x6a, 0xff,
   0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x89,
   0x4a, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80,
   0xb1, 0x08, 0x00, 0xc0, 0x83, 0x42, 0x26, 0x06, 0xe3, 0x8c, 0x41, 0x20, 0x43,
   0x42, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc7, 0xa0,
   0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0xcc, 0xe7, 0x80, 0x10, 0xc6, 0x6b, 0x00, 0x49, 0xc0, 0x85, 0x4d,
   0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x83,
   0x44, 0x26, 0x06, 0x87, 0xab, 0x40, 0xa0, 0x27, 0x98, 0x00, 0x30, 0x80, 0x4f,
   0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0,
   0xa6, 0x60, 0x80, 0x3a, 0x08, 0xc6, 0x65, 0x00, 0x43, 0x00, 0x8a, 0x49, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x87,
   0x48, 0x55, 0x20, 0xfa, 0x8a, 0x38, 0x00, 0xc9, 0xa7, 0x00, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00,
   0xc0, 0x82, 0x43, 0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc7, 0xa2, 0x00, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0,
   0xaa, 0x6f, 0x80, 0x3d, 0x08, 0xc6, 0x69, 0x00, 0x47, 0x00, 0x83, 0x42, 0xff,
   0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1,
   0x08, 0x00, 0xc0, 0x87, 0x45, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0x0c, 0xc0,
   0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x44, 0xff, 0x26, 0x06, 0xe3, 0xc4, 0x41,
   0x20, 0x47, 0x45, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00,
   0xc2, 0xa0, 0x00, 0xff, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0xf4, 0x1f, 0x80,
   0x40, 0x00, 0x00, 0x80, 0x80, 0x44, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06,
   0xe3, 0xc4, 0x41, 0x20, 0x40, 0x41, 0xc0, 0x81, 0x42, 0xff, 0x55, 0x20, 0xf2,
   0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1,
   0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x8b, 0x4c, 0x66, 0x28, 0xfa, 0xa6, 0xc8,
   0x03, 0x00, 0xc6, 0x6d, 0x00, 0x4b, 0x00, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x85, 0x44,
   0x26, 0x06, 0xe3, 0x88, 0x41, 0x20, 0x45, 0x44, 0xc0, 0x80, 0x41, 0xff, 0x55,
   0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x2c, 0x80, 0xad, 0x08, 0x00, 0x30, 0x83,
   0x42, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0,
   0x87, 0x45, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x04, 0x00, 0x01, 0x00, 0x80,
   0x40, 0x00, 0x00, 0x80, 0x80, 0x44, 0xff, 0x26, 0x06, 0xe3, 0xc4, 0x41, 0x20,
   0x47, 0x45, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc2,
   0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3,
   0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x83, 0x42, 0x26, 0x06, 0xe3, 0x88, 0x41,
   0x20, 0x43, 0x42, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf1, 0x88, 0x00, 0x00,
   0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb4, 0x41,
   0xa0, 0x40, 0x08, 0x41, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf1, 0x88, 0x00, 0x00,
   0xc4, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8,
   0x03, 0xd0, 0x3f, 0x87, 0x45, 0xc6, 0x64, 0x00, 0x42, 0x00, 0x49, 0x27, 0x0e,
   0xe3, 0x81, 0x5d, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x87, 0x48, 0x02,
   0x80, 0x6a, 0xff, 0x25, 0x02, 0x87, 0xa9, 0x08, 0x00, 0x00, 0x00, 0x44, 0xff,
   0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8, 0x64, 0x80, 0x3a,
   0x08, 0xc6, 0x69, 0x00, 0x47, 0x00, 0x83, 0x42, 0xff, 0x27, 0x06, 0xe3, 0x90,
   0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x85, 0x44, 0x26, 0x06, 0xe3,
   0xba, 0x41, 0xa0, 0x45, 0x08, 0x44, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xfa, 0x8a,
   0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3,
   0x81, 0x5d, 0xa1, 0x2c, 0x80, 0xad, 0x08, 0x00, 0x30, 0x83, 0x42, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x85, 0x44, 0x26,
   0x06, 0xe3, 0xbf, 0x41, 0xa0, 0x45, 0x08, 0x44, 0xc0, 0x80, 0x41, 0x55, 0x20,
   0xfa, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x81, 0x40,
   0x26, 0x06, 0xe3, 0xba, 0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0, 0x83, 0x44, 0x55,
   0x20, 0xf9, 0x90, 0x00, 0x00, 0xc7, 0xa3, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff,
   0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x4a, 0xc6, 0x69, 0x00,
   0x47, 0x00, 0x4c, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x28, 0x80, 0xa9, 0x08,
   0x00, 0xc0, 0x8a, 0x4b, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1,
   0x08, 0x00, 0xc0, 0x83, 0x42, 0x26, 0x06, 0xe3, 0xb9, 0x41, 0xa0, 0x43, 0x08,
   0x42, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc7, 0xa0, 0x00,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x88, 0x6a, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f,
   0x87, 0x47, 0xc6, 0x6c, 0x00, 0x4a, 0x00, 0x45, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x81, 0x40, 0x26, 0x06, 0xe3, 0xbc,
   0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0, 0x83, 0x44, 0x55, 0x20, 0xf2, 0x86, 0x38,
   0x00, 0xc5, 0xa3, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80,
   0xb1, 0x08, 0x00, 0xc0, 0x81, 0x40, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3,
   0xbb, 0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0, 0x82, 0x43, 0x55, 0x20, 0xf1, 0x88,
   0x00, 0x00, 0xc7, 0xa2, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3,
   0xb4, 0x41, 0xa0, 0x42, 0x08, 0x43, 0xc0, 0x82, 0x43, 0x55, 0x20, 0xf1, 0x84,
   0x00, 0x00, 0xc9, 0xa2, 0x00, 0xff, 0x45, 0x12, 0xd3, 0x3f, 0xaf, 0x08, 0x00,
   0x00, 0x00, 0x44, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03,
   0xd3, 0x3f, 0xe0, 0xae, 0x64, 0x80, 0x3b, 0x08, 0xc6, 0x69, 0x00, 0x47, 0x00,
   0x83, 0x42, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3,
   0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x87, 0x45, 0x88, 0xf2, 0x40, 0x00, 0x47,
   0x90, 0x08, 0xe0, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x44, 0xff, 0x26, 0x06,
   0xe3, 0xc4, 0x41, 0x20, 0x47, 0x45, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf2,
   0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5c, 0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x85, 0x44,
   0x26, 0x06, 0xe3, 0xb8, 0x41, 0xa0, 0x45, 0x08, 0x44, 0xc0, 0x80, 0x41, 0x55,
   0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x83,
   0x42, 0x26, 0x06, 0xe3, 0xb8, 0x41, 0xa0, 0x43, 0x08, 0x42, 0xc0, 0x80, 0x41,
   0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x26, 0x06, 0xe3, 0xb4, 0x41, 0xa0, 0x40, 0x08, 0x41, 0xc0, 0x80, 0x41,
   0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc4, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x6f, 0x80,
   0x3a, 0x08, 0xc6, 0x64, 0x00, 0x42, 0x00, 0x81, 0x40, 0xff, 0x02, 0x80, 0xea,
   0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0,
   0x89, 0x4a, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00,
   0xc0, 0x8c, 0x4d, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1,
   0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x84, 0x45, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x8e, 0x47, 0x26, 0x06, 0xe3, 0xbd,
   0x41, 0xa0, 0x4e, 0x08, 0x47, 0xc0, 0x82, 0x43, 0x55, 0x20, 0xf2, 0x8a, 0x38,
   0x00, 0xc4, 0xa2, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90,
   0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x8e, 0x43, 0xa9, 0xf2, 0x40,
   0x00, 0x47, 0x91, 0x00, 0x20, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80,
   0x42, 0xff, 0x26, 0x06, 0xe3, 0xc2, 0x41, 0x20, 0x4e, 0x43, 0xc0, 0x87, 0x48,
   0xff, 0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc3, 0xa7, 0x00, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x90, 0x63, 0x80, 0x20, 0x88, 0xb3,
   0xe2, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a, 0xf2, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x43, 0xc6, 0x62, 0x00, 0x40, 0x00, 0x4b, 0x02,
   0x80, 0x6a, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc4,
   0xe5, 0x80, 0x10, 0xc6, 0x6b, 0x00, 0x49, 0xc0, 0x8e, 0x42, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x87, 0x45, 0x88, 0xf2,
   0x40, 0x00, 0x47, 0x90, 0x04, 0xe0, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x43,
   0xff, 0x26, 0x06, 0xe3, 0xc3, 0x41, 0x20, 0x47, 0x45, 0xc0, 0x80, 0x41, 0xff,
   0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea,
   0xff, 0x25, 0x02, 0x87, 0xad, 0x08, 0x00, 0x00, 0x00, 0x40, 0xff, 0x02, 0x80,
   0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x60,
   0x80, 0x3a, 0x08, 0xc6, 0x6e, 0x00, 0x4c, 0x00, 0x8b, 0x4a, 0xff, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x84, 0x41, 0x88,
   0xf2, 0x40, 0x00, 0x47, 0x90, 0x0c, 0xc0, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80,
   0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x44, 0x41, 0xc0, 0x82, 0x43,
   0xff, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc7, 0xa2, 0x00, 0xff, 0x88, 0xf2,
   0x40, 0x00, 0x47, 0x90, 0xf4, 0x1f, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x42, 0x43,
   0xc0, 0x82, 0x43, 0xff, 0x55, 0x20, 0xf9, 0x88, 0x00, 0x00, 0xc8, 0xa2, 0x00,
   0xff, 0x45, 0x12, 0xd3, 0x3f, 0xaf, 0x08, 0x00, 0x00, 0x00, 0x44, 0x02, 0x80,
   0xea, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xae, 0x64,
   0x80, 0x3c, 0x08, 0xc6, 0x69, 0x00, 0x47, 0x00, 0x83, 0x42, 0xff, 0x02, 0x80,
   0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00,
   0xc0, 0x87, 0x45, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x08, 0x40, 0x01, 0x00,
   0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x44, 0xff, 0x26, 0x06, 0xe3, 0xc4, 0x41,
   0x20, 0x47, 0x45, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xfa, 0x8a, 0x38, 0x00,
   0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x82, 0x41, 0xa9, 0xf2, 0x40, 0x00,
   0x47, 0x91, 0x00, 0x20, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40,
   0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x42, 0x41, 0xc0, 0x83, 0x44, 0xff,
   0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc0, 0xa3, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x94, 0x60, 0x80, 0x20, 0x88, 0xb3, 0xec,
   0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8,
   0x03, 0xd0, 0x3f, 0x87, 0x4d, 0xc6, 0x6c, 0x00, 0x4a, 0x00, 0x49, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x83, 0x42, 0xa9,
   0xf2, 0x40, 0x00, 0x47, 0x91, 0x0c, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
   0x80, 0x80, 0x41, 0xff, 0x26, 0x06, 0xe3, 0xc1, 0x41, 0x20, 0x43, 0x42, 0xc0,
   0x87, 0x48, 0xff, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc9, 0xa7, 0x00, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x84,
   0x43, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x04, 0x00, 0x01, 0x00, 0x80, 0x40,
   0x00, 0x00, 0x80, 0x80, 0x42, 0xff, 0x26, 0x06, 0xe3, 0xc2, 0x41, 0x20, 0x44,
   0x43, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc2, 0xa0,
   0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0xce, 0xef, 0x80, 0x10, 0xc6, 0x64, 0x00, 0x42, 0xc0, 0x8d, 0x45,
   0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1,
   0x08, 0x00, 0xc0, 0x82, 0x41, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0x08, 0xc0,
   0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41,
   0x20, 0x42, 0x41, 0xc0, 0x83, 0x44, 0xff, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00,
   0xc5, 0xa3, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1,
   0x08, 0x00, 0xc0, 0x81, 0x40, 0x26, 0x06, 0xe3, 0xbe, 0x41, 0xa0, 0x41, 0x08,
   0x40, 0xc0, 0x8b, 0x4c, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xcd, 0xab, 0x00,
   0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0,
   0x81, 0x40, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xbd, 0x41, 0xa0, 0x41,
   0x08, 0x40, 0xc0, 0x82, 0x43, 0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc7, 0xa2,
   0x00, 0xff, 0x45, 0x12, 0xd3, 0x3f, 0xaf, 0x08, 0x00, 0x00, 0x00, 0x44, 0x02,
   0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xae,
   0x64, 0x80, 0x3a, 0x08, 0xc6, 0x69, 0x00, 0x47, 0x00, 0x83, 0x42, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x85, 0x44,
   0x26, 0x06, 0xe3, 0xb7, 0x41, 0xa0, 0x45, 0x08, 0x44, 0xc0, 0x80, 0x41, 0x55,
   0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x81,
   0x40, 0x26, 0x06, 0xe3, 0xbf, 0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0, 0x82, 0x43,
   0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc7, 0xa2, 0x00, 0xff, 0x45, 0x12, 0xd3,
   0x3f, 0xaf, 0x08, 0x00, 0x00, 0x00, 0x44, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e,
   0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xae, 0x64, 0x80, 0x3d, 0x08, 0xc6,
   0x69, 0x00, 0x47, 0x00, 0x83, 0x42, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x87, 0x45, 0xa9,
   0xf2, 0x40, 0x00, 0x47, 0x91, 0x0c, 0x20, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
   0x80, 0x80, 0x44, 0xff, 0x26, 0x06, 0xe3, 0xc4, 0x41, 0x20, 0x47, 0x45, 0xc0,
   0x80, 0x41, 0xff, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff,
   0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0xf4, 0x1f, 0x80, 0x40, 0x00, 0x00, 0x80,
   0x80, 0x44, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xc4, 0x41, 0x20,
   0x40, 0x41, 0xc0, 0x81, 0x42, 0xff, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc3,
   0xa1, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3,
   0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x82, 0x41, 0xa9, 0xf2, 0x40, 0x00, 0x47,
   0x91, 0x00, 0x20, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff,
   0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x42, 0x41, 0xc0, 0x83, 0x44, 0xff, 0x55,
   0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc0, 0xa3, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x58, 0x20, 0xe4, 0x5e, 0x04, 0x98, 0x60, 0x80, 0x20, 0x88, 0xb3, 0xe2, 0x80,
   0x08, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08,
   0x00, 0xc0, 0x8b, 0x4a, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb5, 0x41,
   0xa0, 0x4b, 0x08, 0x4a, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf2, 0x92, 0x38, 0x00,
   0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x82, 0x41, 0xa9, 0xf2, 0x40, 0x00,
   0x47, 0x91, 0x00, 0x20, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40,
   0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x42, 0x41, 0xc0, 0x83, 0x44, 0xff,
   0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc0, 0xa3, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x80, 0x60, 0x80, 0x20, 0x88, 0xb3, 0xe2,
   0x80, 0x08, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1,
   0x08, 0x00, 0xc0, 0x87, 0x4b, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x04, 0x60,
   0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x4a, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x26, 0x06, 0xe3, 0xca, 0x41, 0x20, 0x47, 0x4b, 0xc0, 0x80, 0x41, 0xff,
   0x55, 0x20, 0xf2, 0x8e, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0xfc, 0x1f, 0x80, 0x40, 0x00, 0x00,
   0x80, 0x80, 0x42, 0xff, 0x26, 0x06, 0xe3, 0xc2, 0x41, 0x20, 0x40, 0x41, 0xc0,
   0x83, 0x44, 0xff, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc5, 0xa3, 0x00, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1,
   0x08, 0x00, 0xc0, 0x83, 0x42, 0x26, 0x06, 0xe3, 0xb7, 0x41, 0xa0, 0x43, 0x08,
   0x42, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc2, 0xa0, 0x00,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb4, 0x41, 0xa0, 0x40, 0x08,
   0x41, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc4, 0xa0, 0x00,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f,
   0x87, 0x45, 0xc6, 0x64, 0x00, 0x42, 0x00, 0x4f, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x81, 0x43,
   0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x00, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00,
   0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x41, 0x43,
   0xc0, 0x8d, 0x4e, 0xff, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xcf, 0xad, 0x00,
   0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0,
   0x83, 0x42, 0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x43, 0x08, 0x42, 0xc0, 0x80,
   0x41, 0x55, 0x20, 0xf9, 0x88, 0x00, 0x00, 0xc4, 0xa0, 0x00, 0xff, 0x02, 0x80,
   0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00,
   0xc0, 0x8c, 0x41, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0x08, 0xe0, 0x80, 0x40,
   0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x4c,
   0x41, 0xc0, 0x82, 0x43, 0xff, 0x55, 0x20, 0xf9, 0x88, 0x00, 0x00, 0xc7, 0xa2,
   0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xb4, 0x41, 0xa0, 0x42,
   0x08, 0x43, 0xc0, 0x82, 0x43, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc9, 0xa2,
   0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0,
   0x3f, 0x87, 0xc4, 0xe5, 0x80, 0x10, 0xc6, 0x69, 0x00, 0x47, 0xc0, 0x82, 0x43,
   0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1,
   0x08, 0x00, 0xc0, 0x87, 0x45, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x00, 0x60,
   0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x44, 0xff, 0x26, 0x06, 0xe3,
   0xc4, 0x41, 0x20, 0x47, 0x45, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xfa, 0x86,
   0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30,
   0x80, 0xb1, 0x08, 0x00, 0xc0, 0x85, 0x44, 0x02, 0x80, 0xea, 0xff, 0xa9, 0xf2,
   0x40, 0x00, 0x47, 0x91, 0x04, 0x40, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80,
   0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x45, 0x44, 0xc0, 0x81,
   0x42, 0xff, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02,
   0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08,
   0x00, 0xc0, 0x84, 0x43, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x08, 0x40, 0x01,
   0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x42, 0xff, 0x26, 0x06, 0xe3, 0xc2,
   0x41, 0x20, 0x44, 0x43, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf9, 0x88, 0x00,
   0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xb4,
   0x41, 0xa0, 0x40, 0x08, 0x41, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf9, 0x84, 0x00,
   0x00, 0xc4, 0xa0, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80,
   0xb1, 0x08, 0x00, 0xc0, 0x87, 0x4b, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x0c,
   0x60, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x45, 0xff, 0x02, 0x80,
   0xea, 0xff, 0x26, 0x06, 0xe3, 0xc5, 0x41, 0x20, 0x47, 0x4b, 0xc0, 0x80, 0x41,
   0xff, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc7, 0xa0, 0x00, 0xff, 0x88, 0xf2,
   0x40, 0x00, 0x47, 0x90, 0xf4, 0x1f, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x45,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xc5, 0x41, 0x20, 0x40, 0x41,
   0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc5, 0xa0, 0x00,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x8a, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f,
   0x87, 0xc5, 0xe7, 0x80, 0x10, 0xc6, 0x64, 0x00, 0x42, 0xc0, 0x23, 0x22, 0x02,
   0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x30, 0x80, 0xb1, 0x08,
   0x00, 0xc0, 0x84, 0x43, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x0c, 0x20, 0x01,
   0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x42, 0xff, 0x26, 0x06, 0xe3, 0xc2,
   0x41, 0x20, 0x44, 0x43, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf9, 0x84, 0x00,
   0x00, 0xc2, 0xa0, 0x00, 0xff, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0xf4, 0x1f,
   0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x43, 0xff, 0x02, 0x80, 0xea, 0xff, 0x26,
   0x06, 0xe3, 0xc3, 0x41, 0x20, 0x40, 0x41, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20,
   0xf9, 0x88, 0x00, 0x00, 0xc3, 0xa0, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x30, 0x80, 0xb1, 0x08, 0x00, 0xc0, 0x87, 0x4b, 0xa9, 0xf2, 0x40, 0x00,
   0x47, 0x91, 0x04, 0x60, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x45,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xc5, 0x41, 0x20, 0x47, 0x4b,
   0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf9, 0x88, 0x00, 0x00, 0xc7, 0xa0, 0x00,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f,
   0x87, 0xc8, 0xe7, 0x80, 0x10, 0xc6, 0x64, 0x00, 0x42, 0xc0, 0x21, 0x20, 0x03,
   0x80, 0x6a, 0xff, 0xf1, 0xff, 0x04, 0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_8X_6_buffers_const_dest[14] = {
   37, 36, 39, 38, 41, 40, 43, 42, 45, 44, 47, 46, 4294967295, 4294967295,
};

static const struct pvr_shader_factory_info spm_load_8X_6_buffers_info = {
   16,
   64,
   0,
   0,
   0,
   sizeof(spm_load_8X_6_buffers_shader_code),
   spm_load_8X_6_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_8X_6_buffers_const_dest,
   14,
   NULL,
   0,
};

static const uint8_t spm_load_8X_7_buffers_shader_code[6000] = {
   0x67, 0xf2, 0x40, 0x00, 0x40, 0x80, 0x80, 0x40, 0x00, 0x35, 0x80, 0x90, 0x42,
   0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0,
   0x86, 0x45, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x00, 0x60, 0x01, 0x00, 0x80,
   0x40, 0x00, 0x00, 0x80, 0x80, 0x43, 0xff, 0x26, 0x06, 0xe3, 0xc3, 0x41, 0x20,
   0x46, 0x45, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc2,
   0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x46, 0x12, 0xd3, 0x3f, 0x80, 0xc2,
   0x83, 0x10, 0x00, 0x00, 0x42, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32,
   0x80, 0xb3, 0x08, 0x00, 0xc0, 0x86, 0x45, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91,
   0x08, 0x40, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x43, 0xff, 0x26,
   0x06, 0xe3, 0xc3, 0x41, 0x20, 0x46, 0x45, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20,
   0xf2, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x46,
   0x12, 0xd3, 0x3f, 0x80, 0xc5, 0x83, 0x10, 0x00, 0x00, 0x42, 0xff, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x86, 0x45, 0xa9,
   0xf2, 0x40, 0x00, 0x47, 0x91, 0x0c, 0x40, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
   0x80, 0x80, 0x43, 0xff, 0x26, 0x06, 0xe3, 0xc3, 0x41, 0x20, 0x46, 0x45, 0xc0,
   0x80, 0x41, 0xff, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3,
   0x08, 0x00, 0xc0, 0x82, 0x41, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x08, 0x40,
   0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3,
   0xc0, 0x41, 0x20, 0x42, 0x41, 0xc0, 0x83, 0x44, 0xff, 0x55, 0x20, 0xf1, 0x88,
   0x00, 0x00, 0xc0, 0xa3, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3,
   0xb6, 0x41, 0xa0, 0x43, 0x08, 0x44, 0xc0, 0x83, 0x44, 0x55, 0x20, 0xf1, 0x84,
   0x00, 0x00, 0xc2, 0xa3, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x58, 0x20, 0xe4,
   0x5e, 0x04, 0x84, 0x60, 0x80, 0x20, 0x88, 0xb5, 0xe2, 0x80, 0x08, 0x00, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x86,
   0x4b, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x00, 0xc0, 0x01, 0x00, 0x80, 0x40,
   0x00, 0x00, 0x80, 0x80, 0x4a, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3,
   0xca, 0x41, 0x20, 0x46, 0x4b, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf2, 0x92,
   0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x34, 0x22, 0x20,
   0x00, 0x00, 0x00, 0x45, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80,
   0xb3, 0x08, 0x00, 0xc0, 0x83, 0x42, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x08,
   0x40, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x41, 0xff, 0x26, 0x06,
   0xe3, 0xc1, 0x41, 0x20, 0x43, 0x42, 0xc0, 0x87, 0x48, 0xff, 0x55, 0x20, 0xf1,
   0x88, 0x00, 0x00, 0xc1, 0xa7, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06,
   0xe3, 0xb6, 0x41, 0xa0, 0x47, 0x08, 0x48, 0xc0, 0x87, 0x48, 0x55, 0x20, 0xf1,
   0x84, 0x00, 0x00, 0xc3, 0xa7, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x58, 0x20,
   0xe4, 0x5e, 0x04, 0x88, 0x61, 0x80, 0x20, 0x88, 0xb5, 0xe8, 0x80, 0x08, 0x00,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80,
   0xb3, 0x08, 0x00, 0xc0, 0x83, 0x42, 0x26, 0x06, 0xe3, 0x88, 0x41, 0x20, 0x43,
   0x42, 0xc0, 0x86, 0x47, 0xff, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc8, 0xa6,
   0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x46,
   0x08, 0x47, 0xc0, 0x88, 0x49, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xca, 0xa8,
   0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00,
   0xc0, 0x83, 0x42, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x08, 0x40, 0x01, 0x00,
   0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x41, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26,
   0x06, 0xe3, 0xc1, 0x41, 0x20, 0x43, 0x42, 0xc0, 0x87, 0x48, 0xff, 0x55, 0x20,
   0xf1, 0x88, 0x00, 0x00, 0xc1, 0xa7, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26,
   0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x47, 0x08, 0x48, 0xc0, 0x87, 0x48, 0x55, 0x20,
   0xf1, 0x84, 0x00, 0x00, 0xc3, 0xa7, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x58,
   0x20, 0xe4, 0x5e, 0x04, 0x8c, 0x61, 0x80, 0x20, 0x88, 0xb5, 0xe8, 0x80, 0x08,
   0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32,
   0x80, 0xb3, 0x08, 0x00, 0xc0, 0x83, 0x42, 0x26, 0x06, 0xe3, 0xba, 0x41, 0xa0,
   0x43, 0x08, 0x42, 0xc0, 0x86, 0x47, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc8,
   0xa6, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0,
   0x46, 0x08, 0x47, 0xc0, 0x88, 0x49, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xca,
   0xa8, 0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5a, 0xa1, 0x24, 0x80, 0xa5, 0x08,
   0x00, 0x30, 0x83, 0x42, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x86, 0x4a, 0xa9, 0xf2, 0x40, 0x00,
   0x47, 0x91, 0x08, 0xa0, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x44,
   0xff, 0x26, 0x06, 0xe3, 0xc4, 0x41, 0x20, 0x46, 0x4a, 0xc0, 0x80, 0x41, 0xff,
   0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x25, 0x02, 0x87, 0xa9, 0x08, 0x00, 0x00, 0x00, 0x41, 0xff, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x84, 0x46, 0xa9,
   0xf2, 0x40, 0x00, 0x47, 0x91, 0x08, 0xa0, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
   0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x44, 0x46, 0xc0,
   0x82, 0x43, 0xff, 0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x42, 0x08, 0x43,
   0xc0, 0x82, 0x43, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc8, 0xa2, 0x00, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0,
   0xa8, 0x61, 0x80, 0x3d, 0x08, 0xc5, 0x68, 0x00, 0x46, 0x00, 0x84, 0x43, 0xff,
   0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3,
   0x08, 0x00, 0xc0, 0x86, 0x4b, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0x00, 0xc0,
   0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41,
   0x20, 0x46, 0x4b, 0xc0, 0x81, 0x42, 0xff, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00,
   0xc3, 0xa1, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b,
   0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0x30, 0x83, 0x42, 0x27, 0x06, 0xe3, 0x90,
   0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x86, 0x4a, 0xa9, 0xf2, 0x40,
   0x00, 0x47, 0x91, 0x0c, 0xa0, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80,
   0x44, 0xff, 0x26, 0x06, 0xe3, 0xc4, 0x41, 0x20, 0x46, 0x4a, 0xc0, 0x80, 0x41,
   0xff, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x88, 0xf2,
   0x40, 0x00, 0x47, 0x90, 0xf4, 0x1f, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x44,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xc4, 0x41, 0x20, 0x40, 0x41,
   0xc0, 0x81, 0x42, 0xff, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80,
   0xb3, 0x08, 0x00, 0xc0, 0x84, 0x41, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x0c,
   0xa0, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06,
   0xe3, 0xc0, 0x41, 0x20, 0x44, 0x41, 0xc0, 0x82, 0x43, 0xff, 0x55, 0x20, 0xf1,
   0x84, 0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90,
   0xf4, 0x1f, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x42, 0x43, 0xc0, 0x82, 0x43, 0xff,
   0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc7, 0xa2, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xc5, 0x68, 0x00, 0x46, 0x00,
   0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x82,
   0x43, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80,
   0xb3, 0x08, 0x00, 0xc0, 0x86, 0x4a, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x00,
   0xc0, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x44, 0xff, 0x26, 0x06,
   0xe3, 0xc4, 0x41, 0x20, 0x46, 0x4a, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf2,
   0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x83, 0x42, 0x26,
   0x06, 0xe3, 0x8c, 0x41, 0x20, 0x43, 0x42, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20,
   0xf1, 0x84, 0x00, 0x00, 0xcf, 0xa0, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x83, 0x42, 0x02, 0x80, 0x6a, 0xff,
   0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x00, 0xc0, 0x01, 0x00, 0x80, 0x40, 0x00,
   0x00, 0x80, 0x80, 0x41, 0xff, 0x26, 0x06, 0xe3, 0xc1, 0x41, 0x20, 0x43, 0x42,
   0xc0, 0x87, 0x48, 0xff, 0x55, 0x20, 0xf1, 0x90, 0x00, 0x00, 0xc1, 0xa7, 0x00,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f,
   0x87, 0xc4, 0xef, 0x80, 0x10, 0xc5, 0x63, 0x00, 0x41, 0xc0, 0x88, 0x49, 0x27,
   0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x24, 0x80, 0xa5, 0x08, 0x00, 0xc0, 0x86, 0x47,
   0x02, 0x80, 0x6a, 0xff, 0x45, 0x12, 0xd3, 0x3f, 0xa7, 0x08, 0x00, 0x00, 0x00,
   0x41, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa6, 0x61, 0x80,
   0x3a, 0x08, 0xc5, 0x68, 0x00, 0x46, 0x00, 0x84, 0x43, 0xff, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x81, 0x42, 0x55, 0x20,
   0xfa, 0x8a, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x82, 0x43,
   0x55, 0x20, 0xf9, 0x8c, 0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff, 0x25, 0x02, 0x87,
   0xab, 0x08, 0x00, 0x00, 0x00, 0x41, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e,
   0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x61, 0x80, 0x3d, 0x08, 0xc5,
   0x68, 0x00, 0x46, 0x00, 0x84, 0x43, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3,
   0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x8b, 0x40, 0x26, 0x06, 0xe3, 0xbd, 0x41,
   0xa0, 0x4b, 0x08, 0x40, 0xc0, 0x81, 0x42, 0x55, 0x20, 0xfa, 0x8a, 0x38, 0x00,
   0xc3, 0xa1, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b,
   0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x87, 0x48, 0x66, 0x28, 0xf2, 0xa6,
   0xc8, 0x03, 0x00, 0xc5, 0x69, 0x00, 0x47, 0x00, 0x02, 0x80, 0xea, 0xff, 0x27,
   0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0, 0x82, 0x43,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x8a,
   0x44, 0x26, 0x06, 0xe3, 0x88, 0x41, 0x20, 0x4a, 0x44, 0xc0, 0x80, 0x41, 0xff,
   0x55, 0x20, 0xfa, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea,
   0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0,
   0x82, 0x41, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0x88, 0x41, 0x20, 0x42,
   0x41, 0xc0, 0x87, 0x48, 0xff, 0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc1, 0xa7,
   0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x47,
   0x08, 0x48, 0xc0, 0x87, 0x48, 0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc3, 0xa7,
   0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00,
   0xc0, 0x8b, 0x4a, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xbc, 0x41, 0xa0,
   0x4b, 0x08, 0x4a, 0xc0, 0x86, 0x47, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc0,
   0xa6, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03,
   0xd0, 0x3f, 0x87, 0xc4, 0xe0, 0x80, 0x10, 0xc5, 0x63, 0x00, 0x41, 0xc0, 0x88,
   0x49, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x26, 0x80, 0xa7, 0x08, 0x00, 0xc0,
   0x86, 0x47, 0x02, 0x80, 0x6a, 0xff, 0x25, 0x02, 0x87, 0xa9, 0x08, 0x00, 0x00,
   0x00, 0x41, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xa8,
   0x61, 0x80, 0x3a, 0x08, 0xc5, 0x68, 0x00, 0x46, 0x00, 0x84, 0x43, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x8b, 0x40,
   0x26, 0x06, 0xe3, 0xbb, 0x41, 0xa0, 0x4b, 0x08, 0x40, 0xc0, 0x81, 0x42, 0x55,
   0x20, 0xfa, 0x8a, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x45, 0x12, 0xd3, 0x3f,
   0xad, 0x08, 0x00, 0x00, 0x00, 0x4e, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x81, 0x40, 0x26, 0x06,
   0xe3, 0xbb, 0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0, 0x82, 0x43, 0x55, 0x20, 0xf9,
   0x8c, 0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e,
   0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x6e, 0x80, 0x3d, 0x08, 0xc5,
   0x68, 0x00, 0x46, 0x00, 0x84, 0x43, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3,
   0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x8c, 0x4b, 0xa9, 0xf2, 0x40, 0x00, 0x47,
   0x91, 0x04, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff,
   0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x4c, 0x4b, 0xc0, 0x81, 0x42, 0xff, 0x55,
   0x20, 0xfa, 0x8a, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x28, 0x80, 0xa9, 0x08, 0x00, 0xc0, 0x87,
   0x48, 0x66, 0x28, 0xf2, 0xa6, 0xc8, 0x03, 0x00, 0xc5, 0x69, 0x00, 0x47, 0x00,
   0x02, 0x80, 0xea, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x28, 0x80, 0xa9,
   0x08, 0x00, 0xc0, 0x82, 0x43, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80,
   0xb3, 0x08, 0x00, 0xc0, 0x8a, 0x44, 0x26, 0x06, 0xe3, 0xba, 0x41, 0xa0, 0x4a,
   0x08, 0x44, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xfa, 0x8a, 0x38, 0x00, 0xc2, 0xa0,
   0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32,
   0x80, 0xb3, 0x08, 0x00, 0xc0, 0x83, 0x42, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91,
   0x08, 0x40, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x41, 0xff, 0x02,
   0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xc1, 0x41, 0x20, 0x43, 0x42, 0xc0, 0x87,
   0x48, 0xff, 0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc1, 0xa7, 0x00, 0xff, 0x02,
   0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x47, 0x08, 0x48, 0xc0,
   0x87, 0x48, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc3, 0xa7, 0x00, 0xff, 0x02,
   0x80, 0x6a, 0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x90, 0x61, 0x80, 0x20, 0x88,
   0xb5, 0xe8, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x80, 0x43, 0xa9, 0xf2,
   0x40, 0x00, 0x47, 0x91, 0x0c, 0x60, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80,
   0x80, 0x42, 0xff, 0x26, 0x06, 0xe3, 0xc2, 0x41, 0x20, 0x40, 0x43, 0xc0, 0x86,
   0x47, 0xff, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc8, 0xa6, 0x00, 0xff, 0x88,
   0xf2, 0x40, 0x00, 0x47, 0x90, 0xf4, 0x1f, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80,
   0x42, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xc2, 0x41, 0x20, 0x46,
   0x47, 0xc0, 0x87, 0x48, 0xff, 0x55, 0x20, 0xf2, 0x8e, 0x38, 0x00, 0xc9, 0xa7,
   0x00, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x2e, 0x80, 0xaf, 0x08, 0x00,
   0x30, 0x83, 0x42, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3,
   0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x86, 0x4a, 0xa9, 0xf2, 0x40, 0x00, 0x47,
   0x91, 0x00, 0x20, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x44, 0xff,
   0x26, 0x06, 0xe3, 0xc4, 0x41, 0x20, 0x46, 0x4a, 0xc0, 0x80, 0x41, 0xff, 0x55,
   0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x81,
   0x40, 0x26, 0x06, 0xe3, 0xba, 0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0, 0x82, 0x43,
   0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x42, 0x08, 0x43, 0xc0, 0x82, 0x43,
   0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc8, 0xa2, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x88, 0x6a, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x49, 0xc5, 0x68,
   0x00, 0x46, 0x00, 0x43, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x86, 0x44, 0x88, 0xf2, 0x40, 0x00,
   0x47, 0x90, 0x08, 0xc0, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26,
   0x06, 0xe3, 0xc0, 0x41, 0x20, 0x46, 0x44, 0xc0, 0x81, 0x42, 0xff, 0x55, 0x20,
   0xf2, 0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x84, 0x41,
   0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0x00, 0xc0, 0x80, 0x40, 0x00, 0x00, 0x80,
   0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x44, 0x41, 0xc0, 0x82,
   0x43, 0xff, 0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff, 0x25,
   0x02, 0x87, 0xab, 0x08, 0x00, 0x00, 0x00, 0x41, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xaa, 0x61, 0x80, 0x3a,
   0x08, 0xc5, 0x68, 0x00, 0x46, 0x00, 0x84, 0x43, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x86,
   0x4b, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x04, 0x60, 0x01, 0x00, 0x80, 0x40,
   0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x46,
   0x4b, 0xc0, 0x81, 0x42, 0xff, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc3, 0xa1,
   0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5d, 0xa1, 0x2e,
   0x80, 0xaf, 0x08, 0x00, 0x30, 0x83, 0x42, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3,
   0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x86, 0x4a, 0x88, 0xf2, 0x40, 0x00, 0x47,
   0x90, 0x0c, 0xc0, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x44, 0xff, 0x26, 0x06,
   0xe3, 0xc4, 0x41, 0x20, 0x46, 0x4a, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf2,
   0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90,
   0xf4, 0x1f, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x44, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x26, 0x06, 0xe3, 0xc4, 0x41, 0x20, 0x40, 0x41, 0xc0, 0x81, 0x42, 0xff,
   0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0,
   0x83, 0x42, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x04, 0x60, 0x01, 0x00, 0x80,
   0x40, 0x00, 0x00, 0x80, 0x80, 0x41, 0xff, 0x26, 0x06, 0xe3, 0xc1, 0x41, 0x20,
   0x43, 0x42, 0xc0, 0x87, 0x48, 0xff, 0x55, 0x20, 0xf1, 0x8c, 0x00, 0x00, 0xc1,
   0xa7, 0x00, 0xff, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0xfc, 0x1f, 0x80, 0x40,
   0x00, 0x00, 0x80, 0x80, 0x44, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3,
   0xc4, 0x41, 0x20, 0x47, 0x48, 0xc0, 0x87, 0x48, 0xff, 0x55, 0x20, 0xf1, 0x84,
   0x00, 0x00, 0xc4, 0xa7, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a, 0xf2,
   0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x44, 0xc5, 0x63, 0x00, 0x41, 0x00, 0x48,
   0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x86,
   0x47, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80,
   0xb3, 0x08, 0x00, 0xc0, 0x84, 0x43, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x08,
   0x80, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x42, 0xff, 0x26, 0x06,
   0xe3, 0xc2, 0x41, 0x20, 0x44, 0x43, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf1,
   0x84, 0x00, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a,
   0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x42, 0xc5, 0x68, 0x00, 0x46, 0x00,
   0x43, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0,
   0x84, 0x40, 0x26, 0x06, 0xe3, 0xbe, 0x41, 0xa0, 0x44, 0x08, 0x40, 0xc0, 0x81,
   0x42, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02, 0x80,
   0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00,
   0xc0, 0x81, 0x40, 0x26, 0x06, 0xe3, 0xbd, 0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0,
   0x82, 0x43, 0x55, 0x20, 0xf9, 0x88, 0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff, 0x02,
   0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x42, 0x08, 0x43, 0xc0,
   0x82, 0x43, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc8, 0xa2, 0x00, 0xff, 0x25,
   0x02, 0x87, 0xb1, 0x08, 0x00, 0x00, 0x00, 0x41, 0xff, 0x02, 0x80, 0xea, 0xff,
   0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xb0, 0x61, 0x80, 0x3b,
   0x08, 0xc5, 0x68, 0x00, 0x46, 0x00, 0x84, 0x43, 0xff, 0x27, 0x06, 0xe3, 0x90,
   0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x8c, 0x4b, 0x88, 0xf2, 0x40,
   0x00, 0x47, 0x90, 0x08, 0xe0, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff,
   0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x4c, 0x4b, 0xc0, 0x81, 0x42, 0xff, 0x55,
   0x20, 0xfa, 0x8a, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff,
   0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2a, 0x80, 0xab, 0x08, 0x00, 0xc0, 0x82,
   0x43, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80,
   0xb3, 0x08, 0x00, 0xc0, 0x86, 0x4a, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x0c,
   0x60, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x44, 0xff, 0x26, 0x06,
   0xe3, 0xc4, 0x41, 0x20, 0x46, 0x4a, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf2,
   0x86, 0x38, 0x00, 0xc2, 0xa0, 0x00, 0xff, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90,
   0xf4, 0x1f, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x44, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x26, 0x06, 0xe3, 0xc4, 0x41, 0x20, 0x40, 0x41, 0xc0, 0x81, 0x42, 0xff,
   0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0,
   0x83, 0x42, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x0c, 0x60, 0x01, 0x00, 0x80,
   0x40, 0x00, 0x00, 0x80, 0x80, 0x41, 0xff, 0x26, 0x06, 0xe3, 0xc1, 0x41, 0x20,
   0x43, 0x42, 0xc0, 0x87, 0x48, 0xff, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc1,
   0xa7, 0x00, 0xff, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0xf4, 0x1f, 0x80, 0x40,
   0x00, 0x00, 0x80, 0x80, 0x42, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3,
   0xc2, 0x41, 0x20, 0x47, 0x48, 0xc0, 0x87, 0x48, 0xff, 0x55, 0x20, 0xf1, 0x88,
   0x00, 0x00, 0xc2, 0xa7, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2,
   0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xac, 0x6e, 0x80, 0x3a, 0x08, 0xc5, 0x63,
   0x00, 0x41, 0x00, 0x88, 0x47, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5b, 0xa1, 0x2c,
   0x80, 0xad, 0x08, 0x00, 0xc0, 0x8d, 0x4e, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e,
   0xe3, 0x81, 0x5c, 0xa1, 0x2c, 0x80, 0xad, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x86, 0x4a,
   0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x08, 0x00, 0x02, 0x00, 0x80, 0x40, 0x00,
   0x00, 0x80, 0x80, 0x44, 0xff, 0x26, 0x06, 0xe3, 0xc4, 0x41, 0x20, 0x46, 0x4a,
   0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc2, 0xa0, 0x00,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x0e, 0xe3, 0x81, 0x5c, 0xa1, 0x2e, 0x80,
   0xaf, 0x08, 0x00, 0xc0, 0x82, 0x43, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32,
   0x80, 0xb3, 0x08, 0x00, 0xc0, 0x8a, 0x44, 0x26, 0x06, 0xe3, 0xbf, 0x41, 0xa0,
   0x4a, 0x08, 0x44, 0xc0, 0x80, 0x41, 0x55, 0x20, 0xf2, 0x8a, 0x38, 0x00, 0xc2,
   0xa0, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3,
   0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x82, 0x41, 0xa9, 0xf2, 0x40, 0x00, 0x47,
   0x91, 0x08, 0x40, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff,
   0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x42, 0x41, 0xc0, 0x83, 0x44, 0xff, 0x55,
   0x20, 0xf1, 0x88, 0x00, 0x00, 0xc0, 0xa3, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x43, 0x08, 0x44, 0xc0, 0x83, 0x44, 0x55,
   0x20, 0xf1, 0x84, 0x00, 0x00, 0xc2, 0xa3, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff,
   0x58, 0x20, 0xe4, 0x5e, 0x04, 0x94, 0x60, 0x80, 0x20, 0x88, 0xb5, 0xe9, 0x80,
   0x08, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8b, 0x6e, 0xf2, 0xa6, 0xc8, 0x03,
   0xd0, 0x3f, 0x87, 0xca, 0x40, 0xa0, 0x2f, 0x90, 0xc5, 0x69, 0x00, 0x47, 0xc0,
   0x8f, 0x43, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03,
   0xd0, 0x3f, 0x87, 0xcb, 0xec, 0x80, 0x10, 0xc5, 0x6f, 0x00, 0x4d, 0xc0, 0x88,
   0x49, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0,
   0x80, 0x44, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x00, 0x20, 0x02, 0x00, 0x80,
   0x40, 0x00, 0x00, 0x80, 0x80, 0x42, 0xff, 0x26, 0x06, 0xe3, 0xc2, 0x41, 0x20,
   0x40, 0x44, 0xc0, 0x86, 0x47, 0xff, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc8,
   0xa6, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08,
   0x00, 0xc0, 0x84, 0x42, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x0c, 0x00, 0x01,
   0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x41, 0xff, 0x02, 0x80, 0xea, 0xff,
   0x26, 0x06, 0xe3, 0xc1, 0x41, 0x20, 0x44, 0x42, 0xc0, 0x87, 0x48, 0xff, 0x55,
   0x20, 0xfa, 0x86, 0x38, 0x00, 0xc9, 0xa7, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90,
   0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x84, 0x41, 0xa9, 0xf2, 0x40,
   0x00, 0x47, 0x91, 0x08, 0x00, 0x02, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80,
   0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x44, 0x41, 0xc0, 0x8a, 0x4b,
   0xff, 0x55, 0x20, 0xf9, 0x88, 0x00, 0x00, 0xc6, 0xaa, 0x00, 0xff, 0x02, 0x80,
   0xea, 0xff, 0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x4a, 0x08, 0x4b, 0xc0, 0x8a,
   0x4b, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc8, 0xaa, 0x00, 0xff, 0x02, 0x80,
   0xea, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xae, 0x63,
   0x80, 0x3a, 0x08, 0xc5, 0x68, 0x00, 0x46, 0x00, 0x8a, 0x49, 0xff, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x83, 0x42, 0xa9,
   0xf2, 0x40, 0x00, 0x47, 0x91, 0x00, 0xe0, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
   0x80, 0x80, 0x41, 0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xc1, 0x41,
   0x20, 0x43, 0x42, 0xc0, 0x87, 0x48, 0xff, 0x55, 0x20, 0xfa, 0x8a, 0x38, 0x00,
   0xc9, 0xa7, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3,
   0x08, 0x00, 0xc0, 0x84, 0x41, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x04, 0x00,
   0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3,
   0xc0, 0x41, 0x20, 0x44, 0x41, 0xc0, 0x82, 0x43, 0xff, 0x55, 0x20, 0xf9, 0x8c,
   0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff, 0x25, 0x02, 0x87, 0xb1, 0x08, 0x00, 0x00,
   0x00, 0x41, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03,
   0xd3, 0x3f, 0xe0, 0xb0, 0x61, 0x80, 0x3c, 0x08, 0xc5, 0x68, 0x00, 0x46, 0x00,
   0x84, 0x43, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3,
   0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x86, 0x4b, 0xa9, 0xf2, 0x40, 0x00, 0x47,
   0x91, 0x0c, 0x80, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff,
   0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x46, 0x4b, 0xc0, 0x81, 0x42, 0xff, 0x55,
   0x20, 0xfa, 0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x88, 0xf2, 0x40, 0x00,
   0x47, 0x90, 0xf4, 0x1f, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x02,
   0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x41, 0x42, 0xc0, 0x82,
   0x43, 0xff, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc4, 0xa2, 0x00, 0xff, 0x02,
   0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08,
   0x00, 0xc0, 0x83, 0x42, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x08, 0x40, 0x01,
   0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x41, 0xff, 0x26, 0x06, 0xe3, 0xc1,
   0x41, 0x20, 0x43, 0x42, 0xc0, 0x87, 0x48, 0xff, 0x55, 0x20, 0xf9, 0x88, 0x00,
   0x00, 0xc1, 0xa7, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xb6,
   0x41, 0xa0, 0x47, 0x08, 0x48, 0xc0, 0x87, 0x48, 0x55, 0x20, 0xf9, 0x84, 0x00,
   0x00, 0xc3, 0xa7, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x58, 0x20, 0xec, 0x5e,
   0x04, 0x98, 0x61, 0x80, 0x20, 0x88, 0xb5, 0xe8, 0x80, 0x08, 0x00, 0xff, 0x02,
   0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08,
   0x00, 0xc0, 0x80, 0x43, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x08, 0xe0, 0x01,
   0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x42, 0xff, 0x26, 0x06, 0xe3, 0xc2,
   0x41, 0x20, 0x40, 0x43, 0xc0, 0x86, 0x47, 0xff, 0x55, 0x20, 0xfa, 0x8a, 0x38,
   0x00, 0xc8, 0xa6, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xb6,
   0x41, 0xa0, 0x46, 0x08, 0x47, 0xc0, 0x88, 0x49, 0x55, 0x20, 0xfa, 0x8a, 0x38,
   0x00, 0xca, 0xa8, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80,
   0xb3, 0x08, 0x00, 0xc0, 0x84, 0x41, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x00,
   0xe0, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06,
   0xe3, 0xc0, 0x41, 0x20, 0x44, 0x41, 0xc0, 0x82, 0x43, 0xff, 0x55, 0x20, 0xf9,
   0x90, 0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x88, 0x6a,
   0xfa, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x49, 0xc5, 0x68, 0x00, 0x46, 0x00,
   0x43, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80,
   0xb3, 0x08, 0x00, 0xc0, 0x86, 0x44, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x08,
   0x20, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06,
   0xe3, 0xc0, 0x41, 0x20, 0x46, 0x44, 0xc0, 0x81, 0x42, 0xff, 0x55, 0x20, 0xfa,
   0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x84, 0x41, 0xa9,
   0xf2, 0x40, 0x00, 0x47, 0x91, 0x00, 0x20, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
   0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x44, 0x41, 0xc0,
   0x82, 0x43, 0xff, 0x55, 0x20, 0xf9, 0x8c, 0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff,
   0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3,
   0x08, 0x00, 0xc0, 0x84, 0x43, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x00, 0x00,
   0x02, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x42, 0xff, 0x26, 0x06, 0xe3,
   0xc2, 0x41, 0x20, 0x44, 0x43, 0xc0, 0x80, 0x41, 0xff, 0x55, 0x20, 0xf9, 0x88,
   0x00, 0x00, 0xc1, 0xa0, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8a, 0x6e, 0xfa,
   0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc1, 0xe2, 0x80, 0x10, 0xc5, 0x68, 0x00,
   0x46, 0xc0, 0x84, 0x43, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x86, 0x4b, 0x88, 0xf2, 0x40, 0x00,
   0x47, 0x90, 0x04, 0xe0, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26,
   0x06, 0xe3, 0xc0, 0x41, 0x20, 0x46, 0x4b, 0xc0, 0x81, 0x42, 0xff, 0x55, 0x20,
   0xfa, 0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x86, 0x41,
   0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0x0c, 0xa0, 0x80, 0x40, 0x00, 0x00, 0x80,
   0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x46, 0x41, 0xc0, 0x82,
   0x43, 0xff, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00, 0xc4, 0xa2, 0x00, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x81, 0x40,
   0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xbf, 0x41, 0xa0, 0x41, 0x08, 0x40,
   0xc0, 0x82, 0x43, 0x55, 0x20, 0xf9, 0x8c, 0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff,
   0x25, 0x02, 0x87, 0xb1, 0x08, 0x00, 0x00, 0x00, 0x41, 0xff, 0x02, 0x80, 0xea,
   0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xb0, 0x61, 0x80,
   0x3a, 0x08, 0xc5, 0x68, 0x00, 0x46, 0x00, 0x84, 0x43, 0xff, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x8b, 0x40, 0x26, 0x06,
   0xe3, 0xb9, 0x41, 0xa0, 0x4b, 0x08, 0x40, 0xc0, 0x81, 0x42, 0x55, 0x20, 0xfa,
   0x8a, 0x38, 0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x84, 0x41, 0x88,
   0xf2, 0x40, 0x00, 0x47, 0x90, 0x0c, 0xc0, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80,
   0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x44, 0x41, 0xc0, 0x82, 0x43,
   0xff, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff, 0x88, 0xf2,
   0x40, 0x00, 0x47, 0x90, 0xf4, 0x1f, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40,
   0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x42, 0x43,
   0xc0, 0x82, 0x43, 0xff, 0x55, 0x20, 0xf9, 0x88, 0x00, 0x00, 0xc7, 0xa2, 0x00,
   0xff, 0x25, 0x02, 0x87, 0xb1, 0x08, 0x00, 0x00, 0x00, 0x41, 0xff, 0x02, 0x80,
   0xea, 0xff, 0x8b, 0x6e, 0xfa, 0xa6, 0xc8, 0x03, 0xd3, 0x3f, 0xe0, 0xb0, 0x61,
   0x80, 0x3d, 0x08, 0xc5, 0x68, 0x00, 0x46, 0x00, 0x84, 0x43, 0xff, 0x02, 0x80,
   0xea, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00,
   0xc0, 0x86, 0x4b, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x0c, 0x20, 0x01, 0x00,
   0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41,
   0x20, 0x46, 0x4b, 0xc0, 0x81, 0x42, 0xff, 0x55, 0x20, 0xfa, 0x86, 0x38, 0x00,
   0xc3, 0xa1, 0x00, 0xff, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0xf4, 0x1f, 0x80,
   0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06,
   0xe3, 0xc0, 0x41, 0x20, 0x41, 0x42, 0xc0, 0x82, 0x43, 0xff, 0x55, 0x20, 0xfa,
   0x86, 0x38, 0x00, 0xc4, 0xa2, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x83, 0x42, 0xa9,
   0xf2, 0x40, 0x00, 0x47, 0x91, 0x08, 0x40, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
   0x80, 0x80, 0x41, 0xff, 0x26, 0x06, 0xe3, 0xc1, 0x41, 0x20, 0x43, 0x42, 0xc0,
   0x87, 0x48, 0xff, 0x55, 0x20, 0xf9, 0x88, 0x00, 0x00, 0xc1, 0xa7, 0x00, 0xff,
   0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x47, 0x08, 0x48,
   0xc0, 0x87, 0x48, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc3, 0xa7, 0x00, 0xff,
   0x02, 0x80, 0xea, 0xff, 0x58, 0x20, 0xec, 0x5e, 0x04, 0x9c, 0x61, 0x80, 0x20,
   0x88, 0xb5, 0xe8, 0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x83, 0x42, 0x26,
   0x06, 0xe3, 0xb7, 0x41, 0xa0, 0x43, 0x08, 0x42, 0xc0, 0x86, 0x47, 0x55, 0x20,
   0xf2, 0x92, 0x38, 0x00, 0xc8, 0xa6, 0x00, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x82, 0x41, 0xa9, 0xf2, 0x40, 0x00,
   0x47, 0x91, 0x08, 0x40, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40,
   0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x42, 0x41, 0xc0, 0x83, 0x44, 0xff,
   0x55, 0x20, 0xf9, 0x88, 0x00, 0x00, 0xc0, 0xa3, 0x00, 0xff, 0x02, 0x80, 0xea,
   0xff, 0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x43, 0x08, 0x44, 0xc0, 0x83, 0x44,
   0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc2, 0xa3, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x58, 0x20, 0xe4, 0x5e, 0x04, 0x80, 0x60, 0x80, 0x20, 0x88, 0xb5, 0xeb,
   0x80, 0x08, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50,
   0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x81, 0x40, 0x26, 0x06, 0xe3, 0xb9,
   0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0, 0x82, 0x43, 0x55, 0x20, 0xf1, 0x88, 0x00,
   0x00, 0xc6, 0xa2, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xb6,
   0x41, 0xa0, 0x42, 0x08, 0x43, 0xc0, 0x82, 0x43, 0x55, 0x20, 0xf1, 0x88, 0x00,
   0x00, 0xc8, 0xa2, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x88, 0x6a, 0xf2, 0xa6,
   0xc8, 0x03, 0xd0, 0x3f, 0x87, 0x49, 0xc5, 0x68, 0x00, 0x46, 0x00, 0x43, 0x02,
   0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08,
   0x00, 0xc0, 0x86, 0x44, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x00, 0x00, 0x01,
   0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0,
   0x41, 0x20, 0x46, 0x44, 0xc0, 0x81, 0x42, 0xff, 0x55, 0x20, 0xf2, 0x86, 0x38,
   0x00, 0xc3, 0xa1, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90,
   0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x81, 0x40, 0x26, 0x06, 0xe3,
   0xb8, 0x41, 0xa0, 0x41, 0x08, 0x40, 0xc0, 0x83, 0x44, 0x55, 0x20, 0xf1, 0x88,
   0x00, 0x00, 0xc9, 0xa3, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3,
   0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x84, 0x41, 0x88, 0xf2,
   0x40, 0x00, 0x47, 0x90, 0x08, 0xe0, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40,
   0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x44, 0x41, 0xc0, 0x82, 0x43, 0xff,
   0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc6, 0xa2, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x26, 0x06, 0xe3, 0xb6, 0x41, 0xa0, 0x42, 0x08, 0x43, 0xc0, 0x82, 0x43,
   0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc8, 0xa2, 0x00, 0xff, 0x02, 0x80, 0x6a,
   0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xc9, 0xea, 0x80,
   0x10, 0xc5, 0x68, 0x00, 0x46, 0xc0, 0x83, 0x44, 0x02, 0x80, 0x6a, 0xff, 0x27,
   0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x82, 0x46,
   0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x04, 0xa0, 0x01, 0x00, 0x80, 0x40, 0x00,
   0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x42, 0x46,
   0xc0, 0x81, 0x42, 0xff, 0x55, 0x20, 0xf2, 0x86, 0x38, 0x00, 0xc3, 0xa1, 0x00,
   0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80,
   0xb3, 0x08, 0x00, 0xc0, 0x86, 0x41, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x04,
   0x40, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06,
   0xe3, 0xc0, 0x41, 0x20, 0x46, 0x41, 0xc0, 0x82, 0x43, 0xff, 0x55, 0x20, 0xf2,
   0x86, 0x38, 0x00, 0xc4, 0xa2, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x27, 0x06,
   0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0, 0x84, 0x41, 0xa9,
   0xf2, 0x40, 0x00, 0x47, 0x91, 0x0c, 0x80, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
   0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20, 0x44, 0x41, 0xc0,
   0x82, 0x43, 0xff, 0x55, 0x20, 0xf1, 0x84, 0x00, 0x00, 0xc7, 0xa2, 0x00, 0xff,
   0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0xf4, 0x1f, 0x80, 0x40, 0x00, 0x00, 0x80,
   0x80, 0x40, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20,
   0x42, 0x43, 0xc0, 0x82, 0x43, 0xff, 0x55, 0x20, 0xf1, 0x88, 0x00, 0x00, 0xc8,
   0xa2, 0x00, 0xff, 0x02, 0x80, 0x6a, 0xff, 0x8a, 0x6e, 0xf2, 0xa6, 0xc8, 0x03,
   0xd0, 0x3f, 0x87, 0xce, 0xed, 0x80, 0x10, 0xc5, 0x69, 0x00, 0x47, 0xc0, 0x23,
   0x22, 0x27, 0x06, 0xe3, 0x90, 0x50, 0xa3, 0x32, 0x80, 0xb3, 0x08, 0x00, 0xc0,
   0x84, 0x41, 0xa9, 0xf2, 0x40, 0x00, 0x47, 0x91, 0x0c, 0x20, 0x01, 0x00, 0x80,
   0x40, 0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x26, 0x06, 0xe3, 0xc0, 0x41, 0x20,
   0x44, 0x41, 0xc0, 0x82, 0x43, 0xff, 0x55, 0x20, 0xf9, 0x84, 0x00, 0x00, 0xc6,
   0xa2, 0x00, 0xff, 0x88, 0xf2, 0x40, 0x00, 0x47, 0x90, 0xf4, 0x1f, 0x80, 0x40,
   0x00, 0x00, 0x80, 0x80, 0x40, 0xff, 0x02, 0x80, 0xea, 0xff, 0x26, 0x06, 0xe3,
   0xc0, 0x41, 0x20, 0x42, 0x43, 0xc0, 0x82, 0x43, 0xff, 0x55, 0x20, 0xf9, 0x88,
   0x00, 0x00, 0xc7, 0xa2, 0x00, 0xff, 0x02, 0x80, 0xea, 0xff, 0x8a, 0x6e, 0xf2,
   0xa6, 0xc8, 0x03, 0xd0, 0x3f, 0x87, 0xcc, 0xeb, 0x80, 0x10, 0xc5, 0x68, 0x00,
   0x46, 0xc0, 0x21, 0x20, 0x04, 0x80, 0x6a, 0xff, 0xf2, 0xff, 0xff, 0xff, 0x04,
   0x80, 0xee, 0x00, 0xf2, 0xff, 0xff, 0xff,
};

static const uint32_t spm_load_8X_7_buffers_const_dest[14] = {
   37, 36, 39, 38, 41, 40, 43, 42, 45, 44, 47, 46, 49, 48,
};

static const struct pvr_shader_factory_info spm_load_8X_7_buffers_info = {
   16,
   64,
   0,
   0,
   0,
   sizeof(spm_load_8X_7_buffers_shader_code),
   spm_load_8X_7_buffers_shader_code,
   0,
   0,
   NULL,
   4294967295,
   0,
   spm_load_8X_7_buffers_const_dest,
   14,
   NULL,
   0,
};

static struct {
   const uint8_t *code;
   const uint32_t size;
   const struct pvr_shader_factory_info *info;
} const spm_load_collection[40] = {
   { spm_load_1X_1_regs_shader_code,
     sizeof(spm_load_1X_1_regs_shader_code),
     &spm_load_1X_1_regs_info },
   { spm_load_1X_2_regs_shader_code,
     sizeof(spm_load_1X_2_regs_shader_code),
     &spm_load_1X_2_regs_info },
   { spm_load_1X_4_regs_shader_code,
     sizeof(spm_load_1X_4_regs_shader_code),
     &spm_load_1X_4_regs_info },
   { spm_load_1X_1_buffers_shader_code,
     sizeof(spm_load_1X_1_buffers_shader_code),
     &spm_load_1X_1_buffers_info },
   { spm_load_1X_2_buffers_shader_code,
     sizeof(spm_load_1X_2_buffers_shader_code),
     &spm_load_1X_2_buffers_info },
   { spm_load_1X_3_buffers_shader_code,
     sizeof(spm_load_1X_3_buffers_shader_code),
     &spm_load_1X_3_buffers_info },
   { spm_load_1X_4_buffers_shader_code,
     sizeof(spm_load_1X_4_buffers_shader_code),
     &spm_load_1X_4_buffers_info },
   { spm_load_1X_5_buffers_shader_code,
     sizeof(spm_load_1X_5_buffers_shader_code),
     &spm_load_1X_5_buffers_info },
   { spm_load_1X_6_buffers_shader_code,
     sizeof(spm_load_1X_6_buffers_shader_code),
     &spm_load_1X_6_buffers_info },
   { spm_load_1X_7_buffers_shader_code,
     sizeof(spm_load_1X_7_buffers_shader_code),
     &spm_load_1X_7_buffers_info },
   { spm_load_2X_1_regs_shader_code,
     sizeof(spm_load_2X_1_regs_shader_code),
     &spm_load_2X_1_regs_info },
   { spm_load_2X_2_regs_shader_code,
     sizeof(spm_load_2X_2_regs_shader_code),
     &spm_load_2X_2_regs_info },
   { spm_load_2X_4_regs_shader_code,
     sizeof(spm_load_2X_4_regs_shader_code),
     &spm_load_2X_4_regs_info },
   { spm_load_2X_1_buffers_shader_code,
     sizeof(spm_load_2X_1_buffers_shader_code),
     &spm_load_2X_1_buffers_info },
   { spm_load_2X_2_buffers_shader_code,
     sizeof(spm_load_2X_2_buffers_shader_code),
     &spm_load_2X_2_buffers_info },
   { spm_load_2X_3_buffers_shader_code,
     sizeof(spm_load_2X_3_buffers_shader_code),
     &spm_load_2X_3_buffers_info },
   { spm_load_2X_4_buffers_shader_code,
     sizeof(spm_load_2X_4_buffers_shader_code),
     &spm_load_2X_4_buffers_info },
   { spm_load_2X_5_buffers_shader_code,
     sizeof(spm_load_2X_5_buffers_shader_code),
     &spm_load_2X_5_buffers_info },
   { spm_load_2X_6_buffers_shader_code,
     sizeof(spm_load_2X_6_buffers_shader_code),
     &spm_load_2X_6_buffers_info },
   { spm_load_2X_7_buffers_shader_code,
     sizeof(spm_load_2X_7_buffers_shader_code),
     &spm_load_2X_7_buffers_info },
   { spm_load_4X_1_regs_shader_code,
     sizeof(spm_load_4X_1_regs_shader_code),
     &spm_load_4X_1_regs_info },
   { spm_load_4X_2_regs_shader_code,
     sizeof(spm_load_4X_2_regs_shader_code),
     &spm_load_4X_2_regs_info },
   { spm_load_4X_4_regs_shader_code,
     sizeof(spm_load_4X_4_regs_shader_code),
     &spm_load_4X_4_regs_info },
   { spm_load_4X_1_buffers_shader_code,
     sizeof(spm_load_4X_1_buffers_shader_code),
     &spm_load_4X_1_buffers_info },
   { spm_load_4X_2_buffers_shader_code,
     sizeof(spm_load_4X_2_buffers_shader_code),
     &spm_load_4X_2_buffers_info },
   { spm_load_4X_3_buffers_shader_code,
     sizeof(spm_load_4X_3_buffers_shader_code),
     &spm_load_4X_3_buffers_info },
   { spm_load_4X_4_buffers_shader_code,
     sizeof(spm_load_4X_4_buffers_shader_code),
     &spm_load_4X_4_buffers_info },
   { spm_load_4X_5_buffers_shader_code,
     sizeof(spm_load_4X_5_buffers_shader_code),
     &spm_load_4X_5_buffers_info },
   { spm_load_4X_6_buffers_shader_code,
     sizeof(spm_load_4X_6_buffers_shader_code),
     &spm_load_4X_6_buffers_info },
   { spm_load_4X_7_buffers_shader_code,
     sizeof(spm_load_4X_7_buffers_shader_code),
     &spm_load_4X_7_buffers_info },
   { spm_load_8X_1_regs_shader_code,
     sizeof(spm_load_8X_1_regs_shader_code),
     &spm_load_8X_1_regs_info },
   { spm_load_8X_2_regs_shader_code,
     sizeof(spm_load_8X_2_regs_shader_code),
     &spm_load_8X_2_regs_info },
   { spm_load_8X_4_regs_shader_code,
     sizeof(spm_load_8X_4_regs_shader_code),
     &spm_load_8X_4_regs_info },
   { spm_load_8X_1_buffers_shader_code,
     sizeof(spm_load_8X_1_buffers_shader_code),
     &spm_load_8X_1_buffers_info },
   { spm_load_8X_2_buffers_shader_code,
     sizeof(spm_load_8X_2_buffers_shader_code),
     &spm_load_8X_2_buffers_info },
   { spm_load_8X_3_buffers_shader_code,
     sizeof(spm_load_8X_3_buffers_shader_code),
     &spm_load_8X_3_buffers_info },
   { spm_load_8X_4_buffers_shader_code,
     sizeof(spm_load_8X_4_buffers_shader_code),
     &spm_load_8X_4_buffers_info },
   { spm_load_8X_5_buffers_shader_code,
     sizeof(spm_load_8X_5_buffers_shader_code),
     &spm_load_8X_5_buffers_info },
   { spm_load_8X_6_buffers_shader_code,
     sizeof(spm_load_8X_6_buffers_shader_code),
     &spm_load_8X_6_buffers_info },
   { spm_load_8X_7_buffers_shader_code,
     sizeof(spm_load_8X_7_buffers_shader_code),
     &spm_load_8X_7_buffers_info },
};

#endif /* PVR_STATIC_SHADERS_H */
